{"ast":null,"code":"var _jsxFileName = \"/home/manuel/git/BookflixOficial/BookflixConDisenio/front-end/src/components/VistaAdmin/Trailers/CargarTrailer.js\";\nimport React, { Component } from '../../../../node_modules/react';\nimport '../../../../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport DatePicker from '../../../../node_modules/react-datepicker';\nimport '../../../../node_modules/react-datepicker/dist/react-datepicker.css';\nimport axios from '../../../../node_modules/axios';\nimport { Redirect } from 'react-router-dom';\nconst cargar = 'http://localhost:4000/api/trailers/cargar';\nconst libros = 'http://localhost:4000/api/libros';\n/*CARGAR TRAILER\n- cargar trailer-> muy parecido a la novedad\n- titulo y descripcion obligatorios\n- libro asociado maximo y opcional\n- se puede cargar un pdf - opcional\n- se puede cargar un video - opcional*/\n\nclass CargarTrailer extends Component {\n  constructor() {\n    super();\n\n    this.onSubmit = async e => {\n      e.preventDefault();\n      const formData = new FormData();\n      formData.append('titulo', this.state.titulo);\n      formData.append('descripcion', this.state.descripcion);\n      formData.append('portadaImg', this.state.archivo);\n      formData.append('video', this.state.esvideo);\n      formData.append('libro', this.state.libroseleccionado);\n      axios.post(cargar, formData, {\n        headers: {\n          'xaccess': this.state.token\n        }\n      }).then(res => {\n        alert(JSON.stringify(res.data));\n        return /*#__PURE__*/React.createElement(Redirect, {\n          to: \"http://localhost:3000/trailers\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 25\n          }\n        });\n      }).catch(err => {\n        alert(JSON.stringify(err.response.data.msg));\n      });\n    };\n\n    this.onInputChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.state = {\n      user: JSON.parse(sessionStorage.getItem('user')),\n      token: sessionStorage.getItem('token'),\n      titulo: '',\n      descripcion: '',\n      libroseleccionado: null,\n      archivo: null,\n      esvideo: false\n    };\n    this.getPdf = this.getPdf.bind(this);\n    this.getVideo = this.getVideo.bind(this);\n  }\n\n  getPdf(e) {\n    this.setState({\n      archivo: e.target.files[0]\n    });\n  }\n\n  getVideo(e) {\n    this.setState({\n      archivo: e.target.files[0],\n      esvideo: true\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-novedad\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-6 offset-md-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card card-body text-light bg-dark\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      className: \"card-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }\n    }, \"Cargar Trailer\"), /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.onSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 13\n      }\n    }, \"Titulo\"), /*#__PURE__*/React.createElement(\"input\", {\n      className: \"form-control\",\n      id: \"exampleFormControlInput1\",\n      name: \"titulo\",\n      onChange: this.onInputChange,\n      value: this.state.titulo,\n      placeholder: \"T\\xEDtulo\",\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 13\n      }\n    }, \"Descripci\\xF3n\"), /*#__PURE__*/React.createElement(\"textarea\", {\n      className: \"form-control\",\n      id: \"exampleFormControlTextarea1\",\n      rows: \"3\",\n      name: \"descripcion\",\n      onChange: this.onInputChange,\n      value: this.state.descripcion,\n      placeholder: \"Descripci\\xF3n\",\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(\"label\", {\n      className: \"text-light\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 13\n      }\n    }, \"Seleccione Archivo PDF (Opcional)\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"file\",\n      encType: \"multipart/form-data\",\n      name: \"ArchivoPDF\",\n      onChange: this.getPdf,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 16\n      }\n    })), /*#__PURE__*/React.createElement(\"label\", {\n      className: \"text-light\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 13\n      }\n    }, \"Seleccione un Video (Opcional)\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"file\",\n      encType: \"multipart/form-data\",\n      name: \"Video\",\n      onChange: this.getVideo,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 16\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"btn btn-success float-right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 17\n      }\n    }, \"Agregar\"))))));\n  }\n\n}\n\nexport default CargarTrailer;","map":{"version":3,"sources":["/home/manuel/git/BookflixOficial/BookflixConDisenio/front-end/src/components/VistaAdmin/Trailers/CargarTrailer.js"],"names":["React","Component","DatePicker","axios","Redirect","cargar","libros","CargarTrailer","constructor","onSubmit","e","preventDefault","formData","FormData","append","state","titulo","descripcion","archivo","esvideo","libroseleccionado","post","headers","token","then","res","alert","JSON","stringify","data","catch","err","response","msg","onInputChange","setState","target","name","value","user","parse","sessionStorage","getItem","getPdf","bind","getVideo","files","render"],"mappings":"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","sourcesContent":["import React, { Component } from '../../../../node_modules/react'\nimport '../../../../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport DatePicker from '../../../../node_modules/react-datepicker';\nimport '../../../../node_modules/react-datepicker/dist/react-datepicker.css';\nimport axios from '../../../../node_modules/axios';\nimport {  Redirect } from 'react-router-dom';\n\nconst cargar = 'http://localhost:4000/api/trailers/cargar';\nconst libros = 'http://localhost:4000/api/libros';\n\n/*CARGAR TRAILER\n- cargar trailer-> muy parecido a la novedad\n- titulo y descripcion obligatorios\n- libro asociado maximo y opcional\n- se puede cargar un pdf - opcional\n- se puede cargar un video - opcional*/ \n\nclass CargarTrailer extends Component {\n\n    constructor(){\n        super();\n            this.state = {\n                user: JSON.parse(sessionStorage.getItem('user')),\n                token: sessionStorage.getItem('token'),\n                titulo: '',\n                descripcion: '',\n                libroseleccionado:null,\n                archivo: null, \n                esvideo: false,\n\n    };\n        this.getPdf=this.getPdf.bind(this);\n        this.getVideo=this.getVideo.bind(this);\n\n    }\n    \n    \n\n    onSubmit = async (e) => {\n        e.preventDefault();\n        const formData = new FormData();\n        formData.append('titulo', this.state.titulo);\n        formData.append('descripcion', this.state.descripcion);\n        formData.append('portadaImg',this.state.archivo); \n        formData.append('video', this.state.esvideo);\n        formData.append('libro',this.state.libroseleccionado);\n    \n    \n        axios.post(cargar,formData,{\n                headers: { 'xaccess':this.state.token }\n            })\n            .then(res => {\n                alert(JSON.stringify(res.data));\n                return( <Redirect to=\"http://localhost:3000/trailers\" />)\n            })\n    \n            .catch(err => {\n                alert(JSON.stringify(err.response.data.msg))\n            } );\n            \n    };\n\n    onInputChange = (e) => {\n        this.setState({\n            [e.target.name]: e.target.value\n        })\n    };\n    \n\n    getPdf(e){\n        \n        this.setState({\n            archivo: e.target.files[0]\n            \n        })\n\n    }\n\n    getVideo(e){\n        \n        this.setState({\n            archivo: e.target.files[0],\n            esvideo:true\n        })\n\n    }\n\n    render(){\n        return (\n        <div className=\"form-novedad\" >\n        \n        <div className=\"col-md-6 offset-md-3\">\n        <div className=\"card card-body text-light bg-dark\">\n        <h2 className=\"card-header\">Cargar Trailer</h2>\n        \n        <form onSubmit={this.onSubmit} >\n           \n        \n            \n            <div className=\"form-group\">\n            <h5>Titulo</h5>\n                <input \n                    className=\"form-control\" \n                    id=\"exampleFormControlInput1\" \n                    name =\"titulo\"\n                    onChange={this.onInputChange}\n                    value={this.state.titulo}\n                    placeholder=\"Título\"\n                    required>\n                </input>\n            </div>\n\n            <div className=\"form-group\">\n            <h5>Descripción</h5>\n                <textarea className=\"form-control\" \n                    id=\"exampleFormControlTextarea1\" \n                    rows=\"3\"\n                    name =\"descripcion\"\n                    onChange={this.onInputChange}\n                    value={this.state.descripcion}\n                    placeholder=\"Descripción\"\n                    required >\n                </textarea> \n            </div>\n        \n            <label className=\"text-light\">Seleccione Archivo PDF (Opcional)</label>\n            <div className=\"form-group\">\n\n               <input type='file' encType=\"multipart/form-data\" name='ArchivoPDF' onChange={this.getPdf}>\n               </input>\n                \n            </div >\n\n            <label className=\"text-light\">Seleccione un Video (Opcional)</label>\n            <div className=\"form-group\">\n\n               <input type='file' encType=\"multipart/form-data\" name='Video' onChange={this.getVideo}>\n               </input>\n            </div >\n\n            <div className=\"form-group\">\n                <button type =\"submit\" className=\"btn btn-success float-right\">\n                    Agregar          \n                </button>\n            </div>\n                    \n          \n         </form>\n         </div>\n         </div>   \n         </div>\n        )\n    }\n}\n\n\nexport default CargarTrailer;"]},"metadata":{},"sourceType":"module"}