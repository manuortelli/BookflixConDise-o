{"ast":null,"code":"var _jsxFileName = \"/home/manuel/bookflixdise\\xF1o/BookflixConDisenio/front-end/src/components/HomePerfiles.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport ItemPerfil from './ItemPerfil';\nimport { Link } from 'react-router-dom'; //Poner constante a la cual le hacemos la consulta de nuestros pefiles como suscriptor\n\nconst perfilesApi = 'http://localhost:4000/api/suscriptores/loginPerfiles';\nconst miperfilApi = 'http://localhost:4000/api/perfiles/me';\nconst loginPerfilApi = 'http://localhost:4000/api/suscriptores/loginPerfil';\n\nclass ListarPerfiles extends Component {\n  constructor() {\n    super();\n\n    this.nombrePerfil = async idDelPerfil => {\n      await axios.post(miperfilApi, {\n        id: idDelPerfil\n      }, {\n        headers: {\n          'xaccess': sessionStorage.getItem('token')\n        }\n      }).then(res => {\n        this.state.perfilesNombre.push(res.data.nombre);\n      });\n    };\n\n    this.verNombre = index => {\n      console.log(this.state.perfilesNombre[index]);\n    };\n\n    this.state = {\n      token: sessionStorage.getItem('token'),\n      perfiles: [],\n      perfilesNombre: []\n    };\n    this.nombrePerfil = this.nombrePerfil.bind(this);\n    this.verNombre = this.verNombre.bind(this);\n  }\n\n  async irAHomeDePerfil(e) {\n    const idPerfil = this.state.perfiles[e.value];\n    await axios.post(loginPerfilApi, {\n      id: idPerfil\n    }, {\n      headers: {\n        'xaccess': sessionStorage.getItem('token')\n      }\n    }).then(res => {\n      console.log(res); //REDIRECT A HOME\n    });\n  }\n\n  async componentDidUpdate() {\n    this.state.perfiles.map(perfil => {\n      this.nombrePerfil(perfil);\n    });\n  }\n\n  async componentWillMount() {\n    await axios.get(perfilesApi, {\n      headers: {\n        'xaccess': sessionStorage.getItem('token')\n      }\n    }).then(res => {\n      this.setState({\n        perfiles: res.data\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card col-md-6 offset-md-3 text-light bg-dark display-flex center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }\n    }, this.state.perfilesNombre.map((nombre, index) => {\n      this.verNombre(index);\n    }))));\n  }\n\n}\n\nexport default ListarPerfiles;\n/*\n <form onSubmit={this.irAHomeDePerfil()}>\n                <div>\n                {this.state.perfilesNombre.map((nombre,index) => \n                       <div>    Nombre del perfil:{ nombre, index } </div>\n\n                    \n                )}\n                </div>\n                </form>\n                \n*/","map":{"version":3,"sources":["/home/manuel/bookflixdiseÃ±o/BookflixConDisenio/front-end/src/components/HomePerfiles.js"],"names":["React","Component","axios","ItemPerfil","Link","perfilesApi","miperfilApi","loginPerfilApi","ListarPerfiles","constructor","nombrePerfil","idDelPerfil","post","id","headers","sessionStorage","getItem","then","res","state","perfilesNombre","push","data","nombre","verNombre","index","console","log","token","perfiles","bind","irAHomeDePerfil","e","idPerfil","value","componentDidUpdate","map","perfil","componentWillMount","get","setState","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\nimport ItemPerfil from './ItemPerfil';\nimport { Link } from 'react-router-dom';\n\n\n\n//Poner constante a la cual le hacemos la consulta de nuestros pefiles como suscriptor\nconst perfilesApi = 'http://localhost:4000/api/suscriptores/loginPerfiles'\nconst miperfilApi = 'http://localhost:4000/api/perfiles/me'\nconst loginPerfilApi = 'http://localhost:4000/api/suscriptores/loginPerfil'\n\nclass ListarPerfiles extends Component{\n    constructor(){\n        super();\n        this.state={\n            token: sessionStorage.getItem('token'),\n            perfiles: [],\n            perfilesNombre: [],\n            \n        }\n        this.nombrePerfil = this.nombrePerfil.bind(this);\n        this.verNombre = this.verNombre.bind(this);\n    }\n\n\n\n   nombrePerfil = async (idDelPerfil)=> {\n       \n        await axios.post( miperfilApi,\n            {id: idDelPerfil},\n            {headers: {'xaccess':sessionStorage.getItem('token')}  \n        }).then(res =>{\n            this.state.perfilesNombre.push(res.data.nombre) });\n       \n       \n    }\n\n    async irAHomeDePerfil(e){\n        \n        const idPerfil = this.state.perfiles[e.value];\n        await axios.post (loginPerfilApi,\n                {id:idPerfil},\n                {headers: {'xaccess':sessionStorage.getItem('token')} \n            })\n            .then(res => {\n                console.log(res)\n                //REDIRECT A HOME\n\n            });\n\n        \n\n    }\n\n    \n    verNombre = (index) => {\n        console.log(this.state.perfilesNombre[index]);\n        \n    }\n\n    async componentDidUpdate() {\n\n        this.state.perfiles.map((perfil)=>{\n            this.nombrePerfil(perfil)\n        })\n    }\n    \n    async componentWillMount(){\n    \n        await axios.get( perfilesApi,\n            {headers: {'xaccess': sessionStorage.getItem('token')}}\n       ) \n       .then (res => {\n           this.setState({perfiles:res.data});\n       }) \n                 \n    }\n\n    \n\n    render(){\n        return(\n            <div className=\"container\">\n            <div className=\"card col-md-6 offset-md-3 text-light bg-dark display-flex center\" >\n                \n                <li>\n                    { \n                        this.state.perfilesNombre.map((nombre , index)=>{\n                            this.verNombre(index);\n\n                        })\n\n                    }\n                        \n               </li>  \n                        \n            </div>\n            </div>\n                   \n                \n            \n        )\n    }\n\n}\n\n\n\nexport default ListarPerfiles;\n/*\n <form onSubmit={this.irAHomeDePerfil()}>\n                <div>\n                {this.state.perfilesNombre.map((nombre,index) => \n                       <div>    Nombre del perfil:{ nombre, index } </div>\n\n                    \n                )}\n                </div>\n                </form>\n                \n*/"]},"metadata":{},"sourceType":"module"}