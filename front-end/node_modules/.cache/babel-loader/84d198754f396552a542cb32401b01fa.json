{"ast":null,"code":"var _jsxFileName = \"/home/manuel/git/BookflixOficialDonna/bf/front-end/src/components/VistaSuscriptor/Perfiles/ListadoPerfiles.js\";\nimport React, { Component } from 'react';\nimport { Link, Redirect } from 'react-router-dom';\nimport axios from 'axios';\nimport homesuscriptor from '../HomeSuscriptor';\nconst loginPerfilApi = \"http://localhost:4000/api/suscriptores/loginPerfil\";\nconst misPerfiles = \"http://localhost:4000/api/suscriptores/loginPerfiles\";\nconst borrarPerfil = \"http://localhost:4000/api/perfiles/eliminar\";\n\nclass ListadoPerfiles extends Component {\n  constructor() {\n    super();\n\n    this.ingresarPerfil = async (e, idllega) => {\n      console.log(\"id que llega \", idllega);\n      await axios.post(loginPerfilApi, {\n        id: idllega\n      }, {\n        headers: {\n          xaccess: sessionStorage.getItem(\"token\")\n        }\n      }).then(res => {\n        const {\n          user,\n          token\n        } = res.data;\n        sessionStorage.setItem(\"token\", token);\n        sessionStorage.setItem(\"perfilUser\", JSON.stringify(user));\n        sessionStorage.setItem(\"perfil\", res.data.user);\n        sessionStorage.setItem(\"perfilID\", user._id);\n        return window.location = '/homesuscriptor';\n      });\n    };\n\n    this.borrarperfil = async (e, idllega) => {\n      if (this.state.misPerfiles.length > 1) {\n        await axios.post(borrarPerfil, {\n          suscriptorId: this.state.suscripcion.user._id,\n          perfilId: idllega\n        }, {\n          headers: {\n            'xaccess': sessionStorage.getItem('token')\n          }\n        }).then(res => {\n          console.log(res.data);\n          window.location.reload(true);\n        }).catch(err => {\n          alert(err.response);\n        });\n      } else {\n        alert(\"No puedes eliminar el unico perfil que tienes\");\n      }\n    };\n\n    this.getPerfiles = async () => {\n      await axios.get(misPerfiles, {\n        headers: {\n          'xaccess': sessionStorage.getItem('tokenSuscriptor')\n        }\n      }).then(res => {\n        this.setState({\n          misPerfiles: res.data\n        });\n      }).catch(err => {\n        alert(err.response);\n      });\n    };\n\n    this.componentDidMount = async () => {\n      this.getPerfiles();\n    };\n\n    this.state = {\n      token: sessionStorage.getItem(\"token\"),\n      suscripcion: JSON.parse(sessionStorage.getItem(\"user\")),\n      Perfil: JSON.parse(sessionStorage.getItem(\"perfilUser\")),\n      misPerfiles: []\n    };\n  }\n\n  render() {\n    console.log(this.state.misPerfiles);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 13\n      }\n    }, this.state.misPerfiles.map(perfil => /*#__PURE__*/React.createElement(\"div\", {\n      className: \"cardListarPerfil\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 25\n      }\n    }, \" \", perfil.nombre, \" \"), \" \", /*#__PURE__*/React.createElement(\"button\", {\n      onClick: e => {\n        this.borrarperfil(e, perfil.id);\n      },\n      className: \"btn btn-outline-danger itemBoton float-right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 52\n      }\n    }, \"Eliminar\"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: e => {\n        this.ingresarPerfil(e, perfil.id);\n      },\n      className: \"btn btn-outline-danger itemBoton float-right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 25\n      }\n    }, \"Ingresar\"))));\n  }\n\n}\n\nexport default ListadoPerfiles;","map":{"version":3,"sources":["/home/manuel/git/BookflixOficialDonna/bf/front-end/src/components/VistaSuscriptor/Perfiles/ListadoPerfiles.js"],"names":["React","Component","Link","Redirect","axios","homesuscriptor","loginPerfilApi","misPerfiles","borrarPerfil","ListadoPerfiles","constructor","ingresarPerfil","e","idllega","console","log","post","id","headers","xaccess","sessionStorage","getItem","then","res","user","token","data","setItem","JSON","stringify","_id","window","location","borrarperfil","state","length","suscriptorId","suscripcion","perfilId","reload","catch","err","alert","response","getPerfiles","get","setState","componentDidMount","parse","Perfil","render","map","perfil","nombre"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Link ,Redirect} from 'react-router-dom';\nimport axios from 'axios';\nimport homesuscriptor from '../HomeSuscriptor';\n\n\nconst loginPerfilApi = \"http://localhost:4000/api/suscriptores/loginPerfil\";\nconst misPerfiles = \"http://localhost:4000/api/suscriptores/loginPerfiles\";\nconst borrarPerfil = \"http://localhost:4000/api/perfiles/eliminar\";\n\nclass ListadoPerfiles extends Component {\n    constructor() {\n        super();\n        this.state = {\n            token: sessionStorage.getItem(\"token\"),\n            suscripcion: JSON.parse(sessionStorage.getItem(\"user\")),\n            Perfil: JSON.parse(sessionStorage.getItem(\"perfilUser\")),\n            misPerfiles: []\n        }\n    }\n\n\n    ingresarPerfil = async (e, idllega) => {\n        console.log(\"id que llega \" ,idllega)\n        await axios\n      .post(\n        loginPerfilApi,\n         { id: idllega } ,\n        {\n          headers: { xaccess: sessionStorage.getItem(\"token\") },\n        }\n      )\n      .then((res) => {\n\n        const { user, token } = res.data;\n        sessionStorage.setItem(\"token\", token);\n        sessionStorage.setItem(\"perfilUser\", JSON.stringify(user));\n        sessionStorage.setItem(\"perfil\", res.data.user);\n        sessionStorage.setItem(\"perfilID\", user._id);\n        return (window.location = '/homesuscriptor')\n\n\n        });\n      \n    }\n\n    borrarperfil = async (e, idllega) => {\n       if (this.state.misPerfiles.length>1){\n        await axios.post(borrarPerfil, \n            {suscriptorId: this.state.suscripcion.user._id,\n            perfilId: idllega },\n            {headers: { 'xaccess': sessionStorage.getItem('token') }\n        })\n            .then(res => {\n                console.log(res.data)\n                window.location.reload(true);\n            })\n            .catch(err => {\n                alert(err.response)\n            });\n\n        }  else {alert(\"No puedes eliminar el unico perfil que tienes\")} \n    }\n\n\n\n\n    getPerfiles = async () => {\n        await axios.get(misPerfiles, \n         \n            {\n            headers: { 'xaccess': sessionStorage.getItem('tokenSuscriptor') }\n        })\n            .then(res => {\n                this.setState({\n                    misPerfiles:res.data\n                })\n            })\n            .catch(err => {\n                alert(err.response)\n            });\n\n\n    }\n\n\n    componentDidMount = async () => {\n        this.getPerfiles();\n    }\n\n\n\n\n    render() {\n        console.log(this.state.misPerfiles)\n        return (\n            <div>\n\n                {this.state.misPerfiles.map(perfil =>\n                    <div className=\"cardListarPerfil\">\n                       \n                        <h5> {perfil.nombre} </h5> <button onClick={(e)=> {this.borrarperfil(e, perfil.id)}} className=\"btn btn-outline-danger itemBoton float-right\">Eliminar</button>\n                        <button onClick={(e)=> {this.ingresarPerfil(e, perfil.id)}} className=\"btn btn-outline-danger itemBoton float-right\">Ingresar</button>\n                        \n                    </div>\n\n                )}\n\n            </div>\n        )\n\n    }\n}\n\nexport default ListadoPerfiles;"]},"metadata":{},"sourceType":"module"}