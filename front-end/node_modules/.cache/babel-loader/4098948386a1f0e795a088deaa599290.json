{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jhon\\\\Desktop\\\\proyectos-IS1\\\\version4.0\\\\bf\\\\front-end\\\\src\\\\components\\\\VistaSuscriptor\\\\Perfiles\\\\AgregarPerfil.js\";\nimport React, { Component } from 'react';\nimport 'react-confirm-alert/src/react-confirm-alert.css';\nimport axios from \"axios\";\nimport { Link } from 'react-router-dom';\nimport Perfiles from './ListadoPerfiles';\nimport { confirmAlert } from 'react-confirm-alert'; // Import\n\nconst misPerfiles = \"http://localhost:4000/api/suscriptores/loginPerfiles\";\nconst cargar = \"http://localhost:4000/api/suscriptores/agregarPerfil\";\nconst borrarPerfil = \"http://localhost:4000/api/perfiles/eliminar\";\nconst loginPerfilApi = \"http://localhost:4000/api/suscriptores/loginPerfil\";\n\nclass AgregarPerfil extends Component {\n  constructor() {\n    super();\n\n    this.ingresarPerfil = async (e, idllega) => {\n      console.log(\"id que llega \", idllega);\n      await axios.post(loginPerfilApi, {\n        id: idllega\n      }, {\n        headers: {\n          xaccess: sessionStorage.getItem(\"token\")\n        }\n      }).then(res => {\n        const {\n          user,\n          token\n        } = res.data;\n        sessionStorage.setItem(\"token\", token);\n        sessionStorage.setItem(\"perfilUser\", JSON.stringify(user));\n        sessionStorage.setItem(\"perfil\", res.data.user);\n        sessionStorage.setItem(\"perfilID\", user._id);\n        return window.location = '/homesuscriptor';\n      });\n    };\n\n    this.borrarperfil = async (e, idllega) => {\n      if (this.state.misPerfiles.length > 1) {\n        await axios.post(borrarPerfil, {\n          suscriptorId: this.state.suscripcion.user._id,\n          perfilId: idllega\n        }, {\n          headers: {\n            'xaccess': sessionStorage.getItem('token')\n          }\n        }).then(res => {\n          console.log(res.data);\n          alert(\"¡Perfil eliminado con exito!\");\n          window.location.reload(true);\n        }).catch(err => {\n          alert(err.response);\n        });\n      } else {\n        alert(\"No puedes eliminar el unico perfil que tienes\");\n      }\n    };\n\n    this.getDatos = async () => {\n      await axios.get(misPerfiles, {\n        headers: {\n          'xaccess': sessionStorage.getItem('tokenSuscriptor')\n        }\n      }).then(res => {\n        this.setState({\n          misPerfiles: res.data\n        });\n      }).catch(err => {\n        alert(err.response);\n      });\n    };\n\n    this.componentDidMount = async () => {\n      this.getDatos();\n    };\n\n    this.verificarNombre = e => {\n      var nombreExistente = false;\n      e.preventDefault();\n      this.state.misPerfiles.map(perfil => {\n        if (perfil.nombre == this.state.nombre) {\n          alert(\"Debes usar otro nombre de perfil, este ya está en uso\");\n          nombreExistente = true;\n        }\n      });\n      this.onSubmit(nombreExistente);\n    };\n\n    this.onSubmit = async nombreExistente => {\n      if (nombreExistente == false) {\n        if (this.state.suscripcion.user.suscripcion === \"REGULAR\" && this.state.misPerfiles.length < 2) {\n          await axios.post(cargar, {\n            id: this.state.suscripcion.user._id,\n            nombre: this.state.nombre\n          }, {\n            headers: {\n              xaccess: this.state.token\n            }\n          }).then(res => {\n            alert(\"¡Perfil agregado con exito!\");\n            window.location.reload(true);\n          }).catch(err => {\n            console.log(err);\n            window.location.reload(true);\n          });\n        } else if (this.state.suscripcion.user.suscripcion === \"PREMIUM\" && this.state.misPerfiles.length < 4) {\n          await axios.post(cargar, {\n            id: this.state.suscripcion.user._id,\n            nombre: this.state.nombre\n          }, {\n            headers: {\n              xaccess: this.state.token\n            }\n          }).then(res => {\n            alert(\"¡Perfil agregado con exito!\");\n            window.location.reload(true);\n          }).catch(err => {\n            console.log(err);\n            alert(\"¡Perfil agregado con exito!\");\n            window.location.reload(true);\n          });\n        } else {\n          alert(\"No podes agregar otro perfil, ya estas en tu maximo permitido, borrá alguno para agregar otro\");\n        }\n      }\n    };\n\n    this.onInputChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.state = {\n      token: sessionStorage.getItem(\"token\"),\n      suscripcion: JSON.parse(sessionStorage.getItem(\"user\")),\n      miPerfil: JSON.parse(sessionStorage.getItem(\"perfilUser\")),\n      nombre: '',\n      misPerfiles: [],\n      nombreUsado: false\n    };\n    this.onInputChange = this.onInputChange.bind(this);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"cardAgregarPerfil col-md-6 offset-md-3 text-light bg-dark \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      className: \"card-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 17\n      }\n    }, \"Perfiles de \", this.state.suscripcion.user.nombre, \" \"), /*#__PURE__*/React.createElement(\"h5\", {\n      className: \"card-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 17\n      }\n    }, \"Suscripci\\xF3n: \", this.state.suscripcion.user.suscripcion, \" \"), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      className: \"card-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 23\n      }\n    }, \"Sus perfiles: \")), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 17\n      }\n    }, this.state.misPerfiles.map(perfil => /*#__PURE__*/React.createElement(\"div\", {\n      className: \"cardListarPerfil\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 29\n      }\n    }, \" \", perfil.nombre, \" \"), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-outline-danger itemBoton float-right\",\n      onClick: () => confirmAlert({\n        customUI: ({\n          onClose\n        }) => {\n          return /*#__PURE__*/React.createElement(\"div\", {\n            className: \"custom-ui\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 41\n            }\n          }, /*#__PURE__*/React.createElement(\"h1\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 45\n            }\n          }, \"\\xBFEst\\xE1 seguro?\"), ' ', /*#__PURE__*/React.createElement(\"p\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 45\n            }\n          }, \"\\xBFDesea eliminar este perfil?\"), ' ', /*#__PURE__*/React.createElement(\"button\", {\n            onClick: onClose,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 45\n            }\n          }, \"No\"), \" \", ' ', /*#__PURE__*/React.createElement(\"button\", {\n            onClick: e => {\n              this.borrarperfil(e, perfil.id);\n              onClose();\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 45\n            }\n          }, \"Si, deseo eliminar\"));\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 29\n      }\n    }, \"Eliminar\"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: e => {\n        this.ingresarPerfil(e, perfil.id);\n      },\n      className: \"btn btn-outline-danger itemBoton float-right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 29\n      }\n    }, \"Ingresar\")))), /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.verificarNombre,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      className: \"form-control\",\n      id: \"nombre\",\n      name: \"nombre\",\n      onChange: this.onInputChange,\n      placeholder: \"Nombre del nuevo perfil \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"btn  btn-outline-danger itemBoton float-right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 21\n      }\n    }, \"Agregar perfil\")));\n  }\n\n}\n\nexport default AgregarPerfil;","map":{"version":3,"sources":["C:/Users/Jhon/Desktop/proyectos-IS1/version4.0/bf/front-end/src/components/VistaSuscriptor/Perfiles/AgregarPerfil.js"],"names":["React","Component","axios","Link","Perfiles","confirmAlert","misPerfiles","cargar","borrarPerfil","loginPerfilApi","AgregarPerfil","constructor","ingresarPerfil","e","idllega","console","log","post","id","headers","xaccess","sessionStorage","getItem","then","res","user","token","data","setItem","JSON","stringify","_id","window","location","borrarperfil","state","length","suscriptorId","suscripcion","perfilId","alert","reload","catch","err","response","getDatos","get","setState","componentDidMount","verificarNombre","nombreExistente","preventDefault","map","perfil","nombre","onSubmit","onInputChange","target","name","value","parse","miPerfil","nombreUsado","bind","render","customUI","onClose"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport 'react-confirm-alert/src/react-confirm-alert.css';\r\nimport axios from \"axios\";\r\nimport { Link } from 'react-router-dom';\r\nimport Perfiles from './ListadoPerfiles';\r\nimport { confirmAlert } from 'react-confirm-alert'; // Import\r\n\r\nconst misPerfiles = \"http://localhost:4000/api/suscriptores/loginPerfiles\";\r\nconst cargar = \"http://localhost:4000/api/suscriptores/agregarPerfil\";\r\nconst borrarPerfil = \"http://localhost:4000/api/perfiles/eliminar\";\r\nconst loginPerfilApi = \"http://localhost:4000/api/suscriptores/loginPerfil\";\r\n\r\nclass AgregarPerfil extends Component {\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            token: sessionStorage.getItem(\"token\"),\r\n            suscripcion: JSON.parse(sessionStorage.getItem(\"user\")),\r\n            miPerfil: JSON.parse(sessionStorage.getItem(\"perfilUser\")),\r\n            nombre: '',\r\n            misPerfiles: [],\r\n            nombreUsado:false,\r\n        }\r\n    \r\n        this.onInputChange = this.onInputChange.bind(this);\r\n    \r\n    \r\n    \r\n    }\r\n    \r\n    ingresarPerfil = async (e, idllega) => {\r\n        console.log(\"id que llega \", idllega)\r\n        await axios\r\n            .post(\r\n                loginPerfilApi,\r\n                { id: idllega },\r\n                {\r\n                    headers: { xaccess: sessionStorage.getItem(\"token\") },\r\n                }\r\n            )\r\n            .then((res) => {\r\n    \r\n                const { user, token } = res.data;\r\n                sessionStorage.setItem(\"token\", token);\r\n                sessionStorage.setItem(\"perfilUser\", JSON.stringify(user));\r\n                sessionStorage.setItem(\"perfil\", res.data.user);\r\n                sessionStorage.setItem(\"perfilID\", user._id);\r\n                return (window.location = '/homesuscriptor')\r\n    \r\n    \r\n            });\r\n    \r\n    }\r\n    \r\n    borrarperfil = async (e, idllega) => {\r\n        if (this.state.misPerfiles.length > 1) {\r\n            await axios.post(borrarPerfil,\r\n                {\r\n                    suscriptorId: this.state.suscripcion.user._id,\r\n                    perfilId: idllega\r\n                },\r\n                {\r\n                    headers: { 'xaccess': sessionStorage.getItem('token') }\r\n                })\r\n                .then(res => {\r\n                    console.log(res.data)\r\n                    alert(\"¡Perfil eliminado con exito!\")\r\n                    window.location.reload(true);\r\n                    \r\n                })\r\n                .catch(err => {\r\n                    alert(err.response)\r\n                });\r\n    \r\n        } else { alert(\"No puedes eliminar el unico perfil que tienes\") }\r\n    }\r\n    \r\n    \r\n    \r\n    \r\n    getDatos = async () => {\r\n        await axios.get(misPerfiles,\r\n    \r\n            {\r\n                headers: { 'xaccess': sessionStorage.getItem('tokenSuscriptor') }\r\n            })\r\n            .then(res => {\r\n                this.setState({\r\n                    misPerfiles: res.data\r\n                })\r\n            })\r\n            .catch(err => {\r\n                alert(err.response)\r\n            });\r\n    \r\n    \r\n    \r\n    };\r\n    \r\n    \r\n    \r\n    componentDidMount = async () => {\r\n        this.getDatos();\r\n    }\r\n    \r\n    verificarNombre = (e) => {\r\n      var nombreExistente=false;\r\n      e.preventDefault();\r\n      this.state.misPerfiles.map ( perfil => {\r\n        if (perfil.nombre == this.state.nombre){\r\n            alert(\"Debes usar otro nombre de perfil, este ya está en uso\");\r\n            nombreExistente=true;\r\n        } })\r\n       \r\n          this.onSubmit(nombreExistente)\r\n        \r\n      \r\n    }\r\n    \r\n    \r\n    onSubmit = async (nombreExistente) => {\r\n      if (nombreExistente == false) {\r\n         if  (this.state.suscripcion.user.suscripcion === \"REGULAR\" && this.state.misPerfiles.length < 2) {\r\n            await axios.post(cargar,\r\n                {\r\n                    id: this.state.suscripcion.user._id,\r\n                    nombre: this.state.nombre\r\n                },\r\n                { headers: { xaccess: this.state.token } }\r\n            )\r\n                .then((res) => {\r\n                  alert(\"¡Perfil agregado con exito!\");\r\n                    window.location.reload(true);\r\n    \r\n    \r\n                })\r\n    \r\n                .catch((err) => {\r\n                    console.log(err);\r\n                    window.location.reload(true);\r\n    \r\n                });\r\n        } else if (this.state.suscripcion.user.suscripcion === \"PREMIUM\" && this.state.misPerfiles.length < 4) {\r\n            await axios.post(cargar,\r\n                {\r\n                    id: this.state.suscripcion.user._id,\r\n                    nombre: this.state.nombre\r\n                },\r\n                { headers: { xaccess: this.state.token } }\r\n            )\r\n                .then((res) => {\r\n                         alert(\"¡Perfil agregado con exito!\");\r\n                    window.location.reload(true);\r\n    \r\n                })\r\n    \r\n                .catch((err) => {\r\n                    console.log(err);\r\n                    alert(\"¡Perfil agregado con exito!\");\r\n                    window.location.reload(true);\r\n    \r\n                });\r\n        } else {\r\n            alert(\"No podes agregar otro perfil, ya estas en tu maximo permitido, borrá alguno para agregar otro\")\r\n    \r\n        }\r\n      }\r\n      \r\n    };\r\n    \r\n    \r\n    onInputChange = (e) => {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        })\r\n    \r\n    };\r\n    \r\n    \r\n    render() {\r\n        return (\r\n    \r\n            <div className=\"cardAgregarPerfil col-md-6 offset-md-3 text-light bg-dark \">\r\n                <h4 className=\"card-header\">Perfiles de {this.state.suscripcion.user.nombre} </h4>\r\n                <h5 className=\"card-header\">Suscripción: {this.state.suscripcion.user.suscripcion} </h5>\r\n                <span><h5 className=\"card-header\">Sus perfiles: </h5></span>\r\n    \r\n                <div>\r\n    \r\n                    {this.state.misPerfiles.map(perfil =>\r\n                        <div className=\"cardListarPerfil\">\r\n    \r\n                            <h5> {perfil.nombre} </h5>\r\n                            <button className=\"btn btn-outline-danger itemBoton float-right\" onClick={() => confirmAlert({\r\n                                customUI: ({ onClose }) => {\r\n                                    return (\r\n                                        <div className='custom-ui'>\r\n                                            <h1>¿Está seguro?</h1>\r\n                                            {' '}\r\n                                            <p>¿Desea eliminar este perfil?</p>\r\n                                            {' '}\r\n                                            <button onClick={onClose}>No</button> {' '}\r\n                                            <button\r\n                                                onClick={(e) => { this.borrarperfil(e, perfil.id) \r\n                                                    onClose();\r\n    \r\n    \r\n    \r\n                                                }}\r\n                                            >\r\n                                                Si, deseo eliminar\r\n                                </button> \r\n                                </div>\r\n                                    );\r\n                                }\r\n                                         })}>Eliminar</button>\r\n                               \r\n                            <button onClick={(e) => { this.ingresarPerfil(e, perfil.id) }} className=\"btn btn-outline-danger itemBoton float-right\">Ingresar</button>\r\n    \r\n                        </div>\r\n    \r\n                    )}\r\n    \r\n                </div>\r\n    \r\n                <form onSubmit={this.verificarNombre} >\r\n    \r\n                    <div className=\"form-group\">\r\n                        <input className=\"form-control\"\r\n                            id=\"nombre\"\r\n                            name=\"nombre\"\r\n                            onChange={this.onInputChange}\r\n                            placeholder=\"Nombre del nuevo perfil \"\r\n                        >\r\n                        </input>\r\n                    </div>\r\n    \r\n    \r\n    \r\n                    <button type=\"submit\" className=\"btn  btn-outline-danger itemBoton float-right\">\r\n                        Agregar perfil\r\n                            </button>\r\n    \r\n    \r\n                </form>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n            </div>\r\n    \r\n    \r\n        )\r\n    }\r\n    }\r\n\r\nexport default AgregarPerfil;"]},"metadata":{},"sourceType":"module"}