{"ast":null,"code":"var _jsxFileName = \"/home/manuel/git/BookflixOficialDonna/bf/front-end/src/components/VistaSuscriptor/Rese\\xF1as/ItemRese\\xF1as.js\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from '../../../../node_modules/axios';\nimport { confirmAlert } from 'react-confirm-alert'; // Import\n\nimport 'react-confirm-alert/src/react-confirm-alert.css'; // Import css\n\nimport StarRatings from 'react-star-ratings';\nconst eliminar = 'http://localhost:4000/api/resenas/eliminar';\n\nclass ItemReseñas extends Component {\n  constructor(props) {\n    super(props);\n\n    this.eliminarReseña = async () => {\n      console.log(this.state.reseña);\n      await axios.post(eliminar, {\n        id: this.state.reseña._id,\n        autorId: this.state.reseña.autor.id,\n        libroId: this.props.libroId\n      }, {\n        headers: {\n          xaccess: this.state.token\n        }\n      }).then(res => {\n        console.log(res.data);\n        alert(JSON.stringify(res.data.msg));\n      }).catch(err => {\n        console.log(err.data);\n      });\n    };\n\n    this.marcarComoSpoiler = () => {};\n\n    this.handleChange = () => {\n      this.setState({\n        checked: !this.state.checked\n      });\n    };\n\n    this.mostrarReseña = () => {\n      this.setState({\n        mostrarReseña: false\n      });\n    };\n\n    this.modificarMiReseña = () => {\n      sessionStorage.setItem(this.state.reseña._id, JSON.stringify(this.state.reseña));\n    };\n\n    this.mostrarFecha = f => {\n      var fecha = new Date(f);\n      var meses = new Array(\"Enero\", \"Febrero\", \"Marzo\", \"Abril\", \"Mayo\", \"Junio\", \"Julio\", \"Agosto\", \"Septiembre\", \"Octubre\", \"Noviembre\", \"Diciembre\");\n      return fecha.getDate() + \" de \" + meses[fecha.getMonth()] + \" de \" + fecha.getFullYear() + \" a las \" + fecha.getHours() + \":\" + fecha.getMinutes() + \" hs \"; //return fecha.getDate() + \"/\" + (fecha.getMonth() +1) + \"/\" + fecha.getFullYear();\n    };\n\n    this.state = {\n      token: sessionStorage.getItem('token'),\n      reseña: props.reseña,\n      ranting: props.reseña.puntaje,\n      checked: props.reseña.spoiler,\n      mostrarReseña: this.props.reseña.spoiler,\n      esMiReseña: false,\n      perfil: JSON.parse(sessionStorage.getItem(\"perfilUser\"))\n    };\n  }\n\n  async componentDidMount() {\n    if (this.state.perfil._id == this.props.reseña.autor.id) {\n      this.setState({\n        esMiReseña: true\n      });\n    }\n  }\n\n  render() {\n    const esMiReseña = this.state.esMiReseña;\n    const show = this.state.mostrarReseña;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-novedad\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      class: \"card col-md-6 offset-md-3 text-light bg-dark\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      class: \"card-body\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      class: \"card-title \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 21\n      }\n    }, this.props.reseña.autor.nombre), /*#__PURE__*/React.createElement(StarRatings, {\n      rating: this.state.ranting,\n      starRatedColor: 'yellow',\n      numberOfStars: 5,\n      name: \"rating\",\n      starDimension: \"30px\",\n      starSpacing: \"15px\",\n      starHoverColor: \"yellow\",\n      starSelectingHoverColor: \"yellow\",\n      isSelectable: true,\n      isAggregateRating: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 25\n      }\n    }), show ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 30\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \" btn btn-outline-danger itemBoton\",\n      onClick: this.mostrarReseña,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 22\n      }\n    }, \"Mostrar Spoiler\")) : /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      class: \"card-title \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 28\n      }\n    }, \" \", this.props.reseña.comentario)), esMiReseña ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 34\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-outline-danger itemBoton\",\n      onClick: () => confirmAlert({\n        customUI: ({\n          onClose\n        }) => {\n          return /*#__PURE__*/React.createElement(\"div\", {\n            className: \"custom-ui\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 23\n            }\n          }, /*#__PURE__*/React.createElement(\"h1\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 25\n            }\n          }, \"\\xBFEst\\xE1 seguro?\"), \" \", /*#__PURE__*/React.createElement(\"button\", {\n            onClick: onClose,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 25\n            }\n          }, \"No\"), \" \", /*#__PURE__*/React.createElement(\"button\", {\n            onClick: () => {\n              this.eliminarReseña();\n              onClose();\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 25\n            }\n          }, \"Si, deseo eliminar\"));\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 25\n      }\n    }, \"Eliminar\"), \" \", /*#__PURE__*/React.createElement(Link, {\n      to: '/suscriptor/reseñas/mofificar/' + this.props.reseña._id,\n      className: \" btn btn-outline-danger itemBoton\",\n      onClick: this.modificarMiReseña,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 21\n      }\n    }, \"Modificar\")) : /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 22\n      }\n    }), /*#__PURE__*/React.createElement(\"h6\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 21\n      }\n    }, ''), /*#__PURE__*/React.createElement(\"h6\", {\n      class: \"card-subtitle mb-2 text-light\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 15\n      }\n    }, \"Publicada el \", this.mostrarFecha(this.props.reseña.publicacion)), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 19\n      }\n    }))));\n  }\n\n}\n\nexport default ItemReseñas;","map":{"version":3,"sources":["/home/manuel/git/BookflixOficialDonna/bf/front-end/src/components/VistaSuscriptor/Reseñas/ItemReseñas.js"],"names":["React","Component","Link","axios","confirmAlert","StarRatings","eliminar","ItemReseñas","constructor","props","eliminarReseña","console","log","state","reseña","post","id","_id","autorId","autor","libroId","headers","xaccess","token","then","res","data","alert","JSON","stringify","msg","catch","err","marcarComoSpoiler","handleChange","setState","checked","mostrarReseña","modificarMiReseña","sessionStorage","setItem","mostrarFecha","f","fecha","Date","meses","Array","getDate","getMonth","getFullYear","getHours","getMinutes","getItem","ranting","puntaje","spoiler","esMiReseña","perfil","parse","componentDidMount","render","show","nombre","comentario","customUI","onClose","publicacion"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from '../../../../node_modules/axios';\nimport { confirmAlert } from 'react-confirm-alert'; // Import\nimport 'react-confirm-alert/src/react-confirm-alert.css'; // Import css\nimport StarRatings from 'react-star-ratings';\n\nconst eliminar= 'http://localhost:4000/api/resenas/eliminar';\nclass ItemReseñas extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            token: sessionStorage.getItem('token'),\n            reseña:props.reseña,\n            ranting:props.reseña.puntaje,\n            checked:props.reseña.spoiler,\n            mostrarReseña:this.props.reseña.spoiler,\n            esMiReseña:false,\n            perfil: JSON.parse(sessionStorage.getItem(\"perfilUser\")),\n           \n        }\n      \n\n    }\n\n   \n    \n    async componentDidMount(){\n        if(this.state.perfil._id== this.props.reseña.autor.id){\n            this.setState({\n                esMiReseña:true,\n            })           \n\n        }\n       \n    }\n\n    eliminarReseña= async()=>{\n        console.log(this.state.reseña);\n        await axios\n        .post(\n            eliminar,\n            { id: this.state.reseña._id ,\n              autorId: this.state.reseña.autor.id,\n              libroId: this.props.libroId,\n\n            },\n            { headers: { xaccess: this.state.token } }\n        )\n        .then((res) => {\n            console.log(res.data);\n            alert(JSON.stringify(res.data.msg));\n         \n        })\n        .catch((err) => {\n            console.log(err.data);\n          \n        });\n\n    }\n\n    marcarComoSpoiler=()=>{\n\n    }\n    handleChange = () => {\n        this.setState({ checked: !this.state.checked })\n    }\n    mostrarReseña=()=>{\n        this.setState({\n            mostrarReseña:false\n        })\n    }\n    \n    modificarMiReseña=()=>{\n        sessionStorage.setItem(this.state.reseña._id,JSON.stringify(this.state.reseña));\n\n    }\n\n    mostrarFecha = (f) => {\n        var fecha = new Date(f);\n        var meses = new Array(\"Enero\", \"Febrero\", \"Marzo\", \"Abril\", \"Mayo\", \"Junio\", \"Julio\", \"Agosto\", \"Septiembre\", \"Octubre\", \"Noviembre\", \"Diciembre\");\n        return (fecha.getDate() + \" de \" + meses[fecha.getMonth()] + \" de \" + fecha.getFullYear()+ \" a las \" +fecha.getHours()+\":\" +fecha.getMinutes()+ \" hs \" );\n        //return fecha.getDate() + \"/\" + (fecha.getMonth() +1) + \"/\" + fecha.getFullYear();\n      }\n    render() {\n      \n        const esMiReseña= this.state.esMiReseña;\n        const show =this.state.mostrarReseña;    \n        return (\n            <div className='form-novedad'>\n                \n                <div class=\"card col-md-6 offset-md-3 text-light bg-dark\" >\n                    <div class=\"card-body\">\n\n                    <h5 class=\"card-title \">{this.props.reseña.autor.nombre}</h5>\n                        <StarRatings\n                        rating={this.state.ranting}\n                        starRatedColor={'yellow'}\n                        \n                        numberOfStars={5}\n                        name='rating'\n                        starDimension=\"30px\"\n                        starSpacing=\"15px\"\n                        starHoverColor=\"yellow\"\n                        starSelectingHoverColor=\"yellow\"\n                        isSelectable={true}\n                        isAggregateRating={true}\n\n                    />\n                     { show?(<div> \n                         \n                     <button className=' btn btn-outline-danger itemBoton'onClick={this.mostrarReseña} >Mostrar Spoiler</button>\n                     </div>\n                     ):\n                       \n                       (<div>\n                           <h5 class=\"card-title \"> {this.props.reseña.comentario}</h5>\n                        </div>)\n                       \n                    } \n                    {esMiReseña ?<div>\n                        <button\n              className=\"btn btn-outline-danger itemBoton\"\n              onClick={() =>\n                confirmAlert({\n                  customUI: ({ onClose }) => {\n                    return (\n                      <div className=\"custom-ui\">\n                        <h1>¿Está seguro?</h1>{\" \"}\n                        <button onClick={onClose}>No</button>{\" \"}\n                        <button\n                          onClick={() => {\n                            this.eliminarReseña();\n                            onClose();\n                          }}\n                        >\n                          Si, deseo eliminar\n                        </button>\n                      </div>\n                    );\n                  },\n                })\n              }\n            >\n              Eliminar\n            </button>{\" \"}\n                    <Link to={'/suscriptor/reseñas/mofificar/'+this.props.reseña._id} className=' btn btn-outline-danger itemBoton'onClick={this.modificarMiReseña} >Modificar</Link>\n                    </div>\n                    :<div></div>\n\n                    }\n                    <h6>{''}</h6>\n              <h6 class=\"card-subtitle mb-2 text-light\">Publicada el {this.mostrarFecha(this.props.reseña.publicacion)}</h6>\n                    \n\n                 \n                  <br></br>\n                  \n               \n                        \n                        \n                      \n                       \n                        \n                       </div>\n                    </div>\n                </div>\n           \n        )\n    }\n}\n\nexport default ItemReseñas;"]},"metadata":{},"sourceType":"module"}