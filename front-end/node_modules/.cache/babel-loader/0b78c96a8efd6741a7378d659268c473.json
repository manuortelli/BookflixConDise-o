{"ast":null,"code":"var _jsxFileName = \"/home/manuel/git/BookflixOficial/BookflixConDisenio/front-end/src/components/VistaAdmin/Trailers/CargarTrailer.js\";\nimport React, { Component } from '../../../../node_modules/react';\nimport '../../../../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport DatePicker from '../../../../node_modules/react-datepicker';\nimport '../../../../node_modules/react-datepicker/dist/react-datepicker.css';\nimport axios from '../../../../node_modules/axios';\nimport { Redirect } from 'react-router-dom';\nconst cargar = 'http://localhost:4000/api/trailers/cargar';\nconst libros = 'http://localhost:4000/api/libros/';\n/*CARGAR TRAILER\n- cargar trailer-> muy parecido a la novedad\n- titulo y descripcion obligatorios\n- libro asociado maximo y opcional\n- se puede cargar un pdf - opcional\n- se puede cargar un video - opcional*/\n\nclass CargarTrailer extends Component {\n  constructor() {\n    super();\n\n    this.onSubmit = async e => {\n      e.preventDefault();\n      const formData = new FormData();\n      formData.append('titulo', this.state.titulo);\n      formData.append('descripcion', this.state.descripcion);\n      formData.append('portadaImg', this.state.archivo);\n\n      if (this.state.video != 'nada') {\n        formData.append('video', this.state.esvideo);\n      }\n\n      if (this.state.libroseleccionado != null) {\n        formData.append('libro', this.state.libroseleccionado);\n      }\n\n      console.log(this.state.esvideo);\n      axios.post(cargar, formData, {\n        headers: {\n          'xaccess': this.state.token\n        }\n      }).then(res => {\n        alert('Trailer cargado con Ã©xito');\n      }).catch(err => {\n        alert(JSON.stringify(err.response.data.msg));\n      });\n    };\n\n    this.onInputChangeLibro = e => {\n      this.setState({\n        libroseleccionado: e.target.value\n      });\n      console.log(this.state.libroseleccionado);\n    };\n\n    this.onInputChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.getLibros = async () => {\n      const {\n        user\n      } = this.state.user;\n      await axios.get(libros, {\n        user: user,\n        headers: {\n          'xaccess': this.state.token\n        }\n      }).then(res => {\n        this.setState({\n          libros: res.data\n        });\n      }).catch();\n    };\n\n    this.state = {\n      user: JSON.parse(sessionStorage.getItem('user')),\n      token: sessionStorage.getItem('token'),\n      titulo: '',\n      descripcion: '',\n      libroseleccionado: null,\n      archivo: null,\n      esvideo: 'nada',\n      libros: []\n    };\n    this.getPdf = this.getPdf.bind(this);\n    this.getVideo = this.getVideo.bind(this);\n    this.getLibros = this.getLibros.bind(this);\n  }\n\n  getPdf(e) {\n    this.setState({\n      archivo: e.target.files[0],\n      esvideo: 'no'\n    });\n  }\n\n  getVideo(e) {\n    this.setState({\n      archivo: e.target.files[0],\n      esvideo: 'si'\n    });\n  }\n\n  async componentDidMount() {\n    this.getLibros();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-novedad\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-6 offset-md-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card card-body text-light bg-dark\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      className: \"card-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }\n    }, \"Cargar Trailer\"), /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.onSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 13\n      }\n    }, \"Titulo\"), /*#__PURE__*/React.createElement(\"input\", {\n      className: \"form-control\",\n      id: \"exampleFormControlInput1\",\n      name: \"titulo\",\n      onChange: this.onInputChange,\n      value: this.state.titulo,\n      placeholder: \"T\\xEDtulo\",\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 13\n      }\n    }, \"Descripci\\xF3n\"), /*#__PURE__*/React.createElement(\"textarea\", {\n      className: \"form-control\",\n      id: \"exampleFormControlTextarea1\",\n      rows: \"3\",\n      name: \"descripcion\",\n      onChange: this.onInputChange,\n      value: this.state.descripcion,\n      placeholder: \"Descripci\\xF3n\",\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"text-light\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 13\n      }\n    }, \" Seleccione un libro asociado (Opcional)\"), /*#__PURE__*/React.createElement(\"select\", {\n      className: \"form-control\",\n      onChange: this.onInputChangeLibro,\n      id: \"libroseleccionado\",\n      name: \"libroseleccionado\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 33\n      }\n    }, \"Libros para seleccionar\"), this.state.libros.map(libro => /*#__PURE__*/React.createElement(\"option\", {\n      key: libro._id,\n      value: libro._id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 37\n      }\n    }, \" \", libro.titulo)))), /*#__PURE__*/React.createElement(\"label\", {\n      className: \"text-light\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 13\n      }\n    }, \"Seleccione Archivo PDF (Opcional)\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"file\",\n      encType: \"multipart/form-data\",\n      name: \"ArchivoPDF\",\n      onChange: this.getPdf,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 16\n      }\n    })), /*#__PURE__*/React.createElement(\"label\", {\n      className: \"text-light\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 13\n      }\n    }, \"Seleccione un Video (Opcional)\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"file\",\n      encType: \"multipart/form-data\",\n      name: \"Video\",\n      onChange: this.getVideo,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 16\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"btn btn-success float-right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 17\n      }\n    }, \"Agregar\"))))));\n  }\n\n}\n\nexport default CargarTrailer;","map":{"version":3,"sources":["/home/manuel/git/BookflixOficial/BookflixConDisenio/front-end/src/components/VistaAdmin/Trailers/CargarTrailer.js"],"names":["React","Component","DatePicker","axios","Redirect","cargar","libros","CargarTrailer","constructor","onSubmit","e","preventDefault","formData","FormData","append","state","titulo","descripcion","archivo","video","esvideo","libroseleccionado","console","log","post","headers","token","then","res","alert","catch","err","JSON","stringify","response","data","msg","onInputChangeLibro","setState","target","value","onInputChange","name","getLibros","user","get","parse","sessionStorage","getItem","getPdf","bind","getVideo","files","componentDidMount","render","map","libro","_id"],"mappings":"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","sourcesContent":["import React, { Component } from '../../../../node_modules/react'\nimport '../../../../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport DatePicker from '../../../../node_modules/react-datepicker';\nimport '../../../../node_modules/react-datepicker/dist/react-datepicker.css';\nimport axios from '../../../../node_modules/axios';\nimport {  Redirect } from 'react-router-dom';\n\nconst cargar = 'http://localhost:4000/api/trailers/cargar';\nconst libros= 'http://localhost:4000/api/libros/';\n\n/*CARGAR TRAILER\n- cargar trailer-> muy parecido a la novedad\n- titulo y descripcion obligatorios\n- libro asociado maximo y opcional\n- se puede cargar un pdf - opcional\n- se puede cargar un video - opcional*/ \n\nclass CargarTrailer extends Component {\n\n    constructor(){\n        super();\n            this.state = {\n                user: JSON.parse(sessionStorage.getItem('user')),\n                token: sessionStorage.getItem('token'),\n                titulo: '',\n                descripcion: '',\n                libroseleccionado:null,\n                archivo: null, \n                esvideo: 'nada',\n                libros: [],\n\n\n    };\n        this.getPdf=this.getPdf.bind(this);\n        this.getVideo=this.getVideo.bind(this);\n        this.getLibros=this.getLibros.bind(this);\n        \n\n    }\n    \n    \n\n    onSubmit = async (e) => {\n        e.preventDefault();\n        const formData = new FormData();\n        formData.append('titulo', this.state.titulo);\n        formData.append('descripcion', this.state.descripcion);\n        formData.append('portadaImg',this.state.archivo); \n        if (this.state.video != 'nada'){\n            formData.append('video', this.state.esvideo);\n        }\n        \n            if (this.state.libroseleccionado != null){\n            formData.append('libro',this.state.libroseleccionado);\n        }\n        console.log(this.state.esvideo)\n    \n        axios.post(cargar,formData,{\n                headers: { 'xaccess':this.state.token }\n            })\n            .then(res => {\n                alert('Trailer cargado con Ã©xito');\n                \n            })\n            .catch(err => {\n                alert(JSON.stringify(err.response.data.msg))\n            } );\n            \n    };\n\n    onInputChangeLibro = (e) => {\n        this.setState({\n            libroseleccionado: e.target.value\n        })\n        console.log(this.state.libroseleccionado)\n       \n    };\n\n    onInputChange = (e) => {\n        this.setState({\n            [e.target.name]: e.target.value\n        })\n    };\n    \n\n    getPdf(e){\n        \n        this.setState({\n            archivo: e.target.files[0],\n            esvideo:'no'\n            \n        })\n\n    }\n\n    getVideo(e){\n        \n        this.setState({\n            archivo: e.target.files[0],\n            esvideo:'si'\n        })\n\n    }\n\n    getLibros = async () => {\n            const {user} = this.state.user;\n            await axios.get(libros,{\n                user: user,\n                headers:{'xaccess':this.state.token}  \n            })\n            .then(res =>{\n                this.setState({\n                    libros:res.data\n            })\n        })\n            .catch();\n    \n    }\n\n\n    async componentDidMount(){\n\n        this.getLibros();\n    }\n\n    render(){\n        return (\n        <div className=\"form-novedad\" >\n        \n        <div className=\"col-md-6 offset-md-3\">\n        <div className=\"card card-body text-light bg-dark\">\n        <h2 className=\"card-header\">Cargar Trailer</h2>\n        \n        <form onSubmit={this.onSubmit} >\n           \n        \n            \n            <div className=\"form-group\">\n            <h5>Titulo</h5>\n                <input \n                    className=\"form-control\" \n                    id=\"exampleFormControlInput1\" \n                    name =\"titulo\"\n                    onChange={this.onInputChange}\n                    value={this.state.titulo}\n                    placeholder=\"TÃ­tulo\"\n                    required>\n                </input>\n            </div>\n\n            <div className=\"form-group\">\n            <h5>DescripciÃ³n</h5>\n                <textarea className=\"form-control\" \n                    id=\"exampleFormControlTextarea1\" \n                    rows=\"3\"\n                    name =\"descripcion\"\n                    onChange={this.onInputChange}\n                    value={this.state.descripcion}\n                    placeholder=\"DescripciÃ³n\"\n                    required >\n                </textarea> \n            </div>\n\n            <div>\n            <label className=\"text-light\"> Seleccione un libro asociado (Opcional)</label>\n            \n            <select className=\"form-control\"\n                                onChange={this.onInputChangeLibro}\n                                id=\"libroseleccionado\"\n                                name=\"libroseleccionado\"\n                                >\n                                <option  value=\"\">Libros para seleccionar</option>   \n                                {this.state.libros.map(libro =>\n                                    <option key={libro._id} value={libro._id}> {libro.titulo}</option>\n                                )}\n                            </select>\n            </div> \n\n        \n            <label className=\"text-light\">Seleccione Archivo PDF (Opcional)</label>\n            <div className=\"form-group\">\n\n               <input type='file' encType=\"multipart/form-data\" name='ArchivoPDF' onChange={this.getPdf}>\n               </input>\n                \n            </div >\n\n            <label className=\"text-light\">Seleccione un Video (Opcional)</label>\n            <div className=\"form-group\">\n\n               <input type='file' encType=\"multipart/form-data\" name='Video' onChange={this.getVideo}>\n               </input>\n            </div >\n\n           \n         \n            <div className=\"form-group\">\n                <button type =\"submit\" className=\"btn btn-success float-right\">\n                    Agregar          \n                </button>\n            </div>\n                    \n          \n         </form>\n         </div>\n         </div>   \n         </div>\n        )\n    }\n}\n\n\nexport default CargarTrailer;"]},"metadata":{},"sourceType":"module"}