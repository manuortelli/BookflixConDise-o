{"ast":null,"code":"var _jsxFileName = \"D:\\\\Documentos\\\\GitHub\\\\bf\\\\front-end\\\\src\\\\components\\\\VistaSuscriptor\\\\Historial\\\\Historial.js\";\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nimport HistorialLibros from \"./HistorialLibros\"; //Constante a la cual hacemos la consulta\n\nconst librosApi = \"http://localhost:4000/api/libros/me\";\nconst capitulosApi = \"http://localhost:4000/api/libros/verCapitulo\";\nconst existeL = \"http://localhost:4000/api/libros/existeLibro\";\nconst existeC = \"http://localhost:4000/api/libros/existeCapitulo\";\nconst miperfilApi = \"http://localhost:4000/api/perfiles/me\";\nexport default class MiSuscripcion extends Component {\n  constructor(props) {\n    super(props);\n\n    this.renderLibros = () => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 7\n        }\n      }, (console.log(\"entro al renderLibros\"), this.state.libros.map(hola => {\n        console.log(hola);\n      })));\n    };\n\n    this.getLibro = async libro => {\n      await axios.post(librosApi, {\n        id: libro.libro\n      }, {\n        headers: {\n          xaccess: sessionStorage.getItem(\"token\")\n        }\n      }).then(res => {\n        var libroObjetoParaHistorial = {\n          archivo: res.data.archivo,\n          titulo: res.data.titulo,\n          ultimoAcceso: libro.ultimoAcceso,\n          terminado: libro.terminado,\n          libroInfoTotal: res.data\n        };\n        this.setState({\n          historialTodoJunto: [...this.state.historialTodoJunto, libroObjetoParaHistorial]\n        });\n      });\n    };\n\n    this.getCapitulo = async capitulo => {\n      await axios.post(capitulosApi, {\n        id: capitulo.capitulo\n      }, {\n        headers: {\n          xaccess: sessionStorage.getItem(\"token\")\n        }\n      }).then(res => {\n        var capituloObjetoParaHistorial = {\n          archivo: res.data.archivo,\n          titulo: res.data.titulo + res.data.n,\n          ultimoAcceso: libro.ultimoAcceso,\n          terminado: libro.terminado,\n          capituloInfoTotal: res.data\n        };\n        this.setState({\n          historialTodoJunto: [...this.state.historialTodoJunto, capituloObjetoParaHistorial]\n        });\n      });\n    };\n\n    this.state = {\n      token: sessionStorage.getItem(\"token\"),\n      miPerfil: [],\n      historialLibros: [],\n      historialCapitulos: [],\n      libros: [],\n      capitulos: [],\n      historialTodoJunto: []\n    };\n    this.filtrarL = this.filtrarL.bind(this);\n    this.filtrarC = this.filtrarC.bind(this);\n    this.getLibro = this.getLibro.bind(this);\n    this.getCapitulo = this.getCapitulo.bind(this);\n    this.renderLibros = this.renderLibros.bind(this);\n  }\n\n  // async filtrarL(historialL) {\n  //   return new Promise(async (res, rej) => {\n  //     if (historialL.length > 0) {\n  //       var existentes = new Array();\n  //       const promesa = historialL.map(async (libro) => {\n  //         return await axios\n  //           .post(\n  //             existeL,\n  //             {\n  //               id: libro._id,\n  //             },\n  //             { headers: { xaccess: sessionStorage.getItem(\"token\") } }\n  //           )\n  //           .then((res) => {\n  //             if (res.data.existe) {\n  //               existentes.push(libro);\n  //             }\n  //             debugger;\n  //           });\n  //       });\n  //       await Promise.all(promesa);\n  //       res(existentes);\n  //     } else {\n  //       res([]);\n  //     }\n  //   });\n  // }\n  // async filtrarC(historialC) {\n  //   return new Promise(async (res, rej) => {\n  //     if (historialC.length > 0) {\n  //       var existentes = new Array();\n  //       const promesa = historialC.map(async (capitulo) => {\n  //         return await axios\n  //           .post(\n  //             existeC,\n  //             {\n  //               id: capitulo._id,\n  //             },\n  //             { headers: { xaccess: sessionStorage.getItem(\"token\") } }\n  //           )\n  //           .then((res) => {\n  //             if (res.data.existe) {\n  //               existentes.push(capitulo);\n  //             }\n  //           });\n  //       });\n  //       await Promise.all(promesa);\n  //       res(existentes);\n  //     } else {\n  //       res([]);\n  //     }\n  //   });\n  // }\n  async componentDidMount() {\n    var historialL = new Array();\n    var historialC = new Array();\n    await axios.get(miperfilApi, {\n      headers: {\n        xaccess: sessionStorage.getItem(\"token\")\n      }\n    }).then(async res => {\n      this.setState({\n        miPerfil: res.data\n      });\n\n      if (res.data.historialLibros) {\n        res.data.historialLibros.map(libro => {\n          historialL.push(libro);\n        }); //historialL = await this.filtrarL(historialL);\n\n        historialL.map(async libro => {\n          await this.getLibro(libro);\n        });\n      }\n\n      if (res.data.historialCapitulos) {\n        res.data.historialCapitulos.map(cap => {\n          historialC.push(cap);\n        }); //historialC = await this.filtrarC(historialC);\n\n        historialC.map(capitulo => {\n          this.getCapitulo(capitulo);\n        });\n      }\n    }).catch(err => {\n      alert(err.response);\n    });\n  }\n\n  render() {\n    const {\n      libros,\n      capitulos\n    } = this.state;\n    console.log(libros);\n    console.log(capitulos);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"cardVS col-md-6 offset-md-3 text-light bg-dark\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      className: \"card-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 13\n      }\n    }, \" \", \"Historial de \", this.state.miPerfil.nombre, \" \")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card-body\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 11\n      }\n    }, libros ? libros.map((libro, index) => /*#__PURE__*/React.createElement(\"div\", {\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 17\n      }\n    }, \" \", libro.titulo)) : /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 15\n      }\n    }, \"No ha visitado ning\\xFAn libro \"), capitulos ? capitulos.map((capitulo, index) => /*#__PURE__*/React.createElement(\"div\", {\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 17\n      }\n    }, \" \", capitulo.titulo, \" ,\", capitulo.tituloLibro)) : /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 15\n      }\n    }, \" No ha visitado ning\\xFAn cap\\xEDtulo \"))));\n  }\n\n}\n/*\r\n\r\n\r\nlinea 177\r\n\r\n\r\n              libros.map((libro, index) => (\r\n                <div key={index}> {libro.titulo}</div>\r\n              ))\r\n\r\n\r\n              */","map":{"version":3,"sources":["D:/Documentos/GitHub/bf/front-end/src/components/VistaSuscriptor/Historial/Historial.js"],"names":["React","Component","axios","HistorialLibros","librosApi","capitulosApi","existeL","existeC","miperfilApi","MiSuscripcion","constructor","props","renderLibros","console","log","state","libros","map","hola","getLibro","libro","post","id","headers","xaccess","sessionStorage","getItem","then","res","libroObjetoParaHistorial","archivo","data","titulo","ultimoAcceso","terminado","libroInfoTotal","setState","historialTodoJunto","getCapitulo","capitulo","capituloObjetoParaHistorial","n","capituloInfoTotal","token","miPerfil","historialLibros","historialCapitulos","capitulos","filtrarL","bind","filtrarC","componentDidMount","historialL","Array","historialC","get","push","cap","catch","err","alert","response","render","nombre","index","tituloLibro"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport HistorialLibros from \"./HistorialLibros\";\r\n\r\n//Constante a la cual hacemos la consulta\r\nconst librosApi = \"http://localhost:4000/api/libros/me\";\r\nconst capitulosApi = \"http://localhost:4000/api/libros/verCapitulo\";\r\nconst existeL = \"http://localhost:4000/api/libros/existeLibro\";\r\nconst existeC = \"http://localhost:4000/api/libros/existeCapitulo\";\r\nconst miperfilApi = \"http://localhost:4000/api/perfiles/me\";\r\n\r\nexport default class MiSuscripcion extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      token: sessionStorage.getItem(\"token\"),\r\n      miPerfil: [],\r\n      historialLibros: [],\r\n      historialCapitulos: [],\r\n\r\n      libros: [],\r\n      capitulos: [],\r\n      historialTodoJunto: [],\r\n    };\r\n    this.filtrarL = this.filtrarL.bind(this);\r\n    this.filtrarC = this.filtrarC.bind(this);\r\n    this.getLibro = this.getLibro.bind(this);\r\n    this.getCapitulo = this.getCapitulo.bind(this);\r\n    this.renderLibros = this.renderLibros.bind(this);\r\n  }\r\n\r\n  renderLibros = () => {\r\n    return (\r\n      <div>\r\n        {\r\n          (console.log(\"entro al renderLibros\"),\r\n          this.state.libros.map((hola) => {\r\n            console.log(hola);\r\n          }))\r\n        }\r\n      </div>\r\n    );\r\n  };\r\n\r\n  getLibro = async (libro) => {\r\n    await axios\r\n      .post(\r\n        librosApi,\r\n        { id: libro.libro },\r\n        { headers: { xaccess: sessionStorage.getItem(\"token\") } }\r\n      )\r\n      .then((res) => {\r\n        var libroObjetoParaHistorial = {\r\n          archivo: res.data.archivo,\r\n          titulo: res.data.titulo,\r\n          ultimoAcceso: libro.ultimoAcceso,\r\n          terminado: libro.terminado,\r\n          libroInfoTotal: res.data,\r\n        };\r\n        this.setState({\r\n          historialTodoJunto: [\r\n            ...this.state.historialTodoJunto,\r\n            libroObjetoParaHistorial,\r\n          ],\r\n        });\r\n      });\r\n  };\r\n\r\n  getCapitulo = async (capitulo) => {\r\n    await axios\r\n      .post(\r\n        capitulosApi,\r\n        { id: capitulo.capitulo },\r\n        { headers: { xaccess: sessionStorage.getItem(\"token\") } }\r\n      )\r\n      .then((res) => {\r\n        var capituloObjetoParaHistorial = {\r\n          archivo: res.data.archivo,\r\n          titulo: res.data.titulo + res.data.n,\r\n          ultimoAcceso: libro.ultimoAcceso,\r\n          terminado: libro.terminado,\r\n          capituloInfoTotal: res.data,\r\n        };\r\n        this.setState({\r\n          historialTodoJunto: [\r\n            ...this.state.historialTodoJunto,\r\n            capituloObjetoParaHistorial,\r\n          ],\r\n        });\r\n      });\r\n  };\r\n\r\n  // async filtrarL(historialL) {\r\n  //   return new Promise(async (res, rej) => {\r\n  //     if (historialL.length > 0) {\r\n  //       var existentes = new Array();\r\n\r\n  //       const promesa = historialL.map(async (libro) => {\r\n  //         return await axios\r\n  //           .post(\r\n  //             existeL,\r\n  //             {\r\n  //               id: libro._id,\r\n  //             },\r\n  //             { headers: { xaccess: sessionStorage.getItem(\"token\") } }\r\n  //           )\r\n  //           .then((res) => {\r\n  //             if (res.data.existe) {\r\n  //               existentes.push(libro);\r\n  //             }\r\n  //             debugger;\r\n  //           });\r\n  //       });\r\n  //       await Promise.all(promesa);\r\n\r\n  //       res(existentes);\r\n  //     } else {\r\n  //       res([]);\r\n  //     }\r\n  //   });\r\n  // }\r\n  // async filtrarC(historialC) {\r\n  //   return new Promise(async (res, rej) => {\r\n  //     if (historialC.length > 0) {\r\n  //       var existentes = new Array();\r\n\r\n  //       const promesa = historialC.map(async (capitulo) => {\r\n  //         return await axios\r\n  //           .post(\r\n  //             existeC,\r\n  //             {\r\n  //               id: capitulo._id,\r\n  //             },\r\n  //             { headers: { xaccess: sessionStorage.getItem(\"token\") } }\r\n  //           )\r\n  //           .then((res) => {\r\n  //             if (res.data.existe) {\r\n  //               existentes.push(capitulo);\r\n  //             }\r\n  //           });\r\n  //       });\r\n  //       await Promise.all(promesa);\r\n\r\n  //       res(existentes);\r\n  //     } else {\r\n  //       res([]);\r\n  //     }\r\n  //   });\r\n  // }\r\n\r\n  async componentDidMount() {\r\n    var historialL = new Array();\r\n    var historialC = new Array();\r\n\r\n    await axios\r\n      .get(miperfilApi, {\r\n        headers: { xaccess: sessionStorage.getItem(\"token\") },\r\n      })\r\n      .then(async (res) => {\r\n        this.setState({\r\n          miPerfil: res.data,\r\n        });\r\n        if (res.data.historialLibros) {\r\n          res.data.historialLibros.map((libro) => {\r\n            historialL.push(libro);\r\n          });\r\n          //historialL = await this.filtrarL(historialL);\r\n          historialL.map(async (libro) => {\r\n            await this.getLibro(libro);\r\n          });\r\n        }\r\n        if (res.data.historialCapitulos) {\r\n          res.data.historialCapitulos.map((cap) => {\r\n            historialC.push(cap);\r\n          });\r\n          //historialC = await this.filtrarC(historialC);\r\n          historialC.map((capitulo) => {\r\n            this.getCapitulo(capitulo);\r\n          });\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        alert(err.response);\r\n      });\r\n  }\r\n\r\n  render() {\r\n    const { libros, capitulos } = this.state;\r\n    console.log(libros);\r\n    console.log(capitulos);\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"cardVS col-md-6 offset-md-3 text-light bg-dark\">\r\n          <div>\r\n            <h2 className=\"card-header\">\r\n              {\" \"}\r\n              Historial de {this.state.miPerfil.nombre}{\" \"}\r\n            </h2>\r\n          </div>\r\n\r\n          <div className=\"card-body\">\r\n            {libros ? (\r\n              libros.map((libro, index) => (\r\n                <div key={index}> {libro.titulo}</div>\r\n              ))\r\n            ) : (\r\n              <div>No ha visitado ningún libro </div>\r\n            )}\r\n            {capitulos ? (\r\n              capitulos.map((capitulo, index) => (\r\n                <div key={index}>\r\n                  {\" \"}\r\n                  {capitulo.titulo} ,{capitulo.tituloLibro}\r\n                </div>\r\n              ))\r\n            ) : (\r\n              <div> No ha visitado ningún capítulo </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n/*\r\n\r\n\r\nlinea 177\r\n\r\n\r\n              libros.map((libro, index) => (\r\n                <div key={index}> {libro.titulo}</div>\r\n              ))\r\n\r\n\r\n              */\r\n"]},"metadata":{},"sourceType":"module"}