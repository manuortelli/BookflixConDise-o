{"ast":null,"code":"var _jsxFileName = \"D:\\\\Documentos\\\\GitHub\\\\bf\\\\front-end\\\\src\\\\components\\\\VistaSuscriptor\\\\Historial\\\\Historial.js\";\nimport React, { Component } from \"react\";\nimport axios from \"axios\"; //Constante a la cual hacemos la consulta\n\nconst librosApi = \"http://localhost:4000/api/libros/me\";\nconst capitulosApi = \"http://localhost:4000/api/libros/verCapitulo\";\nconst capitulosMuchosApi = \"http://localhost:4000/api/libros/capitulosMuchos\";\nconst existeL = \"http://localhost:4000/api/libros/existeLibro\";\nconst existeC = \"http://localhost:4000/api/libros/existeCapitulo\";\nconst miperfilApi = \"http://localhost:4000/api/perfiles/me\";\nexport default class MiSuscripcion extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getLibro = async libro => {\n      await axios.post(librosApi, {\n        id: libro.libro\n      }, {\n        headers: {\n          xaccess: sessionStorage.getItem(\"token\")\n        }\n      }).then(res => {\n        this.state.libro.push(res.data);\n        console.log(res.data);\n      });\n    };\n\n    this.getCapitulo = async capitulo => {\n      await axios.post(capitulosApi, {\n        id: capitulo.capitulo\n      }, {\n        headers: {\n          xaccess: sessionStorage.getItem(\"token\")\n        }\n      }).then(res => {\n        this.state.capitulos.push(res.data);\n      });\n    };\n\n    this.filtrar = async () => {\n      //filtro los existentes\n      if (this.state.historialLibros.length > 0) {\n        var existentes = new Array();\n        this.state.historialLibros.map(async libro => {\n          await axios.post(existeL, {\n            id: libro._id\n          }, {\n            headers: {\n              xaccess: sessionStorage.getItem(\"token\")\n            }\n          }).then(res => {\n            if (res.data.existe) {\n              existentes.push(libro);\n            }\n          });\n        });\n        this.setState({\n          historialLibros: existentes,\n          librosConInfoTermiado: existentes\n        });\n\n        if (this.state.historialLibros.length) {\n          this.getLibros();\n        }\n      }\n\n      if (this.state.historialCapitulos.length > 0) {\n        var existentes = new Array();\n        this.state.historialCapitulos.map(async capitulo => {\n          await axios.post(existeC, {\n            id: capitulo._id\n          }, {\n            headers: {\n              xaccess: sessionStorage.getItem(\"token\")\n            }\n          }).then(res => {\n            if (res.data.existe) {\n              existentes.push(capitulo);\n            }\n          });\n        });\n        this.setState({\n          historialCapitulos: existentes,\n          capitulosConInfoTerminado: existentes\n        });\n\n        if (this.state.historialCapitulos) {\n          this.render(); //this.getCapitulos();\n        }\n      }\n    };\n\n    this.state = {\n      token: sessionStorage.getItem(\"token\"),\n      miPerfil: [],\n      historialLibros: [],\n      historialCapitulos: [],\n      librosConInfoTerminado: [],\n      capitulosConInfoTerminado: [],\n      libros: [],\n      capitulos: []\n    };\n    this.filtrar = this.filtrar.bind(this);\n    this.getLibro = this.getLibro.bind(this);\n    this.getCapitulo = this.getCapitulo.bind(this);\n  }\n\n  async componentDidMount() {\n    var historialL = new Array();\n    var historialC = new Array();\n    await axios.get(miperfilApi, {\n      headers: {\n        xaccess: sessionStorage.getItem(\"token\")\n      }\n    }).then(res => {\n      res.data.historialLibros.map(libro => {\n        historialL.push(libro);\n      });\n      res.data.historialCapitulos.map(cap => {\n        historialC.push(cap);\n      });\n      this.setState({\n        historialLibros: historialL,\n        historialCapitulos: historialC,\n        miPerfil: res.data\n      });\n      this.filtrar();\n    }).catch(err => {\n      alert(err.response);\n    });\n  }\n\n  render() {\n    this.state.historialLibros.map(libro => {\n      this.getLibro(libro);\n    });\n    this.state.historialCapitulos.map(capitulo => {\n      this.getCapitulo(capitulo);\n    });\n    var librosParaMapear = this.state.libros;\n    var capitulosParaMapear = this.state.capitulos;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"cardVS col-md-6 offset-md-3 text-light bg-dark\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      className: \"card-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 13\n      }\n    }, \" \", \"Historial de \", this.state.miPerfil.nombre, \" \")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card-body\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 11\n      }\n    }, \"librosParaMapear ?\", this.state.libros.map((libro, index) => /*#__PURE__*/React.createElement(\"div\", {\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 15\n      }\n    }, \" \", libro._id)), \": hola\", this.state.capitulos.map((capitulo, index) => /*#__PURE__*/React.createElement(\"div\", {\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 15\n      }\n    }, \" \", console.log(capitulo), \" \")))));\n  }\n\n}","map":{"version":3,"sources":["D:/Documentos/GitHub/bf/front-end/src/components/VistaSuscriptor/Historial/Historial.js"],"names":["React","Component","axios","librosApi","capitulosApi","capitulosMuchosApi","existeL","existeC","miperfilApi","MiSuscripcion","constructor","props","getLibro","libro","post","id","headers","xaccess","sessionStorage","getItem","then","res","state","push","data","console","log","getCapitulo","capitulo","capitulos","filtrar","historialLibros","length","existentes","Array","map","_id","existe","setState","librosConInfoTermiado","getLibros","historialCapitulos","capitulosConInfoTerminado","render","token","miPerfil","librosConInfoTerminado","libros","bind","componentDidMount","historialL","historialC","get","cap","catch","err","alert","response","librosParaMapear","capitulosParaMapear","nombre","index"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\n\r\n//Constante a la cual hacemos la consulta\r\nconst librosApi = \"http://localhost:4000/api/libros/me\";\r\nconst capitulosApi = \"http://localhost:4000/api/libros/verCapitulo\";\r\nconst capitulosMuchosApi = \"http://localhost:4000/api/libros/capitulosMuchos\";\r\nconst existeL = \"http://localhost:4000/api/libros/existeLibro\";\r\nconst existeC = \"http://localhost:4000/api/libros/existeCapitulo\";\r\nconst miperfilApi = \"http://localhost:4000/api/perfiles/me\";\r\n\r\nexport default class MiSuscripcion extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      token: sessionStorage.getItem(\"token\"),\r\n      miPerfil: [],\r\n      historialLibros: [],\r\n      historialCapitulos: [],\r\n\r\n      librosConInfoTerminado: [],\r\n      capitulosConInfoTerminado: [],\r\n\r\n      libros: [],\r\n      capitulos: [],\r\n    };\r\n    this.filtrar = this.filtrar.bind(this);\r\n    this.getLibro = this.getLibro.bind(this);\r\n    this.getCapitulo = this.getCapitulo.bind(this);\r\n  }\r\n  getLibro = async (libro) => {\r\n    await axios\r\n      .post(\r\n        librosApi,\r\n        { id: libro.libro },\r\n        { headers: { xaccess: sessionStorage.getItem(\"token\") } }\r\n      )\r\n      .then((res) => {\r\n        this.state.libro.push(res.data);\r\n        console.log(res.data);\r\n      });\r\n  };\r\n\r\n  getCapitulo = async (capitulo) => {\r\n    await axios\r\n      .post(\r\n        capitulosApi,\r\n        { id: capitulo.capitulo },\r\n        { headers: { xaccess: sessionStorage.getItem(\"token\") } }\r\n      )\r\n      .then((res) => {\r\n        this.state.capitulos.push(res.data);\r\n      });\r\n  };\r\n\r\n  filtrar = async () => {\r\n    //filtro los existentes\r\n\r\n    if (this.state.historialLibros.length > 0) {\r\n      var existentes = new Array();\r\n      this.state.historialLibros.map(async (libro) => {\r\n        await axios\r\n          .post(\r\n            existeL,\r\n            {\r\n              id: libro._id,\r\n            },\r\n            { headers: { xaccess: sessionStorage.getItem(\"token\") } }\r\n          )\r\n          .then((res) => {\r\n            if (res.data.existe) {\r\n              existentes.push(libro);\r\n            }\r\n          });\r\n      });\r\n      this.setState({\r\n        historialLibros: existentes,\r\n        librosConInfoTermiado: existentes,\r\n      });\r\n      if (this.state.historialLibros.length) {\r\n        this.getLibros();\r\n      }\r\n    }\r\n\r\n    if (this.state.historialCapitulos.length > 0) {\r\n      var existentes = new Array();\r\n      this.state.historialCapitulos.map(async (capitulo) => {\r\n        await axios\r\n          .post(\r\n            existeC,\r\n            {\r\n              id: capitulo._id,\r\n            },\r\n            { headers: { xaccess: sessionStorage.getItem(\"token\") } }\r\n          )\r\n          .then((res) => {\r\n            if (res.data.existe) {\r\n              existentes.push(capitulo);\r\n            }\r\n          });\r\n      });\r\n\r\n      this.setState({\r\n        historialCapitulos: existentes,\r\n        capitulosConInfoTerminado: existentes,\r\n      });\r\n\r\n      if (this.state.historialCapitulos) {\r\n        this.render();\r\n        //this.getCapitulos();\r\n      }\r\n    }\r\n  };\r\n  async componentDidMount() {\r\n    var historialL = new Array();\r\n    var historialC = new Array();\r\n\r\n    await axios\r\n      .get(miperfilApi, {\r\n        headers: { xaccess: sessionStorage.getItem(\"token\") },\r\n      })\r\n      .then((res) => {\r\n        res.data.historialLibros.map((libro) => {\r\n          historialL.push(libro);\r\n        });\r\n        res.data.historialCapitulos.map((cap) => {\r\n          historialC.push(cap);\r\n        });\r\n        this.setState({\r\n          historialLibros: historialL,\r\n          historialCapitulos: historialC,\r\n          miPerfil: res.data,\r\n        });\r\n        this.filtrar();\r\n      })\r\n      .catch((err) => {\r\n        alert(err.response);\r\n      });\r\n  }\r\n\r\n  render() {\r\n    this.state.historialLibros.map((libro) => {\r\n      this.getLibro(libro);\r\n    });\r\n\r\n    this.state.historialCapitulos.map((capitulo) => {\r\n      this.getCapitulo(capitulo);\r\n    });\r\n    var librosParaMapear = this.state.libros;\r\n    var capitulosParaMapear = this.state.capitulos;\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"cardVS col-md-6 offset-md-3 text-light bg-dark\">\r\n          <div>\r\n            <h2 className=\"card-header\">\r\n              {\" \"}\r\n              Historial de {this.state.miPerfil.nombre}{\" \"}\r\n            </h2>\r\n          </div>\r\n\r\n          <div className=\"card-body\">\r\n            librosParaMapear ?\r\n            {this.state.libros.map((libro, index) => (\r\n              <div key={index}> {libro._id}</div>\r\n            ))}\r\n            : hola\r\n            {this.state.capitulos.map((capitulo, index) => (\r\n              <div key={index}> {console.log(capitulo)} </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}