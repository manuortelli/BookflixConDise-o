{"ast":null,"code":"var _jsxFileName = \"D:\\\\Documentos\\\\GitHub\\\\bf\\\\front-end\\\\src\\\\components\\\\VistaSuscriptor\\\\Historial\\\\Historial.js\";\nimport React, { Component } from \"react\";\nimport axios from \"axios\"; //Constante a la cual hacemos la consulta\n\nconst librosApi = \"http://localhost:4000/api/libros/me\";\nconst capitulosApi = \"http://localhost:4000/api/libros/verCapitulo\";\nconst capitulosMuchosApi = \"http://localhost:4000/api/libros/capitulosMuchos\";\nconst existeL = \"http://localhost:4000/api/libros/existeLibro\";\nconst existeC = \"http://localhost:4000/api/libros/existeCapitulo\";\nconst miperfilApi = \"http://localhost:4000/api/perfiles/me\";\nexport default class MiSuscripcion extends Component {\n  constructor(props) {\n    super(props);\n\n    this.renderLibros = () => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 7\n        }\n      }, (console.log(\"entro al renderLibros\"), this.state.libros.map(hola => {\n        console.log(hola);\n      })));\n    };\n\n    this.getLibro = async libro => {\n      await axios.post(librosApi, {\n        id: libro.libro\n      }, {\n        headers: {\n          xaccess: sessionStorage.getItem(\"token\")\n        }\n      }).then(res => {\n        this.setState({\n          libros: [...this.state.libros, res.data]\n        });\n      });\n    };\n\n    this.getCapitulo = async capitulo => {\n      await axios.post(capitulosApi, {\n        id: capitulo.capitulo\n      }, {\n        headers: {\n          xaccess: sessionStorage.getItem(\"token\")\n        }\n      }).then(res => {\n        this.setState({\n          capitulos: [...this.state.capitulos, res.data]\n        });\n      });\n    };\n\n    this.filtrarL = async historialL => {\n      return new Promise((res, rej) => {\n        if (historialL.length > 0) {\n          var existentes = new Array();\n          historialL.map(async libro => {\n            return await axios.post(existeL, {\n              id: libro._id\n            }, {\n              headers: {\n                xaccess: sessionStorage.getItem(\"token\")\n              }\n            }).then(res => {\n              if (res.data.existe) {\n                existentes.push(libro);\n              }\n            });\n          });\n          res(existentes);\n        } else {\n          res([]);\n        }\n      });\n    };\n\n    this.state = {\n      token: sessionStorage.getItem(\"token\"),\n      miPerfil: [],\n      historialLibros: [],\n      historialCapitulos: [],\n      librosConInfoTerminado: [],\n      capitulosConInfoTerminado: [],\n      libros: [],\n      capitulos: []\n    }; //this.filtrarL = this.filtrarL.bind(this);\n    // this.filtrarC = this.filtrarC.bind(this);\n\n    this.getLibro = this.getLibro.bind(this);\n    this.getCapitulo = this.getCapitulo.bind(this);\n    this.renderLibros = this.renderLibros.bind(this);\n  }\n\n  /*\r\n    if (this.state.historialCapitulos.length > 0) {\r\n      var existentes = new Array();\r\n      this.state.historialCapitulos.map((capitulo) => {\r\n        axios\r\n          .post(\r\n            existeC,\r\n            {\r\n              id: capitulo._id,\r\n            },\r\n            { headers: { xaccess: sessionStorage.getItem(\"token\") } }\r\n          )\r\n          .then((res) => {\r\n            if (res.data.existe) {\r\n              existentes.push(capitulo);\r\n            }\r\n          });\r\n      });\r\n        this.setState({\r\n        historialCapitulos: existentes,\r\n        capitulosConInfoTerminado: existentes,\r\n      });\r\n        if (this.state.historialCapitulos) {\r\n        this.render();\r\n        //this.getCapitulos();\r\n      }\r\n    }*/\n  async componentDidMount() {\n    var historialL = new Array();\n    var historialC = new Array();\n    await axios.get(miperfilApi, {\n      headers: {\n        xaccess: sessionStorage.getItem(\"token\")\n      }\n    }).then(async res => {\n      res.data.historialLibros.map(libro => {\n        historialL.push(libro);\n      });\n      res.data.historialCapitulos.map(cap => {\n        historialC.push(cap);\n      });\n      historialL = await this.filtrarL(historialL);\n      historialL.map(libro => {\n        console.log(libro); //this.getLibro(libro);\n      });\n      /*\r\n      historalC.map((capitulo) => {\r\n        this.getCapitulo(capitulo);\r\n      });\r\n      */\n\n      this.setState({\n        historialLibros: historialL,\n        historialCapitulos: historialC,\n        miPerfil: res.data\n      });\n    }).catch(err => {\n      alert(err.response);\n    });\n  }\n\n  render() {\n    const {\n      libros,\n      capitulos\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"cardVS col-md-6 offset-md-3 text-light bg-dark\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      className: \"card-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 13\n      }\n    }, \" \", \"Historial de \", this.state.miPerfil.nombre, \" \")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card-body\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 11\n      }\n    }, libros ? libros.map((libro, index) => /*#__PURE__*/React.createElement(\"div\", {\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 17\n      }\n    }, \" \", libro.titulo)) : /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 15\n      }\n    }, \"hola\"), capitulos ? capitulos.map((capitulo, index) => /*#__PURE__*/React.createElement(\"div\", {\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 17\n      }\n    }, \" \", capitulo.titulo, \" \")) : /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 15\n      }\n    }, \" hola\"))));\n  }\n\n}","map":{"version":3,"sources":["D:/Documentos/GitHub/bf/front-end/src/components/VistaSuscriptor/Historial/Historial.js"],"names":["React","Component","axios","librosApi","capitulosApi","capitulosMuchosApi","existeL","existeC","miperfilApi","MiSuscripcion","constructor","props","renderLibros","console","log","state","libros","map","hola","getLibro","libro","post","id","headers","xaccess","sessionStorage","getItem","then","res","setState","data","getCapitulo","capitulo","capitulos","filtrarL","historialL","Promise","rej","length","existentes","Array","_id","existe","push","token","miPerfil","historialLibros","historialCapitulos","librosConInfoTerminado","capitulosConInfoTerminado","bind","componentDidMount","historialC","get","cap","catch","err","alert","response","render","nombre","index","titulo"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\n\r\n//Constante a la cual hacemos la consulta\r\nconst librosApi = \"http://localhost:4000/api/libros/me\";\r\nconst capitulosApi = \"http://localhost:4000/api/libros/verCapitulo\";\r\nconst capitulosMuchosApi = \"http://localhost:4000/api/libros/capitulosMuchos\";\r\nconst existeL = \"http://localhost:4000/api/libros/existeLibro\";\r\nconst existeC = \"http://localhost:4000/api/libros/existeCapitulo\";\r\nconst miperfilApi = \"http://localhost:4000/api/perfiles/me\";\r\n\r\nexport default class MiSuscripcion extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      token: sessionStorage.getItem(\"token\"),\r\n      miPerfil: [],\r\n      historialLibros: [],\r\n      historialCapitulos: [],\r\n\r\n      librosConInfoTerminado: [],\r\n      capitulosConInfoTerminado: [],\r\n\r\n      libros: [],\r\n      capitulos: [],\r\n    };\r\n    //this.filtrarL = this.filtrarL.bind(this);\r\n    // this.filtrarC = this.filtrarC.bind(this);\r\n    this.getLibro = this.getLibro.bind(this);\r\n    this.getCapitulo = this.getCapitulo.bind(this);\r\n    this.renderLibros = this.renderLibros.bind(this);\r\n  }\r\n\r\n  renderLibros = () => {\r\n    return (\r\n      <div>\r\n        {\r\n          (console.log(\"entro al renderLibros\"),\r\n          this.state.libros.map((hola) => {\r\n            console.log(hola);\r\n          }))\r\n        }\r\n      </div>\r\n    );\r\n  };\r\n  getLibro = async (libro) => {\r\n    await axios\r\n      .post(\r\n        librosApi,\r\n        { id: libro.libro },\r\n        { headers: { xaccess: sessionStorage.getItem(\"token\") } }\r\n      )\r\n      .then((res) => {\r\n        this.setState({\r\n          libros: [...this.state.libros, res.data],\r\n        });\r\n      });\r\n  };\r\n\r\n  getCapitulo = async (capitulo) => {\r\n    await axios\r\n      .post(\r\n        capitulosApi,\r\n        { id: capitulo.capitulo },\r\n        { headers: { xaccess: sessionStorage.getItem(\"token\") } }\r\n      )\r\n      .then((res) => {\r\n        this.setState({\r\n          capitulos: [...this.state.capitulos, res.data],\r\n        });\r\n      });\r\n  };\r\n\r\n  filtrarL = async (historialL) => {\r\n    return new Promise((res, rej) => {\r\n      if (historialL.length > 0) {\r\n        var existentes = new Array();\r\n\r\n        historialL.map(async (libro) => {\r\n          return await axios\r\n            .post(\r\n              existeL,\r\n              {\r\n                id: libro._id,\r\n              },\r\n              { headers: { xaccess: sessionStorage.getItem(\"token\") } }\r\n            )\r\n            .then((res) => {\r\n              if (res.data.existe) {\r\n                existentes.push(libro);\r\n              }\r\n            });\r\n        });\r\n\r\n        res(existentes);\r\n      } else {\r\n        res([]);\r\n      }\r\n    });\r\n  };\r\n  /*\r\n    if (this.state.historialCapitulos.length > 0) {\r\n      var existentes = new Array();\r\n      this.state.historialCapitulos.map((capitulo) => {\r\n        axios\r\n          .post(\r\n            existeC,\r\n            {\r\n              id: capitulo._id,\r\n            },\r\n            { headers: { xaccess: sessionStorage.getItem(\"token\") } }\r\n          )\r\n          .then((res) => {\r\n            if (res.data.existe) {\r\n              existentes.push(capitulo);\r\n            }\r\n          });\r\n      });\r\n\r\n      this.setState({\r\n        historialCapitulos: existentes,\r\n        capitulosConInfoTerminado: existentes,\r\n      });\r\n\r\n      if (this.state.historialCapitulos) {\r\n        this.render();\r\n        //this.getCapitulos();\r\n      }\r\n    }*/\r\n\r\n  async componentDidMount() {\r\n    var historialL = new Array();\r\n    var historialC = new Array();\r\n\r\n    await axios\r\n      .get(miperfilApi, {\r\n        headers: { xaccess: sessionStorage.getItem(\"token\") },\r\n      })\r\n      .then(async (res) => {\r\n        res.data.historialLibros.map((libro) => {\r\n          historialL.push(libro);\r\n        });\r\n        res.data.historialCapitulos.map((cap) => {\r\n          historialC.push(cap);\r\n        });\r\n\r\n        historialL = await this.filtrarL(historialL);\r\n\r\n        historialL.map((libro) => {\r\n          console.log(libro);\r\n          //this.getLibro(libro);\r\n        });\r\n        /*\r\n        historalC.map((capitulo) => {\r\n          this.getCapitulo(capitulo);\r\n        });\r\n*/\r\n        this.setState({\r\n          historialLibros: historialL,\r\n          historialCapitulos: historialC,\r\n          miPerfil: res.data,\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        alert(err.response);\r\n      });\r\n  }\r\n\r\n  render() {\r\n    const { libros, capitulos } = this.state;\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"cardVS col-md-6 offset-md-3 text-light bg-dark\">\r\n          <div>\r\n            <h2 className=\"card-header\">\r\n              {\" \"}\r\n              Historial de {this.state.miPerfil.nombre}{\" \"}\r\n            </h2>\r\n          </div>\r\n\r\n          <div className=\"card-body\">\r\n            {libros ? (\r\n              libros.map((libro, index) => (\r\n                <div key={index}> {libro.titulo}</div>\r\n              ))\r\n            ) : (\r\n              <div>hola</div>\r\n            )}\r\n            {capitulos ? (\r\n              capitulos.map((capitulo, index) => (\r\n                <div key={index}> {capitulo.titulo} </div>\r\n              ))\r\n            ) : (\r\n              <div> hola</div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}