{"ast":null,"code":"var _jsxFileName = \"/home/manuel/git/BookflixOficialDonna/bf/front-end/src/components/HomePerfiles.js\";\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { Redirect } from \"react-router-dom\";\nimport ItemPerfil from \"./ItemPerfil\";\nimport { Link } from \"react-router-dom\";\nimport HomeSuscriptor from \"./VistaSuscriptor/HomeSuscriptor\";\nimport { confirmAlert } from 'react-confirm-alert'; // Import\n\nimport 'react-confirm-alert/src/react-confirm-alert.css'; // Import css\n//Poner constante a la cual le hacemos la consulta de nuestros pefiles como suscriptor\n\nconst suscriptores = 'http://localhost:4000/api/suscriptores/me';\nconst misPerfiles = \"http://localhost:4000/api/suscriptores/loginPerfiles\";\nconst cargar = \"http://localhost:4000/api/suscriptores/agregarPerfil\";\nconst borrarPerfil = \"http://localhost:4000/api/perfiles/eliminar\";\nconst loginPerfilApi = \"http://localhost:4000/api/suscriptores/loginPerfil\";\n\nclass ListarPerfiles extends Component {\n  constructor() {\n    super();\n\n    this.getDataSuscriptor = async () => {\n      await axios.get(suscriptores, {\n        headers: {\n          'xaccess': sessionStorage.getItem('token')\n        }\n      }).then(res => {\n        this.setState({\n          miSuscripcion: res\n        });\n      }).catch(err => {\n        alert(err.response);\n      });\n    };\n\n    this.ingresarPerfil = async (e, idllega) => {\n      console.log(\"id que llega \", idllega);\n      await axios.post(loginPerfilApi, {\n        id: idllega\n      }, {\n        headers: {\n          xaccess: sessionStorage.getItem(\"token\")\n        }\n      }).then(res => {\n        const {\n          user,\n          token\n        } = res.data;\n        sessionStorage.setItem(\"token\", token);\n        sessionStorage.setItem(\"perfilUser\", JSON.stringify(user));\n        sessionStorage.setItem(\"perfil\", res.data.user);\n        sessionStorage.setItem(\"perfilID\", user._id);\n        return window.location = '/homesuscriptor';\n      });\n    };\n\n    this.borrarperfil = async (e, idllega) => {\n      if (this.state.misPerfiles.length > 1) {\n        await axios.post(borrarPerfil, {\n          suscriptorId: this.state.suscripcion.user._id,\n          perfilId: idllega\n        }, {\n          headers: {\n            'xaccess': sessionStorage.getItem('token')\n          }\n        }).then(res => {\n          console.log(res.data);\n          alert(\"¡Perfil eliminado con exito!\");\n          window.location.reload(true);\n        }).catch(err => {\n          alert(err.response);\n        });\n      } else {\n        alert(\"No puedes eliminar el unico perfil que tienes\");\n      }\n    };\n\n    this.getDatos = async () => {\n      await axios.get(misPerfiles, {\n        headers: {\n          'xaccess': sessionStorage.getItem('tokenSuscriptor')\n        }\n      }).then(res => {\n        this.setState({\n          misPerfiles: res.data\n        });\n      }).catch(err => {\n        alert(err.response);\n      });\n    };\n\n    this.componentDidMount = async () => {\n      this.getDatos();\n    };\n\n    this.verificarNombre = e => {\n      var nombreExistente = false;\n      e.preventDefault();\n      this.state.misPerfiles.map(perfil => {\n        if (perfil.nombre == this.state.nombre) {\n          alert(\"Debes usar otro nombre de perfil, este ya está en uso\");\n          nombreExistente = true;\n        }\n      });\n      this.onSubmit(nombreExistente);\n    };\n\n    this.onSubmit = async nombreExistente => {\n      if (nombreExistente == false) {\n        if (this.state.suscripcion.user.suscripcion === \"REGULAR\" && this.state.misPerfiles.length < 2) {\n          await axios.post(cargar, {\n            id: this.state.suscripcion.user._id,\n            nombre: this.state.nombre\n          }, {\n            headers: {\n              xaccess: this.state.token\n            }\n          }).then(res => {\n            alert(\"¡Perfil agregado con exito!\");\n            window.location.reload(true);\n          }).catch(err => {\n            console.log(err);\n            window.location.reload(true);\n          });\n        } else if (this.state.suscripcion.user.suscripcion === \"PREMIUM\" && this.state.misPerfiles.length < 4) {\n          await axios.post(cargar, {\n            id: this.state.suscripcion.user._id,\n            nombre: this.state.nombre\n          }, {\n            headers: {\n              xaccess: this.state.token\n            }\n          }).then(res => {\n            alert(\"¡Perfil agregado con exito!\");\n            window.location.reload(true);\n          }).catch(err => {\n            console.log(err);\n            alert(\"¡Perfil agregado con exito!\");\n            window.location.reload(true);\n          });\n        } else {\n          alert(\"No podes agregar otro perfil, ya estas en tu maximo permitido, borrá alguno para agregar otro\");\n        }\n      }\n    };\n\n    this.onInputChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.state = {\n      token: sessionStorage.getItem(\"token\"),\n      suscripcion: JSON.parse(sessionStorage.getItem(\"user\")),\n      miPerfil: JSON.parse(sessionStorage.getItem(\"perfilUser\")),\n      nombre: '',\n      misPerfiles: [],\n      nombreUsado: false,\n      miSuscripcion: []\n    };\n    this.onInputChange = this.onInputChange.bind(this);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"cardAgregarPerfil col-md-6 offset-md-3 text-light bg-dark \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      className: \"card-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 13\n      }\n    }, \"Perfiles de \", this.state.miSuscripcion.nombre, \" \"), /*#__PURE__*/React.createElement(\"h5\", {\n      className: \"card-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 13\n      }\n    }, \"Suscripci\\xF3n: \", this.state.miSuscripcion.suscripcion, \" \"), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      className: \"card-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 19\n      }\n    }, \"Sus perfiles: \")), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 13\n      }\n    }, this.state.misPerfiles.map(perfil => /*#__PURE__*/React.createElement(\"div\", {\n      className: \"cardListarPerfil\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 25\n      }\n    }, \" \", perfil.nombre, \" \"), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-outline-danger itemBoton float-right\",\n      onClick: () => confirmAlert({\n        customUI: ({\n          onClose\n        }) => {\n          return /*#__PURE__*/React.createElement(\"div\", {\n            className: \"custom-ui\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 37\n            }\n          }, /*#__PURE__*/React.createElement(\"h1\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 218,\n              columnNumber: 41\n            }\n          }, \"\\xBFEst\\xE1 seguro?\"), ' ', /*#__PURE__*/React.createElement(\"p\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 220,\n              columnNumber: 41\n            }\n          }, \"\\xBFDesea eliminar este perfil?\"), ' ', /*#__PURE__*/React.createElement(\"button\", {\n            onClick: onClose,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 41\n            }\n          }, \"No\"), \" \", ' ', /*#__PURE__*/React.createElement(\"button\", {\n            onClick: e => {\n              this.borrarperfil(e, perfil.id);\n              onClose();\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 223,\n              columnNumber: 41\n            }\n          }, \"Si, deseo eliminar\"));\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 25\n      }\n    }, \"Eliminar\"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: e => {\n        this.ingresarPerfil(e, perfil.id);\n      },\n      className: \"btn btn-outline-danger itemBoton float-right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 25\n      }\n    }, \"Ingresar\")))), /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.verificarNombre,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      className: \"form-control\",\n      id: \"nombre\",\n      name: \"nombre\",\n      onChange: this.onInputChange,\n      placeholder: \"Nombre del nuevo perfil \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"btn  btn-outline-danger itemBoton float-right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 17\n      }\n    }, \"Agregar perfil\")));\n  }\n\n}\n\nexport default ListarPerfiles;","map":{"version":3,"sources":["/home/manuel/git/BookflixOficialDonna/bf/front-end/src/components/HomePerfiles.js"],"names":["React","Component","axios","Redirect","ItemPerfil","Link","HomeSuscriptor","confirmAlert","suscriptores","misPerfiles","cargar","borrarPerfil","loginPerfilApi","ListarPerfiles","constructor","getDataSuscriptor","get","headers","sessionStorage","getItem","then","res","setState","miSuscripcion","catch","err","alert","response","ingresarPerfil","e","idllega","console","log","post","id","xaccess","user","token","data","setItem","JSON","stringify","_id","window","location","borrarperfil","state","length","suscriptorId","suscripcion","perfilId","reload","getDatos","componentDidMount","verificarNombre","nombreExistente","preventDefault","map","perfil","nombre","onSubmit","onInputChange","target","name","value","parse","miPerfil","nombreUsado","bind","render","customUI","onClose"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { Redirect } from \"react-router-dom\";\nimport ItemPerfil from \"./ItemPerfil\";\nimport { Link } from \"react-router-dom\";\nimport HomeSuscriptor from \"./VistaSuscriptor/HomeSuscriptor\";\nimport { confirmAlert } from 'react-confirm-alert'; // Import\nimport 'react-confirm-alert/src/react-confirm-alert.css'; // Import css\n\n//Poner constante a la cual le hacemos la consulta de nuestros pefiles como suscriptor\nconst suscriptores= 'http://localhost:4000/api/suscriptores/me';\nconst misPerfiles = \"http://localhost:4000/api/suscriptores/loginPerfiles\";\nconst cargar = \"http://localhost:4000/api/suscriptores/agregarPerfil\";\nconst borrarPerfil = \"http://localhost:4000/api/perfiles/eliminar\";\nconst loginPerfilApi = \"http://localhost:4000/api/suscriptores/loginPerfil\";\n\n\nclass ListarPerfiles extends Component {\n  constructor() {\n    super()\n    this.state = {\n        token: sessionStorage.getItem(\"token\"),\n        suscripcion: JSON.parse(sessionStorage.getItem(\"user\")),\n        miPerfil: JSON.parse(sessionStorage.getItem(\"perfilUser\")),\n        nombre: '',\n        misPerfiles: [],\n        nombreUsado:false,\n        miSuscripcion: [],\n    }\n\n    this.onInputChange = this.onInputChange.bind(this);\n\n\n\n}\n\ngetDataSuscriptor = async () =>{\n    await axios.get(suscriptores,{\n        headers:{'xaccess':sessionStorage.getItem('token')}  \n    })\n    .then(res =>{\n        this.setState({\n            miSuscripcion:res\n        });\n    })\n    .catch(err => {\n        alert(err.response)});\n}\n\n\ningresarPerfil = async (e, idllega) => {\n    console.log(\"id que llega \", idllega)\n    await axios\n        .post(\n            loginPerfilApi,\n            { id: idllega },\n            {\n                headers: { xaccess: sessionStorage.getItem(\"token\") },\n            }\n        )\n        .then((res) => {\n\n            const { user, token } = res.data;\n            sessionStorage.setItem(\"token\", token);\n            sessionStorage.setItem(\"perfilUser\", JSON.stringify(user));\n            sessionStorage.setItem(\"perfil\", res.data.user);\n            sessionStorage.setItem(\"perfilID\", user._id);\n            return (window.location = '/homesuscriptor')\n\n\n        });\n\n}\n\nborrarperfil = async (e, idllega) => {\n    if (this.state.misPerfiles.length > 1) {\n        await axios.post(borrarPerfil,\n            {\n                suscriptorId: this.state.suscripcion.user._id,\n                perfilId: idllega\n            },\n            {\n                headers: { 'xaccess': sessionStorage.getItem('token') }\n            })\n            .then(res => {\n                console.log(res.data)\n                alert(\"¡Perfil eliminado con exito!\")\n                window.location.reload(true);\n                \n            })\n            .catch(err => {\n                alert(err.response)\n            });\n\n    } else { alert(\"No puedes eliminar el unico perfil que tienes\") }\n}\n\n\n\n\ngetDatos = async () => {\n    await axios.get(misPerfiles,\n\n        {\n            headers: { 'xaccess': sessionStorage.getItem('tokenSuscriptor') }\n        })\n        .then(res => {\n            this.setState({\n                misPerfiles: res.data\n            })\n        })\n        .catch(err => {\n            alert(err.response)\n        });\n\n\n\n};\n\n\n\ncomponentDidMount = async () => {\n    this.getDatos();\n}\n\nverificarNombre = (e) => {\n  var nombreExistente=false;\n  e.preventDefault();\n  this.state.misPerfiles.map ( perfil => {\n    if (perfil.nombre == this.state.nombre){\n        alert(\"Debes usar otro nombre de perfil, este ya está en uso\");\n        nombreExistente=true;\n    } })\n   \n      this.onSubmit(nombreExistente)\n    \n  \n}\n\n\nonSubmit = async (nombreExistente) => {\n  if (nombreExistente == false) {\n     if  (this.state.suscripcion.user.suscripcion === \"REGULAR\" && this.state.misPerfiles.length < 2) {\n        await axios.post(cargar,\n            {\n                id: this.state.suscripcion.user._id,\n                nombre: this.state.nombre\n            },\n            { headers: { xaccess: this.state.token } }\n        )\n            .then((res) => {\n              alert(\"¡Perfil agregado con exito!\");\n                window.location.reload(true);\n\n\n            })\n\n            .catch((err) => {\n                console.log(err);\n                window.location.reload(true);\n\n            });\n    } else if (this.state.suscripcion.user.suscripcion === \"PREMIUM\" && this.state.misPerfiles.length < 4) {\n        await axios.post(cargar,\n            {\n                id: this.state.suscripcion.user._id,\n                nombre: this.state.nombre\n            },\n            { headers: { xaccess: this.state.token } }\n        )\n            .then((res) => {\n                     alert(\"¡Perfil agregado con exito!\");\n                window.location.reload(true);\n\n            })\n\n            .catch((err) => {\n                console.log(err);\n                alert(\"¡Perfil agregado con exito!\");\n                window.location.reload(true);\n\n            });\n    } else {\n        alert(\"No podes agregar otro perfil, ya estas en tu maximo permitido, borrá alguno para agregar otro\")\n\n    }\n  }\n  \n};\n\n\nonInputChange = (e) => {\n    this.setState({\n        [e.target.name]: e.target.value\n    })\n\n};\n\n\nrender() {\n    return (\n\n        <div className=\"cardAgregarPerfil col-md-6 offset-md-3 text-light bg-dark \">\n            <h4 className=\"card-header\">Perfiles de {this.state.miSuscripcion.nombre} </h4>\n            <h5 className=\"card-header\">Suscripción: {this.state.miSuscripcion.suscripcion} </h5>\n            <span><h5 className=\"card-header\">Sus perfiles: </h5></span>\n\n            <div>\n\n                {this.state.misPerfiles.map(perfil =>\n                    <div className=\"cardListarPerfil\">\n\n                        <h5> {perfil.nombre} </h5>\n                        <button className=\"btn btn-outline-danger itemBoton float-right\" onClick={() => confirmAlert({\n                            customUI: ({ onClose }) => {\n                                return (\n                                    <div className='custom-ui'>\n                                        <h1>¿Está seguro?</h1>\n                                        {' '}\n                                        <p>¿Desea eliminar este perfil?</p>\n                                        {' '}\n                                        <button onClick={onClose}>No</button> {' '}\n                                        <button\n                                            onClick={(e) => { this.borrarperfil(e, perfil.id) \n                                                onClose();\n\n\n\n                                            }}\n                                        >\n                                            Si, deseo eliminar\n                            </button> \n                            </div>\n                                );\n                            }\n                                     })}>Eliminar</button>\n                           \n                        <button onClick={(e) => { this.ingresarPerfil(e, perfil.id) }} className=\"btn btn-outline-danger itemBoton float-right\">Ingresar</button>\n\n                    </div>\n\n                )}\n\n            </div>\n\n            <form onSubmit={this.verificarNombre} >\n\n                <div className=\"form-group\">\n                    <input className=\"form-control\"\n                        id=\"nombre\"\n                        name=\"nombre\"\n                        onChange={this.onInputChange}\n                        placeholder=\"Nombre del nuevo perfil \"\n                    >\n                    </input>\n                </div>\n\n\n\n                <button type=\"submit\" className=\"btn  btn-outline-danger itemBoton float-right\">\n                    Agregar perfil\n                        </button>\n\n\n            </form>\n\n\n\n\n\n\n        </div>\n\n\n    )\n}\n}\n\nexport default ListarPerfiles;\n"]},"metadata":{},"sourceType":"module"}