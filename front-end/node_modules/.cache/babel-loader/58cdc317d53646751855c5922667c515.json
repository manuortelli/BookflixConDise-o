{"ast":null,"code":"var _jsxFileName = \"/home/manuel/git/BookflixOficialDonna/bf/front-end/src/components/VistaSuscriptor/Historial/Historial.js\";\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nimport HistorialLibros from \"./HistorialLibros\";\nimport \"slick-carousel/slick/slick.css\";\nimport \"slick-carousel/slick/slick-theme.css\";\nimport Slider from \"react-slick\";\nimport { Link, Redirect } from \"react-router-dom\"; //Constante a la cual hacemos la consulta\n\nconst librosApi = \"http://localhost:4000/api/libros/me\";\nconst capitulosApi = \"http://localhost:4000/api/libros/verCapitulo\";\nconst existeL = \"http://localhost:4000/api/libros/existeLibro\";\nconst existeC = \"http://localhost:4000/api/libros/existeCapitulo\";\nconst miperfilApi = \"http://localhost:4000/api/perfiles/me\";\nconst portada = \"http://localhost:4000/uploads/\";\nexport default class MiSuscripcion extends Component {\n  constructor(props) {\n    super(props);\n\n    this.filtrarFechas = lib => {\n      const hoyEntera = new Date();\n      var res = false;\n\n      if (lib.lanzamiento != null) {\n        const hoy = JSON.stringify(new Date().getDate());\n        const mes = JSON.stringify(new Date().getMonth() + 1);\n        const año = JSON.stringify(new Date().getFullYear());\n        const lanMes = JSON.stringify(new Date(lib.lanzamiento).getMonth() + 1);\n        const lanHoy = JSON.stringify(new Date(lib.lanzamiento).getDate());\n        const lanAño = JSON.stringify(new Date(lib.lanzamiento).getFullYear());\n        const lanzaEntera = new Date(lib.lanzamiento);\n\n        if (lanHoy == hoy & lanMes == mes & lanAño == año || lanzaEntera < hoyEntera) {\n          if (lib.expiracion != null) {\n            var ven = new Date(lib.expiracion);\n            const venciMes = JSON.stringify(new Date(lib.expiracion).getMonth() + 1);\n            const venciHoy = JSON.stringify(new Date(lib.expiracion).getDate());\n            const venciAño = JSON.stringify(new Date(lib.expiracion).getFullYear());\n            const venciEntera = new Date(lib.expiracion);\n\n            if (venciHoy == hoy & venciMes == mes & venciAño == año || venciEntera > hoyEntera) {\n              res = true;\n            }\n          } else {\n            res = true;\n          }\n        }\n      }\n\n      return res;\n    };\n\n    this.renderLibros = () => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 7\n        }\n      }, (console.log(\"entro al renderLibros\"), this.state.libros.map(hola => {\n        console.log(hola);\n      })));\n    };\n\n    this.getLibro = async libro => {\n      await axios.post(librosApi, {\n        id: libro.libro\n      }, {\n        headers: {\n          xaccess: sessionStorage.getItem(\"token\")\n        }\n      }).then(res => {\n        if (res.data.archivo != \"\") {\n          var libroObjetoParaHistorial = {\n            archivo: res.data.archivo,\n            titulo: res.data.titulo,\n            ultimoAcceso: libro.ultimoAcceso,\n            terminado: libro.terminado,\n            libroInfoTotal: res.data,\n            capituloInfoTotal: \"\",\n            lanzamiento: res.data.lanzamiento,\n            expiracion: res.data.expiracion\n          };\n          var libroObjetoParaHistorial2 = this.filtrarFechas(libroObjetoParaHistorial);\n\n          if (libroObjetoParaHistorial2) {\n            this.setState({\n              historialTodoJunto: [...this.state.historialTodoJunto, libroObjetoParaHistorial]\n            });\n          }\n        }\n      });\n    };\n\n    this.getCapitulo = async capitulo => {\n      await axios.post(capitulosApi, {\n        id: capitulo.capitulo\n      }, {\n        headers: {\n          xaccess: sessionStorage.getItem(\"token\")\n        }\n      }).then(res => {\n        console.log(\"Lo que llega del capitulo\", res.data);\n        var capituloObjetoParaHistorial = {\n          archivo: res.data.archivo,\n          titulo: res.data.titulo + res.data.n,\n          ultimoAcceso: capitulo.ultimoAcceso,\n          terminado: capitulo.terminado,\n          libroInfoTotal: \"\",\n          capituloInfoTotal: res.data,\n          lanzamiento: res.data.lanzamiento,\n          expiracion: res.data.vencimiento\n        };\n        var capituloObjetoParaHistorial2 = this.filtrarFechas(capituloObjetoParaHistorial);\n\n        if (capituloObjetoParaHistorial2) {\n          this.setState({\n            historialTodoJunto: [...this.state.historialTodoJunto, capituloObjetoParaHistorial]\n          });\n        }\n      });\n    };\n\n    this.mostrarFecha = f => {\n      var fecha = new Date(f);\n      var meses = new Array(\"Enero\", \"Febrero\", \"Marzo\", \"Abril\", \"Mayo\", \"Junio\", \"Julio\", \"Agosto\", \"Septiembre\", \"Octubre\", \"Noviembre\", \"Diciembre\");\n      return fecha.getDate() + \" de \" + meses[fecha.getMonth()] + \" de \" + fecha.getFullYear() + \" \" + fecha.getHours() + \":\" + fecha.getMinutes() + \" hs \"; //return fecha.getDate() + \"/\" + (fecha.getMonth() +1) + \"/\" + fecha.getFullYear();\n    };\n\n    this.state = {\n      token: sessionStorage.getItem(\"token\"),\n      miPerfil: [],\n      historialLibros: [],\n      historialCapitulos: [],\n      libros: [],\n      capitulos: [],\n      historialTodoJunto: [],\n      historialTodoJunto2: [],\n      mostrarSlider: true\n    };\n    this.getLibro = this.getLibro.bind(this);\n    this.getCapitulo = this.getCapitulo.bind(this);\n    this.renderLibros = this.renderLibros.bind(this);\n  }\n\n  // async filtrarL(historialL) {\n  //   return new Promise(async (res, rej) => {\n  //     if (historialL.length > 0) {\n  //       var existentes = new Array();\n  //       const promesa = historialL.map(async (libro) => {\n  //         return await axios\n  //           .post(\n  //             existeL,\n  //             {\n  //               id: libro._id,\n  //             },\n  //             { headers: { xaccess: sessionStorage.getItem(\"token\") } }\n  //           )\n  //           .then((res) => {\n  //             if (res.data.existe) {\n  //               existentes.push(libro);\n  //             }\n  //             debugger;\n  //           });\n  //       });\n  //       await Promise.all(promesa);\n  //       res(existentes);\n  //     } else {\n  //       res([]);\n  //     }\n  //   });\n  // }\n  // async filtrarC(historialC) {\n  //   return new Promise(async (res, rej) => {\n  //     if (historialC.length > 0) {\n  //       var existentes = new Array();\n  //       const promesa = historialC.map(async (capitulo) => {\n  //         return await axios\n  //           .post(\n  //             existeC,\n  //             {\n  //               id: capitulo._id,\n  //             },\n  //             { headers: { xaccess: sessionStorage.getItem(\"token\") } }\n  //           )\n  //           .then((res) => {\n  //             if (res.data.existe) {\n  //               existentes.push(capitulo);\n  //             }\n  //           });\n  //       });\n  //       await Promise.all(promesa);\n  //       res(existentes);\n  //     } else {\n  //       res([]);\n  //     }\n  //   });\n  // }\n  async componentDidMount() {\n    var historialL = new Array();\n    var historialC = new Array();\n    await axios.get(miperfilApi, {\n      headers: {\n        xaccess: sessionStorage.getItem(\"token\")\n      }\n    }).then(async res => {\n      this.setState({\n        miPerfil: res.data\n      });\n\n      if (res.data.historialLibros) {\n        res.data.historialLibros.map(libro => {\n          historialL.push(libro);\n        }); //historialL = await this.filtrarL(historialL);\n\n        historialL.map(async libro => {\n          await this.getLibro(libro);\n        });\n      }\n\n      if (res.data.historialCapitulos) {\n        res.data.historialCapitulos.map(cap => {\n          historialC.push(cap);\n        }); //historialC = await this.filtrarC(historialC);\n\n        historialC.map(capitulo => {\n          this.getCapitulo(capitulo);\n        });\n      }\n    }).catch(err => {\n      alert(err.response);\n    });\n  }\n\n  render() {\n    const settings = {\n      dots: true,\n      infinite: false,\n      speed: 500,\n      slidesToShow: 5,\n      slidesToScroll: 3,\n      className: \"slides\"\n    };\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"carrusel\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      className: \"libros-disponibles\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 9\n      }\n    }, \"Historial\"), this.state.historialTodoJunto.length != 0 ? /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Slider, Object.assign({}, settings, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 13\n      }\n    }), this.state.historialTodoJunto.map(libro => /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container-VerLibro\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"imgBx\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 299,\n        columnNumber: 21\n      }\n    }, libro.libroInfoTotal != \"\" ? /*#__PURE__*/React.createElement(Link, {\n      className: \"imgBx\",\n      to: \"/suscriptor/libros/\" + libro.libroInfoTotal._id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: portada + libro.libroInfoTotal.portada,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 27\n      }\n    })) : /*#__PURE__*/React.createElement(Link, {\n      className: \"imgBx\",\n      to: \"/suscriptor/libros/\" + libro.capituloInfoTotal.libro,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: portada + libro.capituloInfoTotal.portada,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 27\n      }\n    }))), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"h2\", {\n      className: \"titulo\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 25\n      }\n    }, \" \", libro.titulo, \" \"), /*#__PURE__*/React.createElement(\"h2\", {\n      className: \"titulo\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 25\n      }\n    }, \" Ultimo acceso: \", this.mostrarFecha(libro.ultimoAcceso))))))))) : /*#__PURE__*/React.createElement(\"div\", {\n      className: \"cardErrorFavoritos\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 323,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 324,\n        columnNumber: 15\n      }\n    }, \"DISCULPE POR EL MOMENTO NO HAY LIBROS/CAPITULOS EN EL HISTORIAL\")));\n  }\n\n}\n/*\n\n\nlinea 177\n\n\n              libros.map((libro, index) => (\n                <div key={index}> {libro.titulo}</div>\n              ))\n\n\n              */\n\n/*<div className=\"container\">\n  <div className=\"cardVS col-md-6 offset-md-3 text-light bg-dark\">\n    <div>\n      <h2 className=\"card-header\">\n        {\" \"}\n        Historial de {this.state.miPerfil.nombre}{\" \"}\n      </h2>\n    </div>\n\n    <div className=\"card-body\">\n      {libros ? (\n        this.state.historialTodoJunto.map((libro, index) => (\n          <div key={index}> {libro.titulo}</div>\n        ))\n      ) : (\n        <div>No ha visitado ningún libro </div>\n      )}\n      {capitulos ? (\n        capitulos.map((capitulo, index) => (\n          <div key={index}>\n            {\" \"}\n            {capitulo.titulo} ,{capitulo.tituloLibro}\n          </div>\n        ))\n      ) : (\n        <div> No ha visitado ningún capítulo </div>\n      )}\n    </div>\n  </div>\n</div>*/","map":{"version":3,"sources":["/home/manuel/git/BookflixOficialDonna/bf/front-end/src/components/VistaSuscriptor/Historial/Historial.js"],"names":["React","Component","axios","HistorialLibros","Slider","Link","Redirect","librosApi","capitulosApi","existeL","existeC","miperfilApi","portada","MiSuscripcion","constructor","props","filtrarFechas","lib","hoyEntera","Date","res","lanzamiento","hoy","JSON","stringify","getDate","mes","getMonth","año","getFullYear","lanMes","lanHoy","lanAño","lanzaEntera","expiracion","ven","venciMes","venciHoy","venciAño","venciEntera","renderLibros","console","log","state","libros","map","hola","getLibro","libro","post","id","headers","xaccess","sessionStorage","getItem","then","data","archivo","libroObjetoParaHistorial","titulo","ultimoAcceso","terminado","libroInfoTotal","capituloInfoTotal","libroObjetoParaHistorial2","setState","historialTodoJunto","getCapitulo","capitulo","capituloObjetoParaHistorial","n","vencimiento","capituloObjetoParaHistorial2","mostrarFecha","f","fecha","meses","Array","getHours","getMinutes","token","miPerfil","historialLibros","historialCapitulos","capitulos","historialTodoJunto2","mostrarSlider","bind","componentDidMount","historialL","historialC","get","push","cap","catch","err","alert","response","render","settings","dots","infinite","speed","slidesToShow","slidesToScroll","className","length","_id"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport HistorialLibros from \"./HistorialLibros\";\nimport \"slick-carousel/slick/slick.css\";\nimport \"slick-carousel/slick/slick-theme.css\";\nimport Slider from \"react-slick\";\nimport { Link, Redirect } from \"react-router-dom\";\n\n//Constante a la cual hacemos la consulta\nconst librosApi = \"http://localhost:4000/api/libros/me\";\nconst capitulosApi = \"http://localhost:4000/api/libros/verCapitulo\";\nconst existeL = \"http://localhost:4000/api/libros/existeLibro\";\nconst existeC = \"http://localhost:4000/api/libros/existeCapitulo\";\nconst miperfilApi = \"http://localhost:4000/api/perfiles/me\";\nconst portada = \"http://localhost:4000/uploads/\";\n\nexport default class MiSuscripcion extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      token: sessionStorage.getItem(\"token\"),\n      miPerfil: [],\n      historialLibros: [],\n      historialCapitulos: [],\n\n      libros: [],\n      capitulos: [],\n      historialTodoJunto: [],\n      historialTodoJunto2: [],\n      mostrarSlider: true,\n    };\n\n    this.getLibro = this.getLibro.bind(this);\n    this.getCapitulo = this.getCapitulo.bind(this);\n    this.renderLibros = this.renderLibros.bind(this);\n  }\n\n\n  filtrarFechas = (lib) => {\n\n    const hoyEntera = new Date();\n    var res = false;\n\n    if (lib.lanzamiento != null) {\n      const hoy = JSON.stringify(new Date().getDate());\n      const mes = JSON.stringify(new Date().getMonth() + 1);\n      const año = JSON.stringify(new Date().getFullYear());\n\n      const lanMes = JSON.stringify(new Date(lib.lanzamiento).getMonth() + 1);\n      const lanHoy = JSON.stringify(new Date(lib.lanzamiento).getDate());\n      const lanAño = JSON.stringify(new Date(lib.lanzamiento).getFullYear());\n      const lanzaEntera = new Date(lib.lanzamiento);\n      if (\n        (lanHoy == hoy) & (lanMes == mes) & (lanAño == año) ||\n        lanzaEntera < hoyEntera\n      ) {\n        if (lib.expiracion != null) {\n          var ven = new Date(lib.expiracion);\n          const venciMes = JSON.stringify(\n            new Date(lib.expiracion).getMonth() + 1\n          );\n\n          const venciHoy = JSON.stringify(new Date(lib.expiracion).getDate());\n\n          const venciAño = JSON.stringify(\n            new Date(lib.expiracion).getFullYear()\n          );\n          const venciEntera = new Date(lib.expiracion);\n\n          if (\n            (venciHoy == hoy) & (venciMes == mes) & (venciAño == año) ||\n            venciEntera > hoyEntera\n          ) {\n            res = true;\n\n          }\n        } else {\n          res = true;\n\n        }\n      }\n\n    }\n\n    return res;\n  };\n\n\n  renderLibros = () => {\n    return (\n      <div>\n        {\n          (console.log(\"entro al renderLibros\"),\n            this.state.libros.map((hola) => {\n              console.log(hola);\n            }))\n        }\n      </div>\n    );\n  };\n\n  getLibro = async (libro) => {\n    await axios\n      .post(\n        librosApi,\n        { id: libro.libro },\n        { headers: { xaccess: sessionStorage.getItem(\"token\") } }\n      )\n      .then((res) => {\n       \n       if (res.data.archivo != \"\") {\n        var libroObjetoParaHistorial = {\n          archivo: res.data.archivo,\n          titulo: res.data.titulo,\n          ultimoAcceso: libro.ultimoAcceso,\n          terminado: libro.terminado,\n          libroInfoTotal: res.data,\n          capituloInfoTotal: \"\",\n          lanzamiento: res.data.lanzamiento,\n          expiracion: res.data.expiracion\n        };\n\n\n        var libroObjetoParaHistorial2 = this.filtrarFechas(libroObjetoParaHistorial);\n\n        if (libroObjetoParaHistorial2 ) {\n          \n          this.setState({\n            historialTodoJunto: [\n              ...this.state.historialTodoJunto,\n              libroObjetoParaHistorial,\n            ],\n          });\n        }\n      } \n      });\n      \n  };\n\n  getCapitulo = async (capitulo) => {\n    await axios\n      .post(\n        capitulosApi,\n        { id: capitulo.capitulo },\n        { headers: { xaccess: sessionStorage.getItem(\"token\") } }\n      )\n      .then((res) => {\n        console.log(\"Lo que llega del capitulo\", res.data)\n        var capituloObjetoParaHistorial = {\n          archivo: res.data.archivo,\n          titulo: res.data.titulo + res.data.n,\n          ultimoAcceso: capitulo.ultimoAcceso,\n          terminado: capitulo.terminado,\n          libroInfoTotal: \"\",\n          capituloInfoTotal: res.data,\n          lanzamiento: res.data.lanzamiento,\n          expiracion: res.data.vencimiento\n        };\n\n        var capituloObjetoParaHistorial2 = this.filtrarFechas(capituloObjetoParaHistorial);\n        if (capituloObjetoParaHistorial2) {\n        this.setState({\n          historialTodoJunto: [\n            ...this.state.historialTodoJunto,\n            capituloObjetoParaHistorial,\n          ],\n        });}\n      });\n  };\n\n  mostrarFecha = (f) => {\n    var fecha = new Date(f);\n    var meses = new Array(\"Enero\", \"Febrero\", \"Marzo\", \"Abril\", \"Mayo\", \"Junio\", \"Julio\", \"Agosto\", \"Septiembre\", \"Octubre\", \"Noviembre\", \"Diciembre\");\n    return (fecha.getDate() + \" de \" + meses[fecha.getMonth()] + \" de \" + fecha.getFullYear()+ \" \" +fecha.getHours()+\":\" +fecha.getMinutes()+ \" hs \" );\n    //return fecha.getDate() + \"/\" + (fecha.getMonth() +1) + \"/\" + fecha.getFullYear();\n  }\n\n  // async filtrarL(historialL) {\n  //   return new Promise(async (res, rej) => {\n  //     if (historialL.length > 0) {\n  //       var existentes = new Array();\n\n  //       const promesa = historialL.map(async (libro) => {\n  //         return await axios\n  //           .post(\n  //             existeL,\n  //             {\n  //               id: libro._id,\n  //             },\n  //             { headers: { xaccess: sessionStorage.getItem(\"token\") } }\n  //           )\n  //           .then((res) => {\n  //             if (res.data.existe) {\n  //               existentes.push(libro);\n  //             }\n  //             debugger;\n  //           });\n  //       });\n  //       await Promise.all(promesa);\n\n  //       res(existentes);\n  //     } else {\n  //       res([]);\n  //     }\n  //   });\n  // }\n  // async filtrarC(historialC) {\n  //   return new Promise(async (res, rej) => {\n  //     if (historialC.length > 0) {\n  //       var existentes = new Array();\n\n  //       const promesa = historialC.map(async (capitulo) => {\n  //         return await axios\n  //           .post(\n  //             existeC,\n  //             {\n  //               id: capitulo._id,\n  //             },\n  //             { headers: { xaccess: sessionStorage.getItem(\"token\") } }\n  //           )\n  //           .then((res) => {\n  //             if (res.data.existe) {\n  //               existentes.push(capitulo);\n  //             }\n  //           });\n  //       });\n  //       await Promise.all(promesa);\n\n  //       res(existentes);\n  //     } else {\n  //       res([]);\n  //     }\n  //   });\n  // }\n\n  async componentDidMount() {\n    var historialL = new Array();\n    var historialC = new Array();\n\n    await axios\n      .get(miperfilApi, {\n        headers: { xaccess: sessionStorage.getItem(\"token\") },\n      })\n      .then(async (res) => {\n        this.setState({\n          miPerfil: res.data,\n        });\n        if (res.data.historialLibros) {\n          res.data.historialLibros.map((libro) => {\n            historialL.push(libro);\n          });\n          //historialL = await this.filtrarL(historialL);\n          historialL.map(async (libro) => {\n            await this.getLibro(libro);\n          });\n        }\n        if (res.data.historialCapitulos) {\n          res.data.historialCapitulos.map((cap) => {\n            historialC.push(cap);\n          });\n          //historialC = await this.filtrarC(historialC);\n          historialC.map((capitulo) => {\n            this.getCapitulo(capitulo);\n          });\n        }\n      })\n      .catch((err) => {\n        alert(err.response);\n      });\n\n\n   \n\n  }\n\n  \n\n  render() {\n    const settings = {\n      dots: true,\n      infinite: false,\n      speed: 500,\n      slidesToShow: 5,\n      slidesToScroll: 3,\n      className: \"slides\",\n    };\n  \n    \n    \n    return (\n      <div className=\"carrusel\">\n        <h3 className=\"libros-disponibles\">Historial</h3>\n        {this.state.historialTodoJunto.length != 0 ? (\n          <React.Fragment>\n            <Slider {...settings}>\n              {this.state.historialTodoJunto.map((libro) => (\n                <div className=\"container-VerLibro\">\n                  <div className=\"box\">\n                    <div className=\"imgBx\" >\n                      {(libro.libroInfoTotal != \"\") ?\n                        <Link className=\"imgBx\" to={\"/suscriptor/libros/\" + libro.libroInfoTotal._id}>\n                          <img src={portada + libro.libroInfoTotal.portada} />\n                        </Link>\n                        :\n                        <Link className=\"imgBx\" to={\"/suscriptor/libros/\" + libro.capituloInfoTotal.libro}>\n                          <img src={portada + libro.capituloInfoTotal.portada} />\n                        </Link>\n                      }\n                    </div>\n                    <span className=\"content\">\n                      <span>\n                        <br></br>\n                        <h2 className=\"titulo\"> {libro.titulo} </h2>\n                        <h2 className=\"titulo\"> Ultimo acceso: {this.mostrarFecha(libro.ultimoAcceso)}</h2>\n                      </span>\n                    </span>\n                  </div>\n                </div>\n              ))}\n            </Slider>\n          </React.Fragment>\n        ) : (\n            <div className=\"cardErrorFavoritos\">\n              <h4>DISCULPE POR EL MOMENTO NO HAY LIBROS/CAPITULOS EN EL HISTORIAL</h4>\n            </div>\n          )\n        }\n      </div>\n\n    );\n  }\n}\n/*\n\n\nlinea 177\n\n\n              libros.map((libro, index) => (\n                <div key={index}> {libro.titulo}</div>\n              ))\n\n\n              */\n\n\n\n/*<div className=\"container\">\n  <div className=\"cardVS col-md-6 offset-md-3 text-light bg-dark\">\n    <div>\n      <h2 className=\"card-header\">\n        {\" \"}\n        Historial de {this.state.miPerfil.nombre}{\" \"}\n      </h2>\n    </div>\n\n    <div className=\"card-body\">\n      {libros ? (\n        this.state.historialTodoJunto.map((libro, index) => (\n          <div key={index}> {libro.titulo}</div>\n        ))\n      ) : (\n        <div>No ha visitado ningún libro </div>\n      )}\n      {capitulos ? (\n        capitulos.map((capitulo, index) => (\n          <div key={index}>\n            {\" \"}\n            {capitulo.titulo} ,{capitulo.tituloLibro}\n          </div>\n        ))\n      ) : (\n        <div> No ha visitado ningún capítulo </div>\n      )}\n    </div>\n  </div>\n</div>*/"]},"metadata":{},"sourceType":"module"}