{"ast":null,"code":"var _jsxFileName = \"D:\\\\Documentos\\\\GitHub\\\\bf\\\\front-end\\\\src\\\\components\\\\VistaSuscriptor\\\\Historial\\\\Historial.js\";\nimport React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport Libros from \"../../VistaAdmin/libros/Libros\"; //Constante a la cual hacemos la consulta\n\nconst librosApi = \"http://localhost:4000/api/libros/me\";\nconst capitulosApi = \"http://localhost:4000/api/libros/verCapitulo\";\nconst capitulosMuchosApi = \"http://localhost:4000/api/libros/capitulosMuchos\";\nconst existeL = \"http://localhost:4000/api/libros/existeLibro\";\nconst existeC = \"http://localhost:4000/api/libros/existeCapitulo\";\nconst miperfilApi = \"http://localhost:4000/api/perfiles/me\";\nexport default class MiSuscripcion extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getLibros = async () => {\n      var librosAux = new Array();\n      this.state.historialLibros.map(async libro => {\n        await axios.post(librosApi, {\n          id: libro._id\n        }, {\n          headers: {\n            xaccess: sessionStorage.getItem(\"token\")\n          }\n        }).then(res => {\n          librosAux.push(res.data);\n        });\n      });\n      this.setState({\n        historialLibros: librosAux\n      });\n    };\n\n    this.getCapitulos = async () => {\n      console.log(\"vino a buscar los capitulos:\", this.state.historialCapitulos);\n      this.state.historialCapitulos.map(capitulo => {\n        console.log(\"adentro del map\");\n        console.log(\"capitulo objeto:\", capitulo);\n        console.log(\"capitulo. capitulo:\", capitulo.capitulo);\n        /*  await axios\n          .post(\n            capitulosApi,\n            { id: capitulo.capitulo },\n            { headers: { xaccess: sessionStorage.getItem(\"token\") } }\n          )\n          .then((res) => {\n            capitulosAux.push(res.data);\n          });\n        */\n      });\n      /*\n      this.setState({\n        historialCapitulos: capitulosAux,\n      });*/\n    };\n\n    this.filtrar = async () => {\n      //filtro los existentes\n      if (this.state.historialLibros.length > 0) {\n        var existentes = new Array();\n        this.state.historialLibros.map(async libro => {\n          await axios.post(existeL, {\n            id: libro._id\n          }, {\n            headers: {\n              xaccess: sessionStorage.getItem(\"token\")\n            }\n          }).then(res => {\n            if (res.data.existe) {\n              existentes.push(libro);\n            }\n          });\n        });\n        this.setState({\n          historialLibros: existentes,\n          librosConInfoTermiado: existentes\n        });\n\n        if (this.state.historialLibros.length) {\n          this.getLibros();\n        }\n      }\n\n      if (this.state.historialCapitulos.length > 0) {\n        var existentes = new Array();\n        this.state.historialCapitulos.map(async capitulo => {\n          await axios.post(existeC, {\n            id: capitulo._id\n          }, {\n            headers: {\n              xaccess: sessionStorage.getItem(\"token\")\n            }\n          }).then(res => {\n            if (res.data.existe) {\n              existentes.push(capitulo);\n            }\n          });\n        });\n        this.setState({\n          historialCapitulos: existentes,\n          capitulosConInfoTerminado: existentes\n        });\n\n        if (this.state.historialCapitulos) {\n          console.log(\"va a buscar los capitulos\");\n          this.getCapitulos();\n        }\n      }\n    };\n\n    this.state = {\n      token: sessionStorage.getItem(\"token\"),\n      miPerfil: [],\n      historialLibros: [],\n      historialCapitulos: [],\n      librosConInfoTermiado: [],\n      capitulosConInfoTerminado: []\n    };\n    this.filtrar = this.filtrar.bind(this);\n    this.getLibros = this.getLibros.bind(this);\n    this.getCapitulos = this.getCapitulos.bind(this);\n  }\n\n  async componentDidMount() {\n    var historialL = new Array();\n    var historialC = new Array();\n    await axios.get(miperfilApi, {\n      headers: {\n        xaccess: sessionStorage.getItem(\"token\")\n      }\n    }).then(res => {\n      res.data.historialLibros.map(libro => {\n        historialL.push(libro);\n      });\n      res.data.historialCapitulos.map(cap => {\n        historialC.push(cap);\n      });\n      this.setState({\n        historialLibros: historialL,\n        historialCapitulos: historialC,\n        miPerfil: res.data\n      });\n      this.filtrar();\n    }).catch(err => {\n      alert(err.response);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      class: \"cardVS col-md-6 offset-md-3 text-light bg-dark\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      class: \"card-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 13\n      }\n    }, \" \", \"Historial de \", this.state.miPerfil.nombre, \" \")), /*#__PURE__*/React.createElement(\"div\", {\n      class: \"card-body\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 11\n      }\n    }, this.state.historialLibros.map((libro, index) => /*#__PURE__*/React.createElement(\"div\", {\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 15\n      }\n    }, \" \", (libro._id, console.log(libro)))), this.state.historialCapitulos.map((capitulo, index) => /*#__PURE__*/React.createElement(\"div\", {\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 15\n      }\n    }, \" \", (capitulo._id, console.log(capitulo)), \" \")), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 13\n      }\n    }))));\n  }\n\n}","map":{"version":3,"sources":["D:/Documentos/GitHub/bf/front-end/src/components/VistaSuscriptor/Historial/Historial.js"],"names":["React","Component","Link","axios","Libros","librosApi","capitulosApi","capitulosMuchosApi","existeL","existeC","miperfilApi","MiSuscripcion","constructor","props","getLibros","librosAux","Array","state","historialLibros","map","libro","post","id","_id","headers","xaccess","sessionStorage","getItem","then","res","push","data","setState","getCapitulos","console","log","historialCapitulos","capitulo","filtrar","length","existentes","existe","librosConInfoTermiado","capitulosConInfoTerminado","token","miPerfil","bind","componentDidMount","historialL","historialC","get","cap","catch","err","alert","response","render","nombre","index"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport Libros from \"../../VistaAdmin/libros/Libros\";\n\n//Constante a la cual hacemos la consulta\nconst librosApi = \"http://localhost:4000/api/libros/me\";\nconst capitulosApi = \"http://localhost:4000/api/libros/verCapitulo\";\nconst capitulosMuchosApi = \"http://localhost:4000/api/libros/capitulosMuchos\";\nconst existeL = \"http://localhost:4000/api/libros/existeLibro\";\nconst existeC = \"http://localhost:4000/api/libros/existeCapitulo\";\nconst miperfilApi = \"http://localhost:4000/api/perfiles/me\";\n\nexport default class MiSuscripcion extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      token: sessionStorage.getItem(\"token\"),\n      miPerfil: [],\n      historialLibros: [],\n      historialCapitulos: [],\n\n      librosConInfoTermiado: [],\n      capitulosConInfoTerminado: [],\n    };\n    this.filtrar = this.filtrar.bind(this);\n    this.getLibros = this.getLibros.bind(this);\n    this.getCapitulos = this.getCapitulos.bind(this);\n  }\n  getLibros = async () => {\n    var librosAux = new Array();\n    this.state.historialLibros.map(async (libro) => {\n      await axios\n        .post(\n          librosApi,\n          { id: libro._id },\n          { headers: { xaccess: sessionStorage.getItem(\"token\") } }\n        )\n        .then((res) => {\n          librosAux.push(res.data);\n        });\n    });\n    this.setState({\n      historialLibros: librosAux,\n    });\n  };\n  getCapitulos = async () => {\n    console.log(\"vino a buscar los capitulos:\", this.state.historialCapitulos);\n\n    this.state.historialCapitulos.map((capitulo) => {\n      console.log(\"adentro del map\");\n      console.log(\"capitulo objeto:\", capitulo);\n      console.log(\"capitulo. capitulo:\", capitulo.capitulo);\n      /*  await axios\n        .post(\n          capitulosApi,\n          { id: capitulo.capitulo },\n          { headers: { xaccess: sessionStorage.getItem(\"token\") } }\n        )\n        .then((res) => {\n          capitulosAux.push(res.data);\n        });\n    */\n    });\n\n    /*\n    this.setState({\n      historialCapitulos: capitulosAux,\n    });*/\n  };\n\n  filtrar = async () => {\n    //filtro los existentes\n\n    if (this.state.historialLibros.length > 0) {\n      var existentes = new Array();\n      this.state.historialLibros.map(async (libro) => {\n        await axios\n          .post(\n            existeL,\n            {\n              id: libro._id,\n            },\n            { headers: { xaccess: sessionStorage.getItem(\"token\") } }\n          )\n          .then((res) => {\n            if (res.data.existe) {\n              existentes.push(libro);\n            }\n          });\n      });\n      this.setState({\n        historialLibros: existentes,\n        librosConInfoTermiado: existentes,\n      });\n      if (this.state.historialLibros.length) {\n        this.getLibros();\n      }\n    }\n\n    if (this.state.historialCapitulos.length > 0) {\n      var existentes = new Array();\n      this.state.historialCapitulos.map(async (capitulo) => {\n        await axios\n          .post(\n            existeC,\n            {\n              id: capitulo._id,\n            },\n            { headers: { xaccess: sessionStorage.getItem(\"token\") } }\n          )\n          .then((res) => {\n            if (res.data.existe) {\n              existentes.push(capitulo);\n            }\n          });\n      });\n\n      this.setState({\n        historialCapitulos: existentes,\n        capitulosConInfoTerminado: existentes,\n      });\n\n      if (this.state.historialCapitulos) {\n        console.log(\"va a buscar los capitulos\");\n        this.getCapitulos();\n      }\n    }\n  };\n  async componentDidMount() {\n    var historialL = new Array();\n    var historialC = new Array();\n\n    await axios\n      .get(miperfilApi, {\n        headers: { xaccess: sessionStorage.getItem(\"token\") },\n      })\n      .then((res) => {\n        res.data.historialLibros.map((libro) => {\n          historialL.push(libro);\n        });\n        res.data.historialCapitulos.map((cap) => {\n          historialC.push(cap);\n        });\n        this.setState({\n          historialLibros: historialL,\n          historialCapitulos: historialC,\n          miPerfil: res.data,\n        });\n        this.filtrar();\n      })\n      .catch((err) => {\n        alert(err.response);\n      });\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <div class=\"cardVS col-md-6 offset-md-3 text-light bg-dark\">\n          <div>\n            <h2 class=\"card-header\">\n              {\" \"}\n              Historial de {this.state.miPerfil.nombre}{\" \"}\n            </h2>\n          </div>\n          <div class=\"card-body\">\n            {this.state.historialLibros.map((libro, index) => (\n              <div key={index}> {(libro._id, console.log(libro))}</div>\n            ))}\n            {this.state.historialCapitulos.map((capitulo, index) => (\n              <div key={index}> {(capitulo._id, console.log(capitulo))} </div>\n            ))}\n            <div></div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}