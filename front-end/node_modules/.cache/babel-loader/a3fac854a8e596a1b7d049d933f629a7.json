{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jhon\\\\Desktop\\\\proyectos-IS1\\\\version4.0\\\\bf\\\\front-end\\\\src\\\\components\\\\VistaAdmin\\\\Novedades\\\\VisualizarNovedad.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nconst portada = 'http://localhost:4000/uploads/';\nconst me = 'http://localhost:4000/api/novedades/me';\n\nclass VisualizarNovedad extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getDatos = async () => {\n      await axios.post(me, {\n        id: this.state.id\n      }, {\n        headers: {\n          'xaccess': this.state.token\n        }\n      }).then(res => {\n        console.log('en get data');\n        console.log(res.data);\n        this.mostrarFecha(res.data.publicacion);\n        this.setState({\n          novedad: res.data\n        });\n      }).catch(err => {\n        console.log(err);\n      });\n    };\n\n    this.mostrarFecha = f => {\n      var fecha = new Date(f);\n      var meses = new Array(\"Enero\", \"Febrero\", \"Marzo\", \"Abril\", \"Mayo\", \"Junio\", \"Julio\", \"Agosto\", \"Septiembre\", \"Octubre\", \"Noviembre\", \"Diciembre\");\n      return fecha.getDate() + \" de \" + meses[fecha.getMonth()] + \" de \" + fecha.getFullYear(); //return fecha.getDate() + \"/\" + (fecha.getMonth() +1) + \"/\" + fecha.getFullYear();\n    };\n\n    this.state = {\n      id: this.props.match.params.id,\n      token: sessionStorage.getItem('token'),\n      novedad: ''\n    };\n  }\n\n  async componentDidMount() {\n    this.getDatos();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      class: \"card col-md-6 offset-md-3 text-light \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      class: \"card-body button\",\n      key: this.state.novedad._id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      class: \"card-body\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 22\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      alt: \"\",\n      width: \"300px\",\n      height: \"400px\",\n      src: portada + `${this.state.novedad.portada}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"h5\", {\n      class: \"card-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 25\n      }\n    }, this.state.novedad.titulo), /*#__PURE__*/React.createElement(\"h6\", {\n      class: \"card-subtitle mb-2 text-light\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 25\n      }\n    }, \" \", this.state.novedad.descripcion), /*#__PURE__*/React.createElement(\"h6\", {\n      class: \"card-subtitle mb-2 text-light\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 25\n      }\n    }, \"Publicada el \", this.mostrarFecha(this.state.novedad.publicacion)))));\n  }\n\n}\n\nexport default VisualizarNovedad;","map":{"version":3,"sources":["C:/Users/Jhon/Desktop/proyectos-IS1/version4.0/bf/front-end/src/components/VistaAdmin/Novedades/VisualizarNovedad.js"],"names":["React","Component","axios","portada","me","VisualizarNovedad","constructor","props","getDatos","post","id","state","headers","token","then","res","console","log","data","mostrarFecha","publicacion","setState","novedad","catch","err","f","fecha","Date","meses","Array","getDate","getMonth","getFullYear","match","params","sessionStorage","getItem","componentDidMount","render","_id","titulo","descripcion"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nconst portada = 'http://localhost:4000/uploads/';\r\nconst me='http://localhost:4000/api/novedades/me';\r\n\r\n\r\nclass VisualizarNovedad extends Component {\r\n    constructor (props){\r\n        super(props);\r\n        this.state={\r\n            id: this.props.match.params.id,\r\n            token: sessionStorage.getItem('token'),\r\n            novedad:''\r\n        }\r\n\r\n    }\r\n    getDatos= async ()=>{\r\n        await axios.post(me,\r\n        { id: this.state.id },\r\n        { headers:{'xaccess': this.state.token}}\r\n    )\r\n    .then(res =>{\r\n        console.log('en get data')\r\n        console.log(res.data);\r\n        this.mostrarFecha(res.data.publicacion);\r\n        this.setState({\r\n            novedad:res.data\r\n        })\r\n    })\r\n    .catch(err =>{console.log(err)});\r\n    }\r\n\r\n    async componentDidMount(){\r\n        this.getDatos()\r\n    }\r\n    mostrarFecha=(f)=>{\r\n        var fecha =new Date(f);\r\n        var meses = new Array (\"Enero\",\"Febrero\",\"Marzo\",\"Abril\",\"Mayo\",\"Junio\",\"Julio\",\"Agosto\",\"Septiembre\",\"Octubre\",\"Noviembre\",\"Diciembre\");\r\n        return (fecha.getDate() + \" de \" + meses[fecha.getMonth()] + \" de \" + fecha.getFullYear());\r\n        //return fecha.getDate() + \"/\" + (fecha.getMonth() +1) + \"/\" + fecha.getFullYear();\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n\r\n            <div class=\"card col-md-6 offset-md-3 text-light \" >\r\n                <div class=\"card-body button\"  key={this.state.novedad._id}>\r\n                \r\n               \r\n                     <div class=\"card-body\">\r\n                        <img alt='' width=\"300px\" height=\"400px\" src={portada + `${this.state.novedad.portada}`} />\r\n                        <h5 class=\"card-header\">{this.state.novedad.titulo}</h5>\r\n                        <h6 class=\"card-subtitle mb-2 text-light\"> {this.state.novedad.descripcion}</h6>\r\n                        <h6 class=\"card-subtitle mb-2 text-light\">Publicada el {this.mostrarFecha(this.state.novedad.publicacion)}</h6>\r\n                     </div>\r\n                </div>\r\n                \r\n            </div>\r\n            \r\n        )\r\n    }\r\n}\r\n\r\nexport default  VisualizarNovedad ;\r\n"]},"metadata":{},"sourceType":"module"}