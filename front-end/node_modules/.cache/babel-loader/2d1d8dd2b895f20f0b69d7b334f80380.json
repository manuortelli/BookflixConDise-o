{"ast":null,"code":"var _jsxFileName = \"/home/manuel/git/BookflixOficialDonna/bf/front-end/src/components/VistaSuscriptor/Historial/Historial.js\";\nimport React, { Component } from \"react\";\nimport axios from \"axios\"; //Constante a la cual hacemos la consulta\n\nconst librosApi = \"http://localhost:4000/api/libros/me\";\nconst capitulosApi = \"http://localhost:4000/api/libros/verCapitulo\";\nconst capitulosMuchosApi = \"http://localhost:4000/api/libros/capitulosMuchos\";\nconst existeL = \"http://localhost:4000/api/libros/existeLibro\";\nconst existeC = \"http://localhost:4000/api/libros/existeCapitulo\";\nconst miperfilApi = \"http://localhost:4000/api/perfiles/me\";\nexport default class MiSuscripcion extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getLibro = async libro => {\n      await axios.post(librosApi, {\n        id: libro.libro\n      }, {\n        headers: {\n          xaccess: sessionStorage.getItem(\"token\")\n        }\n      }).then(res => {\n        this.state.libros.push(res.data);\n        console.log(res.data);\n      });\n    };\n\n    this.getCapitulo = async capitulo => {\n      await axios.post(capitulosApi, {\n        id: capitulo.capitulo\n      }, {\n        headers: {\n          xaccess: sessionStorage.getItem(\"token\")\n        }\n      }).then(res => {\n        this.state.capitulos.push(res.data);\n      });\n    };\n\n    this.filtrar = async () => {\n      //filtro los existentes\n      if (this.state.historialLibros.length > 0) {\n        var existentes = new Array();\n        this.state.historialLibros.map(async libro => {\n          await axios.post(existeL, {\n            id: libro._id\n          }, {\n            headers: {\n              xaccess: sessionStorage.getItem(\"token\")\n            }\n          }).then(res => {\n            if (res.data.existe) {\n              existentes.push(libro);\n            }\n          });\n        });\n        this.setState({\n          historialLibros: existentes,\n          librosConInfoTermiado: existentes\n        });\n\n        if (this.state.historialLibros.length) {\n          this.getLibros();\n        }\n      }\n\n      if (this.state.historialCapitulos.length > 0) {\n        var existentes = new Array();\n        this.state.historialCapitulos.map(async capitulo => {\n          await axios.post(existeC, {\n            id: capitulo._id\n          }, {\n            headers: {\n              xaccess: sessionStorage.getItem(\"token\")\n            }\n          }).then(res => {\n            if (res.data.existe) {\n              existentes.push(capitulo);\n            }\n          });\n        });\n        this.setState({\n          historialCapitulos: existentes,\n          capitulosConInfoTerminado: existentes\n        });\n\n        if (this.state.historialCapitulos) {\n          this.render(); //this.getCapitulos();\n        }\n      }\n    };\n\n    this.state = {\n      token: sessionStorage.getItem(\"token\"),\n      miPerfil: [],\n      historialLibros: [],\n      historialCapitulos: [],\n      librosConInfoTerminado: [],\n      capitulosConInfoTerminado: [],\n      libros: [],\n      capitulos: []\n    };\n    this.filtrar = this.filtrar.bind(this);\n    this.getLibro = this.getLibro.bind(this);\n    this.getCapitulo = this.getCapitulo.bind(this);\n  }\n\n  async componentDidMount() {\n    var historialL = new Array();\n    var historialC = new Array();\n    await axios.get(miperfilApi, {\n      headers: {\n        xaccess: sessionStorage.getItem(\"token\")\n      }\n    }).then(res => {\n      res.data.historialLibros.map(libro => {\n        historialL.push(libro);\n      });\n      res.data.historialCapitulos.map(cap => {\n        historialC.push(cap);\n      });\n      this.setState({\n        historialLibros: historialL,\n        historialCapitulos: historialC,\n        miPerfil: res.data\n      });\n      this.filtrar();\n    }).catch(err => {\n      alert(err.response);\n    });\n  }\n\n  render() {\n    this.state.historialLibros.map(libro => {\n      this.getLibro(libro);\n    });\n    this.state.historialCapitulos.map(capitulo => {\n      this.getCapitulo(capitulo);\n    });\n    var librosParaMapear = this.state.libros;\n    var capitulosParaMapear = this.state.capitulos;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"cardVS col-md-6 offset-md-3 text-light bg-dark\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      className: \"card-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 13\n      }\n    }, \" \", \"Historial de \", this.state.miPerfil.nombre, \" \")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card-body\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 11\n      }\n    }, \"librosParaMapear ?\", this.state.libros.map((libro, index) => /*#__PURE__*/React.createElement(\"div\", {\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 15\n      }\n    }, \" \", libro._id)), \": hola\", this.state.capitulos.map((capitulo, index) => /*#__PURE__*/React.createElement(\"div\", {\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 15\n      }\n    }, \" \", console.log(capitulo), \" \")))));\n  }\n\n}","map":{"version":3,"sources":["/home/manuel/git/BookflixOficialDonna/bf/front-end/src/components/VistaSuscriptor/Historial/Historial.js"],"names":["React","Component","axios","librosApi","capitulosApi","capitulosMuchosApi","existeL","existeC","miperfilApi","MiSuscripcion","constructor","props","getLibro","libro","post","id","headers","xaccess","sessionStorage","getItem","then","res","state","libros","push","data","console","log","getCapitulo","capitulo","capitulos","filtrar","historialLibros","length","existentes","Array","map","_id","existe","setState","librosConInfoTermiado","getLibros","historialCapitulos","capitulosConInfoTerminado","render","token","miPerfil","librosConInfoTerminado","bind","componentDidMount","historialL","historialC","get","cap","catch","err","alert","response","librosParaMapear","capitulosParaMapear","nombre","index"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CAEA;;AACA,MAAMC,SAAS,GAAG,qCAAlB;AACA,MAAMC,YAAY,GAAG,8CAArB;AACA,MAAMC,kBAAkB,GAAG,kDAA3B;AACA,MAAMC,OAAO,GAAG,8CAAhB;AACA,MAAMC,OAAO,GAAG,iDAAhB;AACA,MAAMC,WAAW,GAAG,uCAApB;AAEA,eAAe,MAAMC,aAAN,SAA4BR,SAA5B,CAAsC;AACnDS,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAkBnBC,QAlBmB,GAkBR,MAAOC,KAAP,IAAiB;AAC1B,YAAMX,KAAK,CACRY,IADG,CAEFX,SAFE,EAGF;AAAEY,QAAAA,EAAE,EAAEF,KAAK,CAACA;AAAZ,OAHE,EAIF;AAAEG,QAAAA,OAAO,EAAE;AAAEC,UAAAA,OAAO,EAAEC,cAAc,CAACC,OAAf,CAAuB,OAAvB;AAAX;AAAX,OAJE,EAMHC,IANG,CAMGC,GAAD,IAAS;AACb,aAAKC,KAAL,CAAWC,MAAX,CAAkBC,IAAlB,CAAuBH,GAAG,CAACI,IAA3B;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAYN,GAAG,CAACI,IAAhB;AACD,OATG,CAAN;AAUD,KA7BkB;;AAAA,SA+BnBG,WA/BmB,GA+BL,MAAOC,QAAP,IAAoB;AAChC,YAAM3B,KAAK,CACRY,IADG,CAEFV,YAFE,EAGF;AAAEW,QAAAA,EAAE,EAAEc,QAAQ,CAACA;AAAf,OAHE,EAIF;AAAEb,QAAAA,OAAO,EAAE;AAAEC,UAAAA,OAAO,EAAEC,cAAc,CAACC,OAAf,CAAuB,OAAvB;AAAX;AAAX,OAJE,EAMHC,IANG,CAMGC,GAAD,IAAS;AACb,aAAKC,KAAL,CAAWQ,SAAX,CAAqBN,IAArB,CAA0BH,GAAG,CAACI,IAA9B;AACD,OARG,CAAN;AASD,KAzCkB;;AAAA,SA2CnBM,OA3CmB,GA2CT,YAAY;AACpB;AAEA,UAAI,KAAKT,KAAL,CAAWU,eAAX,CAA2BC,MAA3B,GAAoC,CAAxC,EAA2C;AACzC,YAAIC,UAAU,GAAG,IAAIC,KAAJ,EAAjB;AACA,aAAKb,KAAL,CAAWU,eAAX,CAA2BI,GAA3B,CAA+B,MAAOvB,KAAP,IAAiB;AAC9C,gBAAMX,KAAK,CACRY,IADG,CAEFR,OAFE,EAGF;AACES,YAAAA,EAAE,EAAEF,KAAK,CAACwB;AADZ,WAHE,EAMF;AAAErB,YAAAA,OAAO,EAAE;AAAEC,cAAAA,OAAO,EAAEC,cAAc,CAACC,OAAf,CAAuB,OAAvB;AAAX;AAAX,WANE,EAQHC,IARG,CAQGC,GAAD,IAAS;AACb,gBAAIA,GAAG,CAACI,IAAJ,CAASa,MAAb,EAAqB;AACnBJ,cAAAA,UAAU,CAACV,IAAX,CAAgBX,KAAhB;AACD;AACF,WAZG,CAAN;AAaD,SAdD;AAeA,aAAK0B,QAAL,CAAc;AACZP,UAAAA,eAAe,EAAEE,UADL;AAEZM,UAAAA,qBAAqB,EAAEN;AAFX,SAAd;;AAIA,YAAI,KAAKZ,KAAL,CAAWU,eAAX,CAA2BC,MAA/B,EAAuC;AACrC,eAAKQ,SAAL;AACD;AACF;;AAED,UAAI,KAAKnB,KAAL,CAAWoB,kBAAX,CAA8BT,MAA9B,GAAuC,CAA3C,EAA8C;AAC5C,YAAIC,UAAU,GAAG,IAAIC,KAAJ,EAAjB;AACA,aAAKb,KAAL,CAAWoB,kBAAX,CAA8BN,GAA9B,CAAkC,MAAOP,QAAP,IAAoB;AACpD,gBAAM3B,KAAK,CACRY,IADG,CAEFP,OAFE,EAGF;AACEQ,YAAAA,EAAE,EAAEc,QAAQ,CAACQ;AADf,WAHE,EAMF;AAAErB,YAAAA,OAAO,EAAE;AAAEC,cAAAA,OAAO,EAAEC,cAAc,CAACC,OAAf,CAAuB,OAAvB;AAAX;AAAX,WANE,EAQHC,IARG,CAQGC,GAAD,IAAS;AACb,gBAAIA,GAAG,CAACI,IAAJ,CAASa,MAAb,EAAqB;AACnBJ,cAAAA,UAAU,CAACV,IAAX,CAAgBK,QAAhB;AACD;AACF,WAZG,CAAN;AAaD,SAdD;AAgBA,aAAKU,QAAL,CAAc;AACZG,UAAAA,kBAAkB,EAAER,UADR;AAEZS,UAAAA,yBAAyB,EAAET;AAFf,SAAd;;AAKA,YAAI,KAAKZ,KAAL,CAAWoB,kBAAf,EAAmC;AACjC,eAAKE,MAAL,GADiC,CAEjC;AACD;AACF;AACF,KApGkB;;AAEjB,SAAKtB,KAAL,GAAa;AACXuB,MAAAA,KAAK,EAAE3B,cAAc,CAACC,OAAf,CAAuB,OAAvB,CADI;AAEX2B,MAAAA,QAAQ,EAAE,EAFC;AAGXd,MAAAA,eAAe,EAAE,EAHN;AAIXU,MAAAA,kBAAkB,EAAE,EAJT;AAMXK,MAAAA,sBAAsB,EAAE,EANb;AAOXJ,MAAAA,yBAAyB,EAAE,EAPhB;AASXpB,MAAAA,MAAM,EAAE,EATG;AAUXO,MAAAA,SAAS,EAAE;AAVA,KAAb;AAYA,SAAKC,OAAL,GAAe,KAAKA,OAAL,CAAaiB,IAAb,CAAkB,IAAlB,CAAf;AACA,SAAKpC,QAAL,GAAgB,KAAKA,QAAL,CAAcoC,IAAd,CAAmB,IAAnB,CAAhB;AACA,SAAKpB,WAAL,GAAmB,KAAKA,WAAL,CAAiBoB,IAAjB,CAAsB,IAAtB,CAAnB;AACD;;AAoFD,QAAMC,iBAAN,GAA0B;AACxB,QAAIC,UAAU,GAAG,IAAIf,KAAJ,EAAjB;AACA,QAAIgB,UAAU,GAAG,IAAIhB,KAAJ,EAAjB;AAEA,UAAMjC,KAAK,CACRkD,GADG,CACC5C,WADD,EACc;AAChBQ,MAAAA,OAAO,EAAE;AAAEC,QAAAA,OAAO,EAAEC,cAAc,CAACC,OAAf,CAAuB,OAAvB;AAAX;AADO,KADd,EAIHC,IAJG,CAIGC,GAAD,IAAS;AACbA,MAAAA,GAAG,CAACI,IAAJ,CAASO,eAAT,CAAyBI,GAAzB,CAA8BvB,KAAD,IAAW;AACtCqC,QAAAA,UAAU,CAAC1B,IAAX,CAAgBX,KAAhB;AACD,OAFD;AAGAQ,MAAAA,GAAG,CAACI,IAAJ,CAASiB,kBAAT,CAA4BN,GAA5B,CAAiCiB,GAAD,IAAS;AACvCF,QAAAA,UAAU,CAAC3B,IAAX,CAAgB6B,GAAhB;AACD,OAFD;AAGA,WAAKd,QAAL,CAAc;AACZP,QAAAA,eAAe,EAAEkB,UADL;AAEZR,QAAAA,kBAAkB,EAAES,UAFR;AAGZL,QAAAA,QAAQ,EAAEzB,GAAG,CAACI;AAHF,OAAd;AAKA,WAAKM,OAAL;AACD,KAjBG,EAkBHuB,KAlBG,CAkBIC,GAAD,IAAS;AACdC,MAAAA,KAAK,CAACD,GAAG,CAACE,QAAL,CAAL;AACD,KApBG,CAAN;AAqBD;;AAEDb,EAAAA,MAAM,GAAG;AACP,SAAKtB,KAAL,CAAWU,eAAX,CAA2BI,GAA3B,CAAgCvB,KAAD,IAAW;AACxC,WAAKD,QAAL,CAAcC,KAAd;AACD,KAFD;AAIA,SAAKS,KAAL,CAAWoB,kBAAX,CAA8BN,GAA9B,CAAmCP,QAAD,IAAc;AAC9C,WAAKD,WAAL,CAAiBC,QAAjB;AACD,KAFD;AAGA,QAAI6B,gBAAgB,GAAG,KAAKpC,KAAL,CAAWC,MAAlC;AACA,QAAIoC,mBAAmB,GAAG,KAAKrC,KAAL,CAAWQ,SAArC;AAEA,wBACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,gDAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAI,MAAA,SAAS,EAAC,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,GADH,mBAEgB,KAAKR,KAAL,CAAWwB,QAAX,CAAoBc,MAFpC,EAE4C,GAF5C,CADF,CADF,eAQE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAEG,KAAKtC,KAAL,CAAWC,MAAX,CAAkBa,GAAlB,CAAsB,CAACvB,KAAD,EAAQgD,KAAR,kBACrB;AAAK,MAAA,GAAG,EAAEA,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAmBhD,KAAK,CAACwB,GAAzB,CADD,CAFH,YAMG,KAAKf,KAAL,CAAWQ,SAAX,CAAqBM,GAArB,CAAyB,CAACP,QAAD,EAAWgC,KAAX,kBACxB;AAAK,MAAA,GAAG,EAAEA,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAmBnC,OAAO,CAACC,GAAR,CAAYE,QAAZ,CAAnB,MADD,CANH,CARF,CADF,CADF;AAuBD;;AAnKkD","sourcesContent":["import React, { Component } from \"react\";\nimport axios from \"axios\";\n\n//Constante a la cual hacemos la consulta\nconst librosApi = \"http://localhost:4000/api/libros/me\";\nconst capitulosApi = \"http://localhost:4000/api/libros/verCapitulo\";\nconst capitulosMuchosApi = \"http://localhost:4000/api/libros/capitulosMuchos\";\nconst existeL = \"http://localhost:4000/api/libros/existeLibro\";\nconst existeC = \"http://localhost:4000/api/libros/existeCapitulo\";\nconst miperfilApi = \"http://localhost:4000/api/perfiles/me\";\n\nexport default class MiSuscripcion extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      token: sessionStorage.getItem(\"token\"),\n      miPerfil: [],\n      historialLibros: [],\n      historialCapitulos: [],\n\n      librosConInfoTerminado: [],\n      capitulosConInfoTerminado: [],\n\n      libros: [],\n      capitulos: [],\n    };\n    this.filtrar = this.filtrar.bind(this);\n    this.getLibro = this.getLibro.bind(this);\n    this.getCapitulo = this.getCapitulo.bind(this);\n  }\n  getLibro = async (libro) => {\n    await axios\n      .post(\n        librosApi,\n        { id: libro.libro },\n        { headers: { xaccess: sessionStorage.getItem(\"token\") } }\n      )\n      .then((res) => {\n        this.state.libros.push(res.data);\n        console.log(res.data);\n      });\n  };\n\n  getCapitulo = async (capitulo) => {\n    await axios\n      .post(\n        capitulosApi,\n        { id: capitulo.capitulo },\n        { headers: { xaccess: sessionStorage.getItem(\"token\") } }\n      )\n      .then((res) => {\n        this.state.capitulos.push(res.data);\n      });\n  };\n\n  filtrar = async () => {\n    //filtro los existentes\n\n    if (this.state.historialLibros.length > 0) {\n      var existentes = new Array();\n      this.state.historialLibros.map(async (libro) => {\n        await axios\n          .post(\n            existeL,\n            {\n              id: libro._id,\n            },\n            { headers: { xaccess: sessionStorage.getItem(\"token\") } }\n          )\n          .then((res) => {\n            if (res.data.existe) {\n              existentes.push(libro);\n            }\n          });\n      });\n      this.setState({\n        historialLibros: existentes,\n        librosConInfoTermiado: existentes,\n      });\n      if (this.state.historialLibros.length) {\n        this.getLibros();\n      }\n    }\n\n    if (this.state.historialCapitulos.length > 0) {\n      var existentes = new Array();\n      this.state.historialCapitulos.map(async (capitulo) => {\n        await axios\n          .post(\n            existeC,\n            {\n              id: capitulo._id,\n            },\n            { headers: { xaccess: sessionStorage.getItem(\"token\") } }\n          )\n          .then((res) => {\n            if (res.data.existe) {\n              existentes.push(capitulo);\n            }\n          });\n      });\n\n      this.setState({\n        historialCapitulos: existentes,\n        capitulosConInfoTerminado: existentes,\n      });\n\n      if (this.state.historialCapitulos) {\n        this.render();\n        //this.getCapitulos();\n      }\n    }\n  };\n  async componentDidMount() {\n    var historialL = new Array();\n    var historialC = new Array();\n\n    await axios\n      .get(miperfilApi, {\n        headers: { xaccess: sessionStorage.getItem(\"token\") },\n      })\n      .then((res) => {\n        res.data.historialLibros.map((libro) => {\n          historialL.push(libro);\n        });\n        res.data.historialCapitulos.map((cap) => {\n          historialC.push(cap);\n        });\n        this.setState({\n          historialLibros: historialL,\n          historialCapitulos: historialC,\n          miPerfil: res.data,\n        });\n        this.filtrar();\n      })\n      .catch((err) => {\n        alert(err.response);\n      });\n  }\n\n  render() {\n    this.state.historialLibros.map((libro) => {\n      this.getLibro(libro);\n    });\n\n    this.state.historialCapitulos.map((capitulo) => {\n      this.getCapitulo(capitulo);\n    });\n    var librosParaMapear = this.state.libros;\n    var capitulosParaMapear = this.state.capitulos;\n\n    return (\n      <div className=\"container\">\n        <div className=\"cardVS col-md-6 offset-md-3 text-light bg-dark\">\n          <div>\n            <h2 className=\"card-header\">\n              {\" \"}\n              Historial de {this.state.miPerfil.nombre}{\" \"}\n            </h2>\n          </div>\n\n          <div className=\"card-body\">\n            librosParaMapear ?\n            {this.state.libros.map((libro, index) => (\n              <div key={index}> {libro._id}</div>\n            ))}\n            : hola\n            {this.state.capitulos.map((capitulo, index) => (\n              <div key={index}> {console.log(capitulo)} </div>\n            ))}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}