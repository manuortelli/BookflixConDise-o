{"ast":null,"code":"var _jsxFileName = \"/home/manuel/git/BookflixOficialDonna/bf/front-end/src/components/VistaSuscriptor/Historial/Historial.js\";\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nimport HistorialLibros from \"./HistorialLibros\"; //Constante a la cual hacemos la consulta\n\nconst librosApi = \"http://localhost:4000/api/libros/me\";\nconst capitulosApi = \"http://localhost:4000/api/libros/verCapitulo\";\nconst existeL = \"http://localhost:4000/api/libros/existeLibro\";\nconst existeC = \"http://localhost:4000/api/libros/existeCapitulo\";\nconst miperfilApi = \"http://localhost:4000/api/perfiles/me\";\nexport default class MiSuscripcion extends Component {\n  constructor(props) {\n    super(props);\n\n    this.filtrarFechas = libros => {\n      var res = [];\n      const hoyEntera = new Date();\n      libros.map(lib => {\n        if (lib.lanzamiento != null) {\n          const hoy = JSON.stringify(new Date().getDate());\n          const mes = JSON.stringify(new Date().getMonth() + 1);\n          const año = JSON.stringify(new Date().getFullYear());\n          const lanMes = JSON.stringify(new Date(lib.lanzamiento).getMonth() + 1);\n          const lanHoy = JSON.stringify(new Date(lib.lanzamiento).getDate());\n          const lanAño = JSON.stringify(new Date(lib.lanzamiento).getFullYear());\n          const lanzaEntera = new Date(lib.lanzamiento);\n\n          if (lanHoy == hoy & lanMes == mes & lanAño == año || lanzaEntera < hoyEntera) {\n            if (lib.expiracion != null) {\n              var ven = new Date(lib.expiracion);\n              const venciMes = JSON.stringify(new Date(lib.expiracion).getMonth() + 1);\n              const venciHoy = JSON.stringify(new Date(lib.expiracion).getDate());\n              const venciAño = JSON.stringify(new Date(lib.expiracion).getFullYear());\n              const venciEntera = new Date(lib.expiracion);\n\n              if (venciHoy == hoy & venciMes == mes & venciAño == año || venciEntera > hoyEntera) {\n                res.push(lib);\n              }\n            } else {\n              res.push(lib);\n            }\n          }\n        }\n      });\n      return res;\n    };\n\n    this.renderLibros = () => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 7\n        }\n      }, (console.log(\"entro al renderLibros\"), this.state.libros.map(hola => {\n        console.log(hola);\n      })));\n    };\n\n    this.getLibro = async libro => {\n      await axios.post(librosApi, {\n        id: libro.libro\n      }, {\n        headers: {\n          xaccess: sessionStorage.getItem(\"token\")\n        }\n      }).then(res => {\n        var libroObjetoParaHistorial = {\n          archivo: res.data.archivo,\n          titulo: res.data.titulo,\n          ultimoAcceso: libro.ultimoAcceso,\n          terminado: libro.terminado,\n          libroInfoTotal: res.data,\n          capituloInfoTotal: \"\"\n        };\n        this.setState({\n          historialTodoJunto: [...this.state.historialTodoJunto, libroObjetoParaHistorial]\n        });\n      });\n    };\n\n    this.getCapitulo = async capitulo => {\n      await axios.post(capitulosApi, {\n        id: capitulo.capitulo\n      }, {\n        headers: {\n          xaccess: sessionStorage.getItem(\"token\")\n        }\n      }).then(res => {\n        var capituloObjetoParaHistorial = {\n          archivo: res.data.archivo,\n          titulo: res.data.titulo + res.data.n,\n          ultimoAcceso: capitulo.ultimoAcceso,\n          terminado: capitulo.terminado,\n          libroInfoTotal: \"\",\n          capituloInfoTotal: res.data\n        };\n        this.setState({\n          historialTodoJunto: [...this.state.historialTodoJunto, capituloObjetoParaHistorial]\n        });\n      });\n    };\n\n    this.state = {\n      token: sessionStorage.getItem(\"token\"),\n      miPerfil: [],\n      historialLibros: [],\n      historialCapitulos: [],\n      libros: [],\n      capitulos: [],\n      historialTodoJunto: []\n    };\n    this.getLibro = this.getLibro.bind(this);\n    this.getCapitulo = this.getCapitulo.bind(this);\n    this.renderLibros = this.renderLibros.bind(this);\n  }\n\n  // async filtrarL(historialL) {\n  //   return new Promise(async (res, rej) => {\n  //     if (historialL.length > 0) {\n  //       var existentes = new Array();\n  //       const promesa = historialL.map(async (libro) => {\n  //         return await axios\n  //           .post(\n  //             existeL,\n  //             {\n  //               id: libro._id,\n  //             },\n  //             { headers: { xaccess: sessionStorage.getItem(\"token\") } }\n  //           )\n  //           .then((res) => {\n  //             if (res.data.existe) {\n  //               existentes.push(libro);\n  //             }\n  //             debugger;\n  //           });\n  //       });\n  //       await Promise.all(promesa);\n  //       res(existentes);\n  //     } else {\n  //       res([]);\n  //     }\n  //   });\n  // }\n  // async filtrarC(historialC) {\n  //   return new Promise(async (res, rej) => {\n  //     if (historialC.length > 0) {\n  //       var existentes = new Array();\n  //       const promesa = historialC.map(async (capitulo) => {\n  //         return await axios\n  //           .post(\n  //             existeC,\n  //             {\n  //               id: capitulo._id,\n  //             },\n  //             { headers: { xaccess: sessionStorage.getItem(\"token\") } }\n  //           )\n  //           .then((res) => {\n  //             if (res.data.existe) {\n  //               existentes.push(capitulo);\n  //             }\n  //           });\n  //       });\n  //       await Promise.all(promesa);\n  //       res(existentes);\n  //     } else {\n  //       res([]);\n  //     }\n  //   });\n  // }\n  async componentDidMount() {\n    var historialL = new Array();\n    var historialC = new Array();\n    await axios.get(miperfilApi, {\n      headers: {\n        xaccess: sessionStorage.getItem(\"token\")\n      }\n    }).then(async res => {\n      this.setState({\n        miPerfil: res.data\n      });\n\n      if (res.data.historialLibros) {\n        res.data.historialLibros.map(libro => {\n          historialL.push(libro);\n        }); //historialL = await this.filtrarL(historialL);\n\n        historialL.map(async libro => {\n          await this.getLibro(libro);\n        });\n      }\n\n      if (res.data.historialCapitulos) {\n        res.data.historialCapitulos.map(cap => {\n          historialC.push(cap);\n        }); //historialC = await this.filtrarC(historialC);\n\n        historialC.map(capitulo => {\n          this.getCapitulo(capitulo);\n        });\n      }\n    }).catch(err => {\n      alert(err.response);\n    });\n  }\n\n  render() {\n    const {\n      libros,\n      capitulos\n    } = this.state;\n    console.log(libros);\n    console.log(capitulos);\n    console.log(\"Aca maldito perro\", this.state.historialTodoJunto);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"cardVS col-md-6 offset-md-3 text-light bg-dark\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      className: \"card-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 13\n      }\n    }, \" \", \"Historial de \", this.state.miPerfil.nombre, \" \")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card-body\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 11\n      }\n    }, libros ? this.state.historialTodoJunto.map((libro, index) => /*#__PURE__*/React.createElement(\"div\", {\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 17\n      }\n    }, \" \", libro.titulo)) : /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 15\n      }\n    }, \"No ha visitado ning\\xFAn libro \"), capitulos ? capitulos.map((capitulo, index) => /*#__PURE__*/React.createElement(\"div\", {\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 17\n      }\n    }, \" \", capitulo.titulo, \" ,\", capitulo.tituloLibro)) : /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 15\n      }\n    }, \" No ha visitado ning\\xFAn cap\\xEDtulo \"))));\n  }\n\n}\n/*\n\n\nlinea 177\n\n\n              libros.map((libro, index) => (\n                <div key={index}> {libro.titulo}</div>\n              ))\n\n\n              */","map":{"version":3,"sources":["/home/manuel/git/BookflixOficialDonna/bf/front-end/src/components/VistaSuscriptor/Historial/Historial.js"],"names":["React","Component","axios","HistorialLibros","librosApi","capitulosApi","existeL","existeC","miperfilApi","MiSuscripcion","constructor","props","filtrarFechas","libros","res","hoyEntera","Date","map","lib","lanzamiento","hoy","JSON","stringify","getDate","mes","getMonth","año","getFullYear","lanMes","lanHoy","lanAño","lanzaEntera","expiracion","ven","venciMes","venciHoy","venciAño","venciEntera","push","renderLibros","console","log","state","hola","getLibro","libro","post","id","headers","xaccess","sessionStorage","getItem","then","libroObjetoParaHistorial","archivo","data","titulo","ultimoAcceso","terminado","libroInfoTotal","capituloInfoTotal","setState","historialTodoJunto","getCapitulo","capitulo","capituloObjetoParaHistorial","n","token","miPerfil","historialLibros","historialCapitulos","capitulos","bind","componentDidMount","historialL","Array","historialC","get","cap","catch","err","alert","response","render","nombre","index","tituloLibro"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport HistorialLibros from \"./HistorialLibros\";\n\n//Constante a la cual hacemos la consulta\nconst librosApi = \"http://localhost:4000/api/libros/me\";\nconst capitulosApi = \"http://localhost:4000/api/libros/verCapitulo\";\nconst existeL = \"http://localhost:4000/api/libros/existeLibro\";\nconst existeC = \"http://localhost:4000/api/libros/existeCapitulo\";\nconst miperfilApi = \"http://localhost:4000/api/perfiles/me\";\n\nexport default class MiSuscripcion extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      token: sessionStorage.getItem(\"token\"),\n      miPerfil: [],\n      historialLibros: [],\n      historialCapitulos: [],\n\n      libros: [],\n      capitulos: [],\n      historialTodoJunto: [],\n    };\n    \n    this.getLibro = this.getLibro.bind(this);\n    this.getCapitulo = this.getCapitulo.bind(this);\n    this.renderLibros = this.renderLibros.bind(this);\n  }\n\n\n  filtrarFechas = (libros) => {\n    var res = [];\n    const hoyEntera = new Date();\n    libros.map((lib) => {\n      if (lib.lanzamiento != null) {\n        const hoy = JSON.stringify(new Date().getDate());\n        const mes = JSON.stringify(new Date().getMonth() + 1);\n        const año = JSON.stringify(new Date().getFullYear());\n\n        const lanMes = JSON.stringify(new Date(lib.lanzamiento).getMonth() + 1);\n\n        const lanHoy = JSON.stringify(new Date(lib.lanzamiento).getDate());\n\n        const lanAño = JSON.stringify(new Date(lib.lanzamiento).getFullYear());\n        const lanzaEntera = new Date(lib.lanzamiento);\n        if (\n          (lanHoy == hoy) & (lanMes == mes) & (lanAño == año) ||\n          lanzaEntera < hoyEntera\n        ) {\n          if (lib.expiracion != null) {\n            var ven = new Date(lib.expiracion);\n            const venciMes = JSON.stringify(\n              new Date(lib.expiracion).getMonth() + 1\n            );\n\n            const venciHoy = JSON.stringify(new Date(lib.expiracion).getDate());\n\n            const venciAño = JSON.stringify(\n              new Date(lib.expiracion).getFullYear()\n            );\n            const venciEntera = new Date(lib.expiracion);\n\n            if (\n              (venciHoy == hoy) & (venciMes == mes) & (venciAño == año) ||\n              venciEntera > hoyEntera\n            ) {\n              res.push(lib);\n            }\n          } else {\n            res.push(lib);\n          }\n        }\n      }\n    });\n    return res;\n  };\n\n  renderLibros = () => {\n    return (\n      <div>\n        {\n          (console.log(\"entro al renderLibros\"),\n          this.state.libros.map((hola) => {\n            console.log(hola);\n          }))\n        }\n      </div>\n    );\n  };\n\n  getLibro = async (libro) => {\n    await axios\n      .post(\n        librosApi,\n        { id: libro.libro },\n        { headers: { xaccess: sessionStorage.getItem(\"token\") } }\n      )\n      .then((res) => {\n        var libroObjetoParaHistorial = {\n          archivo: res.data.archivo,\n          titulo: res.data.titulo,\n          ultimoAcceso: libro.ultimoAcceso,\n          terminado: libro.terminado,\n          libroInfoTotal: res.data,\n          capituloInfoTotal: \"\",\n        };\n        this.setState({\n          historialTodoJunto: [\n            ...this.state.historialTodoJunto,\n            libroObjetoParaHistorial,\n          ],\n        });\n      });\n  };\n\n  getCapitulo = async (capitulo) => {\n    await axios\n      .post(\n        capitulosApi,\n        { id: capitulo.capitulo },\n        { headers: { xaccess: sessionStorage.getItem(\"token\") } }\n      )\n      .then((res) => {\n        var capituloObjetoParaHistorial = {\n          archivo: res.data.archivo,\n          titulo: res.data.titulo + res.data.n,\n          ultimoAcceso: capitulo.ultimoAcceso,\n          terminado: capitulo.terminado,\n          libroInfoTotal: \"\",\n          capituloInfoTotal: res.data,\n        };\n        this.setState({\n          historialTodoJunto: [\n            ...this.state.historialTodoJunto,\n            capituloObjetoParaHistorial,\n          ],\n        });\n      });\n  };\n\n  // async filtrarL(historialL) {\n  //   return new Promise(async (res, rej) => {\n  //     if (historialL.length > 0) {\n  //       var existentes = new Array();\n\n  //       const promesa = historialL.map(async (libro) => {\n  //         return await axios\n  //           .post(\n  //             existeL,\n  //             {\n  //               id: libro._id,\n  //             },\n  //             { headers: { xaccess: sessionStorage.getItem(\"token\") } }\n  //           )\n  //           .then((res) => {\n  //             if (res.data.existe) {\n  //               existentes.push(libro);\n  //             }\n  //             debugger;\n  //           });\n  //       });\n  //       await Promise.all(promesa);\n\n  //       res(existentes);\n  //     } else {\n  //       res([]);\n  //     }\n  //   });\n  // }\n  // async filtrarC(historialC) {\n  //   return new Promise(async (res, rej) => {\n  //     if (historialC.length > 0) {\n  //       var existentes = new Array();\n\n  //       const promesa = historialC.map(async (capitulo) => {\n  //         return await axios\n  //           .post(\n  //             existeC,\n  //             {\n  //               id: capitulo._id,\n  //             },\n  //             { headers: { xaccess: sessionStorage.getItem(\"token\") } }\n  //           )\n  //           .then((res) => {\n  //             if (res.data.existe) {\n  //               existentes.push(capitulo);\n  //             }\n  //           });\n  //       });\n  //       await Promise.all(promesa);\n\n  //       res(existentes);\n  //     } else {\n  //       res([]);\n  //     }\n  //   });\n  // }\n\n  async componentDidMount() {\n    var historialL = new Array();\n    var historialC = new Array();\n\n    await axios\n      .get(miperfilApi, {\n        headers: { xaccess: sessionStorage.getItem(\"token\") },\n      })\n      .then(async (res) => {\n        this.setState({\n          miPerfil: res.data,\n        });\n        if (res.data.historialLibros) {\n          res.data.historialLibros.map((libro) => {\n            historialL.push(libro);\n          });\n          //historialL = await this.filtrarL(historialL);\n          historialL.map(async (libro) => {\n            await this.getLibro(libro);\n          });\n        }\n        if (res.data.historialCapitulos) {\n          res.data.historialCapitulos.map((cap) => {\n            historialC.push(cap);\n          });\n          //historialC = await this.filtrarC(historialC);\n          historialC.map((capitulo) => {\n            this.getCapitulo(capitulo);\n          });\n        }\n      })\n      .catch((err) => {\n        alert(err.response);\n      });\n  }\n\n  render() {\n    const { libros, capitulos } = this.state;\n    console.log(libros);\n    console.log(capitulos);\n    console.log(\"Aca maldito perro\", this.state.historialTodoJunto)\n    return (\n      <div className=\"container\">\n        <div className=\"cardVS col-md-6 offset-md-3 text-light bg-dark\">\n          <div>\n            <h2 className=\"card-header\">\n              {\" \"}\n              Historial de {this.state.miPerfil.nombre}{\" \"}\n            </h2>\n          </div>\n\n          <div className=\"card-body\">\n            {libros ? (\n              this.state.historialTodoJunto.map((libro, index) => (\n                <div key={index}> {libro.titulo}</div>\n              ))\n            ) : (\n              <div>No ha visitado ningún libro </div>\n            )}\n            {capitulos ? (\n              capitulos.map((capitulo, index) => (\n                <div key={index}>\n                  {\" \"}\n                  {capitulo.titulo} ,{capitulo.tituloLibro}\n                </div>\n              ))\n            ) : (\n              <div> No ha visitado ningún capítulo </div>\n            )}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n/*\n\n\nlinea 177\n\n\n              libros.map((libro, index) => (\n                <div key={index}> {libro.titulo}</div>\n              ))\n\n\n              */\n"]},"metadata":{},"sourceType":"module"}