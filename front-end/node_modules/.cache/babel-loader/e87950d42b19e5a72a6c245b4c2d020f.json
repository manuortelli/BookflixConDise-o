{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jhon\\\\Desktop\\\\proyectos-IS1\\\\version4.0\\\\bf\\\\front-end\\\\src\\\\components\\\\VistaSuscriptor\\\\Perfiles\\\\AgregarPerfil.js\";\nimport React, { Component } from 'react';\nimport axios from \"axios\";\nimport { Link } from 'react-router-dom';\nimport Perfiles from './ListadoPerfiles';\nimport { confirmAlert } from 'react-confirm-alert'; // Import\n\nimport 'react-confirm-alert/src/react-confirm-alert.css';\nconst misPerfiles = \"http://localhost:4000/api/suscriptores/loginPerfiles\";\nconst cargar = \"http://localhost:4000/api/suscriptores/agregarPerfil\";\nconst borrarPerfil = \"http://localhost:4000/api/perfiles/eliminar\";\nconst loginPerfilApi = \"http://localhost:4000/api/suscriptores/loginPerfil\";\nconst verPadre = \"http://localhost:4000/api/suscriptores/me\";\n\nclass AgregarPerfil extends Component {\n  constructor() {\n    super();\n\n    this.ingresarPerfil = async (e, idllega) => {\n      console.log(\"id que llega \", idllega);\n      await axios.post(loginPerfilApi, {\n        id: idllega\n      }, {\n        headers: {\n          xaccess: sessionStorage.getItem(\"token\")\n        }\n      }).then(res => {\n        const {\n          user,\n          token\n        } = res.data;\n        sessionStorage.setItem(\"token\", token);\n        sessionStorage.setItem(\"perfilUser\", JSON.stringify(user));\n        sessionStorage.setItem(\"perfil\", res.data.user);\n        sessionStorage.setItem(\"perfilID\", user._id);\n        return window.location = '/homesuscriptor';\n      });\n    };\n\n    this.verPadre = async () => {\n      await axios.get(verPadre, {\n        headers: {\n          'xaccess': sessionStorage.getItem('token')\n        }\n      }).then(res => {\n        this.setState({\n          suscripcion: res.data\n        });\n        console.log(\"Respuesta de consulta ver padre\", res.data);\n      }).catch(err => {\n        alert(err.response);\n      });\n    };\n\n    this.borrarperfil = async (e, idllega) => {\n      if (this.state.miPerfil._id != idllega) {\n        if (this.state.misPerfiles.length > 1) {\n          await axios.post(borrarPerfil, {\n            suscriptorId: this.state.suscripcion._id,\n            perfilId: idllega\n          }, {\n            headers: {\n              'xaccess': sessionStorage.getItem('token')\n            }\n          }).then(res => {\n            console.log(res.data);\n            alert(\"¡Perfil eliminado con exito!\");\n            window.location.reload(true);\n          }).catch(err => {\n            alert(err.response);\n          });\n        } else {\n          alert(\"No puedes eliminar el unico perfil que tienes\");\n        }\n      } else {\n        alert(\"No podes eliminar el perfil en el que estas actualmente\");\n      }\n    };\n\n    this.getDatos = async () => {\n      await axios.get(misPerfiles, {\n        headers: {\n          'xaccess': sessionStorage.getItem('tokenSuscriptor')\n        }\n      }).then(res => {\n        this.setState({\n          misPerfiles: res.data\n        });\n      }).catch(err => {\n        alert(err.response);\n      });\n    };\n\n    this.componentDidMount = async () => {\n      this.getDatos();\n      this.verPadre();\n    };\n\n    this.verificarNombre = e => {\n      var nombreExistente = false;\n      e.preventDefault();\n      this.state.misPerfiles.map(perfil => {\n        if (perfil.nombre == this.state.nombre) {\n          alert(\"Debes usar otro nombre de perfil, este ya está en uso\");\n          nombreExistente = true;\n        }\n      });\n      this.onSubmit(nombreExistente);\n    };\n\n    this.onSubmit = async nombreExistente => {\n      if (nombreExistente == false) {\n        if (this.state.suscripcion.suscripcion === \"REGULAR\" && this.state.misPerfiles.length < 2) {\n          await axios.post(cargar, {\n            id: this.state.suscripcion._id,\n            nombre: this.state.nombre\n          }, {\n            headers: {\n              xaccess: this.state.token\n            }\n          }).then(res => {\n            alert(\"¡Perfil agregado con exito!\");\n            window.location.reload(true);\n          }).catch(err => {\n            console.log(err);\n            window.location.reload(true);\n          });\n        } else if (this.state.suscripcion.suscripcion === \"PREMIUM\" && this.state.misPerfiles.length < 4) {\n          await axios.post(cargar, {\n            id: this.state.suscripcion._id,\n            nombre: this.state.nombre\n          }, {\n            headers: {\n              xaccess: this.state.token\n            }\n          }).then(res => {\n            alert(\"¡Perfil agregado con exito!\");\n            window.location.reload(true);\n          }).catch(err => {\n            console.log(err);\n            alert(\"¡Perfil agregado con exito!\");\n            window.location.reload(true);\n          });\n        } else {\n          alert(\"No podes agregar otro perfil, ya estas en tu maximo permitido, borrá alguno para agregar otro\");\n        }\n      }\n    };\n\n    this.onInputChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.state = {\n      token: sessionStorage.getItem(\"token\"),\n      suscripcion: [],\n      miPerfil: JSON.parse(sessionStorage.getItem(\"perfilUser\")),\n      nombre: '',\n      misPerfiles: [],\n      nombreUsado: false\n    };\n    this.onInputChange = this.onInputChange.bind(this);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"cardAgregarPerfil col-md-6 offset-md-3 text-light bg-dark \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      className: \"card-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 17\n      }\n    }, \"Perfiles de \", this.state.suscripcion.nombre, \" \"), /*#__PURE__*/React.createElement(\"h5\", {\n      className: \"card-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 17\n      }\n    }, \"Suscripci\\xF3n: \", this.state.suscripcion.suscripcion, \" \"), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      className: \"card-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 23\n      }\n    }, \"Sus perfiles: \")), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 17\n      }\n    }, this.state.misPerfiles.map(perfil => /*#__PURE__*/React.createElement(\"div\", {\n      className: \"cardListarPerfil\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 29\n      }\n    }, \" \", perfil.nombre, \" \"), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-outline-danger itemBoton float-right\",\n      onClick: () => confirmAlert({\n        customUI: ({\n          onClose\n        }) => {\n          return /*#__PURE__*/React.createElement(\"div\", {\n            className: \"custom-ui\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 41\n            }\n          }, /*#__PURE__*/React.createElement(\"h1\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 45\n            }\n          }, \"\\xBFEst\\xE1 seguro?\"), ' ', /*#__PURE__*/React.createElement(\"p\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 224,\n              columnNumber: 45\n            }\n          }, \"\\xBFDesea eliminar este perfil?\"), ' ', /*#__PURE__*/React.createElement(\"button\", {\n            onClick: onClose,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 226,\n              columnNumber: 45\n            }\n          }, \"No\"), \" \", ' ', /*#__PURE__*/React.createElement(\"button\", {\n            onClick: e => {\n              this.borrarperfil(e, perfil.id);\n              onClose();\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 227,\n              columnNumber: 45\n            }\n          }, \"Si, deseo eliminar\"));\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 29\n      }\n    }, \"Eliminar\"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: e => {\n        this.ingresarPerfil(e, perfil.id);\n      },\n      className: \"btn btn-outline-danger itemBoton float-right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 29\n      }\n    }, \"Ingresar\")))), /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.verificarNombre,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      className: \"form-control \",\n      id: \"nombre\",\n      name: \"nombre\",\n      onChange: this.onInputChange,\n      placeholder: \"Nombre del nuevo perfil \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"btn  btn-outline-danger itemBoton float-right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 21\n      }\n    }, \"Agregar perfil\")));\n  }\n\n}\n\nexport default AgregarPerfil;","map":{"version":3,"sources":["C:/Users/Jhon/Desktop/proyectos-IS1/version4.0/bf/front-end/src/components/VistaSuscriptor/Perfiles/AgregarPerfil.js"],"names":["React","Component","axios","Link","Perfiles","confirmAlert","misPerfiles","cargar","borrarPerfil","loginPerfilApi","verPadre","AgregarPerfil","constructor","ingresarPerfil","e","idllega","console","log","post","id","headers","xaccess","sessionStorage","getItem","then","res","user","token","data","setItem","JSON","stringify","_id","window","location","get","setState","suscripcion","catch","err","alert","response","borrarperfil","state","miPerfil","length","suscriptorId","perfilId","reload","getDatos","componentDidMount","verificarNombre","nombreExistente","preventDefault","map","perfil","nombre","onSubmit","onInputChange","target","name","value","parse","nombreUsado","bind","render","customUI","onClose"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\n\r\nimport axios from \"axios\";\r\nimport { Link } from 'react-router-dom';\r\nimport Perfiles from './ListadoPerfiles';\r\nimport { confirmAlert } from 'react-confirm-alert'; // Import\r\nimport 'react-confirm-alert/src/react-confirm-alert.css';\r\n\r\nconst misPerfiles = \"http://localhost:4000/api/suscriptores/loginPerfiles\";\r\nconst cargar = \"http://localhost:4000/api/suscriptores/agregarPerfil\";\r\nconst borrarPerfil = \"http://localhost:4000/api/perfiles/eliminar\";\r\nconst loginPerfilApi = \"http://localhost:4000/api/suscriptores/loginPerfil\";\r\nconst verPadre = \"http://localhost:4000/api/suscriptores/me\"\r\n\r\nclass AgregarPerfil extends Component {\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            token: sessionStorage.getItem(\"token\"),\r\n            suscripcion:[],\r\n            miPerfil: JSON.parse(sessionStorage.getItem(\"perfilUser\")),\r\n            nombre: '',\r\n            misPerfiles: [],\r\n            nombreUsado:false,\r\n        }\r\n    \r\n        this.onInputChange = this.onInputChange.bind(this);\r\n    \r\n    \r\n    \r\n    }\r\n    \r\n    ingresarPerfil = async (e, idllega) => {\r\n        console.log(\"id que llega \", idllega)\r\n        await axios\r\n            .post(\r\n                loginPerfilApi,\r\n                { id: idllega },\r\n                {\r\n                    headers: { xaccess: sessionStorage.getItem(\"token\") },\r\n                }\r\n            )\r\n            .then((res) => {\r\n    \r\n                const { user, token } = res.data;\r\n                sessionStorage.setItem(\"token\", token);\r\n                sessionStorage.setItem(\"perfilUser\", JSON.stringify(user));\r\n                sessionStorage.setItem(\"perfil\", res.data.user);\r\n                sessionStorage.setItem(\"perfilID\", user._id);\r\n                return (window.location = '/homesuscriptor')\r\n    \r\n    \r\n            });\r\n    \r\n    }\r\n\r\n    verPadre = async () => {\r\n        await axios.get(verPadre,\r\n           {\r\n                headers: { 'xaccess': sessionStorage.getItem('token') }\r\n            })\r\n            .then(res => {\r\n                this.setState({\r\n                    suscripcion:res.data\r\n                })\r\n                console.log(\"Respuesta de consulta ver padre\",res.data)\r\n                \r\n            })\r\n            .catch(err => {\r\n                alert(err.response)\r\n            });\r\n    }\r\n    \r\n    borrarperfil = async (e, idllega) => {\r\n       if (this.state.miPerfil._id != idllega){ \r\n        if (this.state.misPerfiles.length > 1) {\r\n            await axios.post(borrarPerfil,\r\n                {\r\n                    suscriptorId: this.state.suscripcion._id,\r\n                    perfilId: idllega\r\n                },\r\n                {\r\n                    headers: { 'xaccess': sessionStorage.getItem('token') }\r\n                })\r\n                .then(res => {\r\n                    console.log(res.data)\r\n                    alert(\"¡Perfil eliminado con exito!\")\r\n                    window.location.reload(true);\r\n                    \r\n                })\r\n                .catch(err => {\r\n                    alert(err.response)\r\n                });\r\n    \r\n        } else { alert(\"No puedes eliminar el unico perfil que tienes\") }\r\n    } else {\r\n        alert(\"No podes eliminar el perfil en el que estas actualmente\")\r\n    }\r\n    }\r\n    \r\n    \r\n    \r\n    \r\n    getDatos = async () => {\r\n        await axios.get(misPerfiles,\r\n    \r\n            {\r\n                headers: { 'xaccess': sessionStorage.getItem('tokenSuscriptor') }\r\n            })\r\n            .then(res => {\r\n                this.setState({\r\n                    misPerfiles: res.data\r\n                })\r\n            })\r\n            .catch(err => {\r\n                alert(err.response)\r\n            });\r\n    \r\n    \r\n    \r\n    };\r\n    \r\n    \r\n    \r\n    componentDidMount = async () => {\r\n        this.getDatos();\r\n        this.verPadre();\r\n    }\r\n    \r\n    verificarNombre = (e) => {\r\n      var nombreExistente=false;\r\n      e.preventDefault();\r\n      this.state.misPerfiles.map ( perfil => {\r\n        if (perfil.nombre == this.state.nombre){\r\n            alert(\"Debes usar otro nombre de perfil, este ya está en uso\");\r\n            nombreExistente=true;\r\n        } })\r\n       \r\n          this.onSubmit(nombreExistente)\r\n        \r\n      \r\n    }\r\n    \r\n    \r\n    onSubmit = async (nombreExistente) => {\r\n      if (nombreExistente == false) {\r\n         if  (this.state.suscripcion.suscripcion === \"REGULAR\" && this.state.misPerfiles.length < 2) {\r\n            await axios.post(cargar,\r\n                {\r\n                    id: this.state.suscripcion._id,\r\n                    nombre: this.state.nombre\r\n                },\r\n                { headers: { xaccess: this.state.token } }\r\n            )\r\n                .then((res) => {\r\n                  alert(\"¡Perfil agregado con exito!\");\r\n                    window.location.reload(true);\r\n    \r\n    \r\n                })\r\n    \r\n                .catch((err) => {\r\n                    console.log(err);\r\n                    window.location.reload(true);\r\n    \r\n                });\r\n        } else if (this.state.suscripcion.suscripcion === \"PREMIUM\" && this.state.misPerfiles.length < 4) {\r\n            await axios.post(cargar,\r\n                {\r\n                    id: this.state.suscripcion._id,\r\n                    nombre: this.state.nombre\r\n                },\r\n                { headers: { xaccess: this.state.token } }\r\n            )\r\n                .then((res) => {\r\n                         alert(\"¡Perfil agregado con exito!\");\r\n                    window.location.reload(true);\r\n    \r\n                })\r\n    \r\n                .catch((err) => {\r\n                    console.log(err);\r\n                    alert(\"¡Perfil agregado con exito!\");\r\n                    window.location.reload(true);\r\n    \r\n                });\r\n        } else {\r\n            alert(\"No podes agregar otro perfil, ya estas en tu maximo permitido, borrá alguno para agregar otro\")\r\n    \r\n        }\r\n      }\r\n      \r\n    };\r\n    \r\n    \r\n    onInputChange = (e) => {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        })\r\n    \r\n    };\r\n    \r\n    \r\n    render() {\r\n        return (\r\n    \r\n            <div className=\"cardAgregarPerfil col-md-6 offset-md-3 text-light bg-dark \">\r\n                <h4 className=\"card-header\">Perfiles de {this.state.suscripcion.nombre} </h4>\r\n                <h5 className=\"card-header\">Suscripción: {this.state.suscripcion.suscripcion} </h5>\r\n                <span><h5 className=\"card-header\">Sus perfiles: </h5></span>\r\n    \r\n                <div>\r\n    \r\n                    {this.state.misPerfiles.map(perfil =>\r\n                        <div className=\"cardListarPerfil\">\r\n    \r\n                            <h5> {perfil.nombre} </h5>\r\n                            <button className=\"btn btn-outline-danger itemBoton float-right\" onClick={() => confirmAlert({\r\n                                customUI: ({ onClose }) => {\r\n                                    return (\r\n                                        <div className='custom-ui'>\r\n                                            <h1>¿Está seguro?</h1>\r\n                                            {' '}\r\n                                            <p>¿Desea eliminar este perfil?</p>\r\n                                            {' '}\r\n                                            <button onClick={onClose}>No</button> {' '}\r\n                                            <button\r\n                                                onClick={(e) => { this.borrarperfil(e, perfil.id) \r\n                                                    onClose();\r\n    \r\n    \r\n    \r\n                                                }}\r\n                                            >\r\n                                                Si, deseo eliminar\r\n                                </button> \r\n                                </div>\r\n                                    );\r\n                                }\r\n                                         })}>Eliminar</button>\r\n                               \r\n                            <button onClick={(e) => { this.ingresarPerfil(e, perfil.id) }} className=\"btn btn-outline-danger itemBoton float-right\">Ingresar</button>\r\n    \r\n                        </div>\r\n    \r\n                    )}\r\n    \r\n                </div>\r\n    \r\n                <form onSubmit={this.verificarNombre} >\r\n    \r\n                    <div className=\"form-group\">\r\n                        <input className=\"form-control \"\r\n                            id=\"nombre\"\r\n                            name=\"nombre\"\r\n                            onChange={this.onInputChange}\r\n                            placeholder=\"Nombre del nuevo perfil \"\r\n                        >\r\n                        </input>\r\n                    </div>\r\n    \r\n    \r\n    \r\n                    <button type=\"submit\" className=\"btn  btn-outline-danger itemBoton float-right\">\r\n                        Agregar perfil\r\n                            </button>\r\n    \r\n    \r\n                </form>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n            </div>\r\n    \r\n    \r\n        )\r\n    }\r\n    }\r\n\r\nexport default AgregarPerfil;"]},"metadata":{},"sourceType":"module"}